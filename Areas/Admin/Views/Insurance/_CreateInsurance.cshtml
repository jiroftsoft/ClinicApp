@model ClinicApp.ViewModels.CreateInsuranceViewModel

@{
    // این فایل یک Partial View است و نیازی به Layout ندارد
    Layout = null;
}

@using (Html.BeginForm("Create", "Insurance", FormMethod.Post, new { id = "createInsuranceForm" }))
{
    @Html.AntiForgeryToken()

    <div class="modal-body">
        <div id="validationSummary" class="alert alert-danger d-none p-2 mb-3">
            <h6 class="alert-heading small"><i class="fas fa-exclamation-circle"></i> خطای اعتبارسنجی</h6>
            <ul id="validationErrors" class="mb-0 small ps-4"></ul>
        </div>

        <div class="row g-3">
            <div class="col-12">
                @Html.LabelFor(model => model.Name, new { @class = "form-label fw-bold" })
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "مثال: بیمه تامین اجتماعی" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger small" })
            </div>

            <div class="col-12">
                @Html.LabelFor(model => model.Description, new { @class = "form-label fw-bold" })
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 2, placeholder = "توضیحات (اختیاری)" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger small" })
            </div>

            <div class="col-md-6">
                @Html.LabelFor(model => model.DefaultPatientShare, "سهم بیمار (پیش‌فرض)", new { @class = "form-label fw-bold" })
                <div class="input-group">
                    @Html.TextBoxFor(model => model.DefaultPatientShare, new
                    {
                        @class = "form-control",
                        type = "number",
                        min = "0",
                        max = "100",
                        step = "0.01",
                        placeholder = "مثال: 30"
                    })
                    <span class="input-group-text">%</span>
                </div>
                @Html.ValidationMessageFor(model => model.DefaultPatientShare, "", new { @class = "text-danger small" })
            </div>

            <div class="col-md-6">
                @Html.LabelFor(model => model.DefaultInsurerShare, "سهم بیمه (پیش‌فرض)", new { @class = "form-label fw-bold" })
                <div class="input-group">
                    @Html.TextBoxFor(model => model.DefaultInsurerShare, new
                    {
                        @class = "form-control",
                        type = "number",
                        min = "0",
                        max = "100",
                        step = "0.01",
                        placeholder = "مثال: 70",
                        @readonly = "readonly", // <-- این خط اضافه شده
                        tabindex = "-1"         // <-- این خط برای بهبود تجربه کاربری اضافه شده
                    })
                    <span class="input-group-text">%</span>
                </div>
                @Html.ValidationMessageFor(model => model.DefaultInsurerShare, "", new { @class = "text-danger small" })
            </div>

            <div id="shareValidationWarning" class="col-12 alert alert-warning d-none p-2 small">
                <i class="fas fa-exclamation-triangle"></i> مجموع سهم بیمار و بیمه باید برابر با 100% باشد.
            </div>

            <div class="col-12">
                <div class="form-check form-switch">
                    @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-check-input" })
                    @Html.LabelFor(model => model.IsActive, new { @class = "form-check-label fw-bold" })
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary btn-medical" data-bs-dismiss="modal">
            <i class="fas fa-times me-1"></i> انصراف
        </button>
        <button type="submit" class="btn btn-primary-medical btn-medical" id="saveInsuranceBtn">
            <i class="fas fa-save me-1"></i> ایجاد بیمه
        </button>
    </div>
}

<script>
    (function ($) {
        "use strict";

        function setupCreateInsuranceForm() {
            const patientShareInput = $('#DefaultPatientShare');
            const insurerShareInput = $('#DefaultInsurerShare');
            const shareWarning = $('#shareValidationWarning');

            function updateShares() {
                // مقدار ورودی کاربر را بخوان و مطمئن شو که عدد است
                const patientShare = parseFloat(patientShareInput.val().replace(',', '.')) || 0;
                let insurerShare = 0;

                // فقط اگر سهم بیمار معتبر بود، سهم بیمه را محاسبه کن
                if (patientShare >= 0 && patientShare <= 100) {
                    insurerShare = 100 - patientShare;
                    // مقدار محاسبه شده را با دو رقم اعشار در فیلد بیمه قرار بده
                    insurerShareInput.val(insurerShare.toFixed(2));
                } else {
                    // اگر ورودی نامعتبر بود، فیلد بیمه را خالی کن
                    insurerShareInput.val('');
                }

                // بررسی نهایی برای نمایش هشدار (اختیاری ولی خوب است که باشد)
                const total = patientShare + insurerShare;
                if (Math.abs(total - 100) > 0.01 && patientShareInput.val() !== '') {
                    shareWarning.removeClass('d-none');
                } else {
                    shareWarning.addClass('d-none');
                }
            }

            // رویداد را فقط به فیلد سهم بیمار متصل کن
            patientShareInput.on('input', updateShares);

            // اتصال رویداد ارسال فرم
            $('#createInsuranceForm').off('submit').on('submit', window.handleFormSubmit);

            // محاسبه اولیه در زمان بارگذاری فرم
            updateShares();
        }

        $(document).ready(function () {
            setupCreateInsuranceForm();
        });

    })(jQuery);
</script>