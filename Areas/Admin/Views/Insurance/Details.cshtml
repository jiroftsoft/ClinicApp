@model ClinicApp.ViewModels.InsuranceDetailsViewModel
@{
    ViewBag.Title = "جزئیات بیمه";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- کانتینر مودال‌ها -->
<div id="modalContainer"></div>

<!-- افزودن AntiForgeryToken برای درخواست‌های امن -->
@Html.AntiForgeryToken()

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-header d-flex justify-content-between align-items-center bg-white">
                    <h5 class="card-title mb-0">جزئیات بیمه: @Html.DisplayFor(model => model.Name)</h5>
                    <div>
                        <a href="javascript:void(0)" class="btn btn-warning btn-sm mr-1" id="btnEditInsurance">
                            <i class="fas fa-edit"></i> ویرایش
                        </a>
                        <a href="@Url.Action("Index", "Insurance")" class="btn btn-secondary btn-sm">
                            <i class="fas fa-arrow-left"></i> بازگشت به لیست
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bold">نام بیمه:</label>
                                <div class="col-sm-8 col-form-label">
                                    @Html.DisplayFor(model => model.Name)
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bold">وضعیت:</label>
                                <div class="col-sm-8 col-form-label">
                                    <span class="badge @(Model.IsActive ? "badge-success" : "badge-secondary")">
                                        @(Model.IsActive ? "فعال" : "غیرفعال")
                                    </span>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bold">سهم پیش‌فرض بیمار:</label>
                                <div class="col-sm-8 col-form-label">
                                    @Model.DefaultPatientShare%
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bold">سهم پیش‌فرض بیمه:</label>
                                <div class="col-sm-8 col-form-label">
                                    @Model.DefaultInsurerShare%
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bold">تعداد تعرفه‌ها:</label>
                                <div class="col-sm-8 col-form-label">
                                    @Model.TariffCount
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bold">تاریخ ایجاد:</label>
                                <div class="col-sm-8 col-form-label">
                                    @Model.CreatedAtShamsi (@Model.CreatedAt.ToString("HH:mm"))
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label font-weight-bold">ایجاد شده توسط:</label>
                                <div class="col-sm-8 col-form-label">
                                    @Html.DisplayFor(model => model.CreatedByUser)
                                </div>
                            </div>
                            @if (Model.UpdatedAt.HasValue)
                            {
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label font-weight-bold">تاریخ آخرین ویرایش:</label>
                                    <div class="col-sm-8 col-form-label">
                                        @Model.UpdatedAtShamsi (@Model.UpdatedAt.Value.ToString("HH:mm"))
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label font-weight-bold">ویرایش شده توسط:</label>
                                    <div class="col-sm-8 col-form-label">
                                        @Html.DisplayFor(model => model.UpdatedByUser)
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <div class="row mt-3">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="font-weight-bold">توضیحات:</label>
                                    <div class="border p-3 bg-light rounded">
                                        @Html.DisplayFor(model => model.Description)
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- بخش تعرفه‌های بیمه -->
            <div class="card shadow-sm mt-3">
                <div class="card-header d-flex justify-content-between align-items-center bg-white">
                    <h5 class="card-title mb-0">تعرفه‌های بیمه</h5>
                    <button type="button" class="btn btn-primary btn-sm" id="btnAddTariff">
                        <i class="fas fa-plus"></i> افزودن تعرفه جدید
                    </button>
                </div>
                <div class="card-body p-0">
                    <div id="tariffsContainer">
                        @Html.Partial("_InsuranceTariffsListPartial", new List<ClinicApp.ViewModels.InsuranceTariffViewModel>())
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // تعریف توابع اصلی در سطح صفحه
            window.showSuccessAlert = function(message) {
                Swal.fire({
                    icon: 'success',
                    title: 'موفقیت',
                    text: message,
                    confirmButtonText: 'باشه',
                    timer: 2000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer);
                        toast.addEventListener('mouseleave', Swal.resumeTimer);
                    }
                });
            };

            window.showErrorAlert = function(message) {
                Swal.fire({
                    icon: 'error',
                    title: 'خطا',
                    text: message,
                    confirmButtonText: 'بستن',
                    customClass: {
                        popup: 'animated bounceInDown'
                    }
                });
            };

            // تعریف تابع برای دریافت توکن CSRF
            window.getAntiForgeryToken = function() {
                return $('input[name="__RequestVerificationToken"]').val();
            };

            // افزودن توکن به تمام درخواست‌های Ajax
            $.ajaxPrefilter(function (options, originalOptions, jqXHR) {
                if (options.type && options.type.toLowerCase() === "post") {
                    // اطمینان از وجود توکن در داده‌های درخواست
                    if (!options.data || !options.data.includes('__RequestVerificationToken')) {
                        const token = getAntiForgeryToken();
                        if (token) {
                            if (options.data) {
                                options.data += '&__RequestVerificationToken=' + encodeURIComponent(token);
                            } else {
                                options.data = '__RequestVerificationToken=' + encodeURIComponent(token);
                            }
                        }
                    }
                }
            });

            // بارگیری اولیه تعرفه‌ها
            loadTariffs();

            // مدیریت ویرایش بیمه
            $('#btnEditInsurance').on('click', function () {
                showLoading();
                $.ajax({
                    url: '@Url.Action("Edit", "Insurance")',
                    type: 'GET',
                     { id: @Model.InsuranceId },
                    success: function (result) {
                        $('#modalContainer').html(result);
                        if (typeof setupEditInsuranceForm === 'function') {
                            setupEditInsuranceForm();
                        }
                        hideLoading();
                    },
                    error: function (xhr) {
                        hideLoading();
                        showErrorAlert('خطا در بارگیری فرم ویرایش بیمه.');
                    }
                });
            });

            // مدیریت افزودن تعرفه جدید
            $('#btnAddTariff').on('click', function () {
                showLoading();
                $.ajax({
                    url: '@Url.Action("CreateTariff", "Insurance")',
                    type: 'GET',
                     { insuranceId: @Model.InsuranceId },
                    success: function (result) {
                        $('#modalContainer').html(result);
                        if (typeof setupCreateTariffForm === 'function') {
                            setupCreateTariffForm();
                        }
                        hideLoading();
                    },
                    error: function (xhr) {
                        hideLoading();
                        showErrorAlert('خطا در بارگیری فرم تعریف تعرفه جدید.');
                    }
                });
            });
        });

        // تابع بارگیری تعرفه‌ها
        function loadTariffs() {
            showLoading();
            $.ajax({
                url: '@Url.Action("GetInsuranceTariffs", "Insurance")',
                type: 'GET',
                 { insuranceId: @Model.InsuranceId },
                success: function (result) {
                    $('#tariffsContainer').html(result);
                    setupTariffEventHandlers();
                    hideLoading();
                },
                error: function (xhr) {
                    $('#tariffsContainer').html('<div class="alert alert-danger text-center m-3">خطا در بارگیری تعرفه‌ها.</div>');
                    hideLoading();
                }
            });
        }

        // تنظیم گوشدهای رویداد برای تعرفه‌ها
        function setupTariffEventHandlers() {
            // مدیریت ویرایش تعرفه
            $(document).off('click', '.btn-edit-tariff').on('click', '.btn-edit-tariff', function () {
                const tariffId = $(this).data('id');
                const tariffName = $(this).data('name');
                editTariff(tariffId, tariffName);
            });

            // مدیریت حذف تعرفه
            $(document).off('click', '.btn-delete-tariff').on('click', '.btn-delete-tariff', function () {
                const tariffId = $(this).data('id');
                const tariffName = $(this).data('name');
                deleteTariff(tariffId, tariffName);
            });
        }

        // تابع ویرایش تعرفه
        function editTariff(tariffId, tariffName) {
            showLoading();
            $.ajax({
                url: '@Url.Action("EditTariff", "Insurance")',
                type: 'GET',
                 { id: tariffId },
                success: function (result) {
                    $('#modalContainer').html(result);
                    if (typeof setupEditTariffForm === 'function') {
                        setupEditTariffForm();
                    }
                    hideLoading();
                },
                error: function (xhr) {
                    hideLoading();
                    showErrorAlert('خطا در بارگیری فرم ویرایش تعرفه.');
                }
            });
        }

        // تابع حذف تعرفه
        function deleteTariff(tariffId, tariffName) {
            Swal.fire({
                title: 'تایید حذف',
                text: `آیا از حذف تعرفه "${tariffName}" اطمینان دارید؟`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'بله، حذف شود',
                cancelButtonText: 'خیر'
            }).then((result) => {
                if (result.isConfirmed) {
                    showLoading();
                    $.ajax({
                        url: '@Url.Action("DeleteTariff", "Insurance")',
                        type: 'POST',
                         {
                            id: tariffId,
                            __RequestVerificationToken: getAntiForgeryToken()
                        },
                        success: function (response) {
                            hideLoading();
                            if (response.success) {
                                showSuccessAlert(response.message);
                                loadTariffs();
                            } else {
                                showErrorAlert(response.message);
                            }
                        },
                        error: function (xhr) {
                            hideLoading();
                            let errorMessage = 'خطا در حذف تعرفه. لطفاً دوباره تلاش کنید.';
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                errorMessage = xhr.responseJSON.message;
                            }
                            showErrorAlert(errorMessage);
                        }
                    });
                }
            });
        }

        // نمایش لودینگ
        function showLoading() {
            if ($('#loadingOverlay').length === 0) {
                $('body').append('<div id="loadingOverlay" class="position-fixed w-100 h-100 bg-white bg-opacity-75 d-flex justify-content-center align-items-center" style="top:0; left:0; z-index:10000;">' +
                    '<div class="spinner-border text-primary" role="status">' +
                    '<span class="sr-only">در حال بارگیری...</span>' +
                    '</div>' +
                    '</div>');
            }
        }

        // پنهان کردن لودینگ
        function hideLoading() {
            $('#loadingOverlay').remove();
        }
    </script>
}