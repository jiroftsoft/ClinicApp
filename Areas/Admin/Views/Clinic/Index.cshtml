@model ClinicApp.Interfaces.PagedResult<ClinicApp.ViewModels.ClinicIndexViewModel>
@{
    ViewBag.Title = "مدیریت کلینیک‌ها";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <style>
        :root {
            --clinic-primary: #2c5aa0;
            --clinic-success: #28a745;
            --clinic-info: #17a2b8;
            --clinic-warning: #ffc107;
            --clinic-danger: #dc3545;
            --clinic-light: #f8f9fa;    
            --clinic-dark: #343a40;
            --clinic-secondary: #6c757d;
        }

        .medical-header {
            background: linear-gradient(135deg, var(--clinic-primary) 0%, #3d6fb0 100%);
            color: white;
            border-radius: 10px 10px 0 0;
            padding: 1.5rem;
            border: none;
        }

        .medical-card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(44, 90, 160, 0.08);
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .medical-card:hover {
            box-shadow: 0 8px 30px rgba(44, 90, 160, 0.15);
            transform: translateY(-2px);
        }

        .medical-search {
            background: var(--clinic-light);
            padding: 1.5rem;
            border-radius: 8px;
            margin-bottom: 1.5rem;
            border: 1px solid rgba(44, 90, 160, 0.1);
        }

        .search-input {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 0.75rem 1rem;
            font-size: 0.95rem;
            transition: all 0.3s ease;
        }

        .search-input:focus {
            border-color: var(--clinic-primary);
            box-shadow: 0 0 0 0.2rem rgba(44, 90, 160, 0.15);
        }

        .btn-medical {
            background: var(--clinic-primary);
            border: none;
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-medical:hover {
            background: #234a87;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(44, 90, 160, 0.25);
            color: white;
        }

        .btn-medical-success {
            background: linear-gradient(45deg, var(--clinic-success), #34ce57);
            border: none;
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .btn-medical-success:hover {
            background: linear-gradient(45deg, #218838, var(--clinic-success));
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(40, 167, 69, 0.25);
            color: white;
        }

        .medical-table {
            background: white;
            border-radius: 8px;
            overflow: hidden;
        }

        .medical-table thead th {
            background: linear-gradient(90deg, var(--clinic-light), #ffffff);
            border: none;
            font-weight: 600;
            color: var(--clinic-dark);
            padding: 1rem;
            text-align: center;
            border-bottom: 2px solid rgba(44, 90, 160, 0.1);
        }

        .medical-table tbody td {
            padding: 1rem;
            vertical-align: middle;
            border-bottom: 1px solid rgba(0,0,0,0.05);
            text-align: center;
        }

        .medical-table tbody tr {
            transition: all 0.2s ease;
        }

        .medical-table tbody tr:hover {
            background: rgba(44, 90, 160, 0.02);
            transform: scale(1.005);
        }

        .action-buttons {
            display: flex;
            gap: 0.5rem;
            justify-content: center;
            align-items: center;
        }

        .btn-action {
            width: 36px;
            height: 36px;
            border-radius: 8px;
            border: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            font-size: 0.875rem;
        }

        .btn-action:hover {
            transform: translateY(-2px) scale(1.1);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }

        .btn-edit {
            background: linear-gradient(135deg, var(--clinic-warning), #ffcd39);
            color: #212529;
        }

        .btn-edit:hover {
            background: linear-gradient(135deg, #e0a800, var(--clinic-warning));
            color: #212529;
        }

        .btn-view {
            background: linear-gradient(135deg, var(--clinic-info), #20c997);
            color: white;
        }

        .btn-view:hover {
            background: linear-gradient(135deg, #138496, var(--clinic-info));
            color: white;
        }

        .btn-delete {
            background: linear-gradient(135deg, var(--clinic-danger), #e74c3c);
            color: white;
        }

        .btn-delete:hover {
            background: linear-gradient(135deg, #c82333, var(--clinic-danger));
            color: white;
        }

        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: 500;
            font-size: 0.85rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-active {
            background: linear-gradient(45deg, var(--clinic-success), #20c997);
            color: white;
        }

        .status-inactive {
            background: linear-gradient(45deg, var(--clinic-danger), #e74c3c);
            color: white;
        }

        .medical-stats {
            display: flex;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .stat-card {
            flex: 1;
            background: white;
            padding: 1.5rem;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            text-align: center;
            border: 1px solid rgba(44, 90, 160, 0.1);
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(44, 90, 160, 0.15);
        }

        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            color: var(--clinic-primary);
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: var(--clinic-secondary);
            font-weight: 500;
        }

        .empty-state {
            text-align: center;
            padding: 3rem;
            color: var(--clinic-secondary);
        }

        .empty-state i {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.3;
        }

        .loading-overlay {
            position: relative;
        }

        .loading-overlay::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255,255,255,0.8);
            z-index: 1;
            border-radius: 8px;
        }

        .loading-spinner {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 2;
        }

        .pagination-modern {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin-top: 2rem;
        }

        .page-btn {
            padding: 0.5rem 1rem;
            border: 2px solid var(--clinic-primary);
            background: white;
            color: var(--clinic-primary);
            border-radius: 6px;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .page-btn:hover {
            background: var(--clinic-primary);
            color: white;
            transform: translateY(-1px);
        }

        .page-btn.active {
            background: var(--clinic-primary);
            color: white;
        }

        @@media (max-width: 768px) {
            .medical-stats {
                flex-direction: column;
            }
            
            .action-buttons {
                flex-direction: column;
                gap: 0.25rem;
            }
            
            .btn-action {
                width: 100%;
                height: 32px;
            }
        }
    </style>
}

<!-- Header Section -->
<div class="medical-card">
    <div class="medical-header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="mb-1">
                    <i class="fas fa-hospital-alt me-2"></i>@ViewBag.Title
                </h2>
                <p class="mb-0 opacity-75">مدیریت و نظارت بر کلینیک‌های مجموعه درمانی</p>
            </div>
            <a href="@Url.Action("Create")" class="btn btn-medical-success">
                <i class="fas fa-plus"></i>
                کلینیک جدید
            </a>
        </div>
    </div>

    <!-- Stats Section -->
    <div class="p-3">
        <div class="medical-stats">
            <div class="stat-card">
                <div class="stat-number" id="total-clinics">@(Model?.TotalItems ?? 0)</div>
                <div class="stat-label">مجموع کلینیک‌ها</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="active-clinics">@(Model?.Items?.Count(c => c.IsActive) ?? 0)</div>
                <div class="stat-label">کلینیک‌های فعال</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="total-departments">@(Model?.Items?.Sum(c => c.DepartmentCount) ?? 0)</div>
                <div class="stat-label">مجموع دپارتمان‌ها</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="avg-departments">@(Model?.Items?.Any() == true ? Math.Round((double)(Model.Items.Sum(c => c.DepartmentCount) / Model.Items.Count), 1) : 0)</div>
                <div class="stat-label">میانگین دپارتمان</div>
            </div>
        </div>
    </div>

    <!-- Search Section -->
    <div class="p-3">
        <div class="medical-search">
            <form id="search-form" class="row g-3">
                <div class="col-md-8">
                    <div class="input-group">
                        <span class="input-group-text bg-white border-end-0">
                            <i class="fas fa-search text-muted"></i>
                        </span>
                        <input type="search" id="search-term" name="searchTerm" 
                               class="form-control search-input border-start-0" 
                               placeholder="جستجو در نام کلینیک، آدرس یا شماره تلفن..." />
                    </div>
                </div>
                <div class="col-md-4">
                    <button class="btn btn-medical w-100" type="submit">
                            <i class="fas fa-search"></i>
                        جستجو
                        </button>
                    </div>
                </form>
            </div>
        </div>

    <!-- Table Section -->
    <div class="p-3">
        <div class="medical-table" id="table-container">
            <table class="table table-hover mb-0">
                <thead>
                    <tr>
                        <th>
                            <i class="fas fa-clinic-medical me-1"></i>
                            نام کلینیک
                        </th>
                        <th>
                            <i class="fas fa-phone me-1"></i>
                            تماس
                        </th>
                        <th>
                            <i class="fas fa-building me-1"></i>
                            دپارتمان‌ها
                        </th>
                        <th>
                            <i class="fas fa-toggle-on me-1"></i>
                            وضعیت
                        </th>
                        <th>
                            <i class="fas fa-cogs me-1"></i>
                            عملیات
                        </th>
                    </tr>
                </thead>
                <tbody id="clinics-table-body">
                    @if (Model?.Items != null && Model.Items.Any())
                    {
                        foreach (var clinic in Model.Items)
                        {
                            <tr class="clinic-row" data-clinic-id="@clinic.ClinicId">
                                <td>
                                    <div class="fw-bold text-primary">@clinic.Name</div>
                                    <small class="text-muted">@(clinic.Address ?? "")</small>
                                </td>
                                <td>
                                    <span class="text-dark">@(clinic.PhoneNumber ?? "-")</span>
                                </td>
                                <td>
                                    <span class="badge bg-light text-dark fs-6">@clinic.DepartmentCount</span>
                                </td>
                                <td>
                                    @if (clinic.IsActive)
                                    {
                                        <span class="status-badge status-active">فعال</span>
                                    }
                                    else
                                    {
                                        <span class="status-badge status-inactive">غیرفعال</span>
                                    }
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <a href="@Url.Action("Edit", "Clinic", new { id = clinic.ClinicId })" 
                                           class="btn btn-action btn-edit" 
                                           title="ویرایش کلینیک" 
                                           data-bs-toggle="tooltip">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a href="@Url.Action("Details", "Clinic", new { id = clinic.ClinicId })" 
                                           class="btn btn-action btn-view" 
                                           title="مشاهده جزئیات" 
                                           data-bs-toggle="tooltip">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <button class="btn btn-action btn-delete" 
                                                data-id="@clinic.ClinicId" 
                                                data-name="@clinic.Name" 
                                                title="حذف کلینیک" 
                                                data-bs-toggle="tooltip">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5">
                                <div class="empty-state">
                                    <i class="fas fa-clinic-medical"></i>
                                    <h5>هیچ کلینیکی یافت نشد</h5>
                                    <p class="mb-3">در حال حاضر کلینیکی در سیستم وجود ندارد.</p>
                                    <a href="@Url.Action("Create")" class="btn btn-medical-success">
                                        <i class="fas fa-plus me-1"></i> ایجاد کلینیک جدید
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                
                </tbody>
            </table>
        </div>
        
        <!-- Pagination -->
        <div id="pagination-container" class="pagination-modern">
            @if (Model?.TotalPages > 1)
            {
                <div class="d-flex justify-content-center gap-2">
                    @if (Model.HasPreviousPage)
                    {
                        <button class="page-btn" data-page="@(Model.PageNumber - 1)">
                            <i class="fas fa-chevron-right me-1"></i> قبلی
                        </button>
                    }

                    @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                    {
                        var activeClass = i == Model.PageNumber ? "active" : "";
                        <button class="page-btn @activeClass" data-page="@i">@i</button>
                    }

                    @if (Model.HasNextPage)
                    {
                        <button class="page-btn" data-page="@(Model.PageNumber + 1)">
                            بعدی <i class="fas fa-chevron-left ms-1"></i>
                        </button>
                    }
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal حذف کلینیک -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header bg-danger text-white border-0">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    تأیید حذف کلینیک
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center py-4">
                <div class="mb-3">
                    <i class="fas fa-clinic-medical text-danger" style="font-size: 3rem; opacity: 0.7;"></i>
                </div>
                <h6 class="fw-bold mb-3">آیا از حذف کلینیک زیر اطمینان دارید؟</h6>
                <div class="alert alert-warning border-0 bg-light">
                    <strong id="clinic-name-to-delete" class="text-danger"></strong>
                </div>
                <small class="text-muted">
                    <i class="fas fa-info-circle me-1"></i>
                    این عملیات قابل بازگشت نیست و تمام اطلاعات مرتبط حذف خواهد شد.
                </small>
            </div>
            <div class="modal-footer border-0 justify-content-center">
                <form id="delete-form" method="post" class="d-flex gap-2">
                    @Html.AntiForgeryToken()
                    <button type="button" class="btn btn-light px-4" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>
                        انصراف
                    </button>
                    <button type="submit" class="btn btn-danger px-4">
                        <i class="fas fa-trash-alt me-1"></i>
                        بله، حذف کن
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    /* استایل‌های اضافی برای Modal */
    .modal-content {
        border-radius: 12px;
        overflow: hidden;
    }
    
    .modal-header {
        border-radius: 12px 12px 0 0;
    }
    
    .modal-footer {
        border-radius: 0 0 12px 12px;
        background: #f8f9fa;
    }
    
    /* 🏥 MEDICAL: استایل‌های Dependency Cards */
    .dependency-details {
        margin-top: 1.5rem;
    }
    
    .dependency-card {
        display: flex;
        align-items: center;
        background: #f8f9fa;
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 1rem;
        border: 1px solid #e9ecef;
        transition: all 0.3s ease;
    }
    
    .dependency-card:hover {
        background: #e9ecef;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    .dependency-icon {
        width: 50px;
        height: 50px;
        background: #007bff;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-left: 1rem;
        color: white;
        font-size: 1.2rem;
    }
    
    .dependency-info {
        flex: 1;
    }
    
    .dependency-number {
        font-size: 1.5rem;
        font-weight: bold;
        color: #007bff;
        margin-bottom: 0.25rem;
    }
    
    .dependency-label {
        font-size: 0.9rem;
        color: #6c757d;
        margin-bottom: 0.25rem;
    }
    
    .dependency-active {
        font-size: 0.8rem;
        color: #28a745;
        font-weight: 500;
    }
    
    .btn-close-white {
        filter: invert(1) grayscale(100%) brightness(200%);
    }
</style>


@section Scripts {
    <script>
        $(document).ready(function () {
            const tableBody = $('#clinics-table-body');
            const paginationContainer = $('#pagination-container');
            const searchForm = $('#search-form');
            const searchTermInput = $('#search-term');
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
            const deleteForm = $('#delete-form');
            const clinicNameToDelete = $('#clinic-name-to-delete');
            const tableContainer = $('#table-container');

            let currentPage = 1;
            let currentSearchTerm = "";

            // تابع اصلی برای دریافت و نمایش داده‌ها
            function fetchClinics(page = 1, term = "") {
                currentPage = page;
                currentSearchTerm = term;

                // نمایش Loading Overlay
                showLoading();

                $.ajax({
                    url: '@Url.Action("Index")',
                    type: 'GET',
                    data: { 
                        searchTerm: term, 
                        pageNumber: page,
                        isAjax: true
                    },
                    success: function (result) {
                        hideLoading();
                        renderTable(result);
                        updateStats(result);
                        renderPagination(result.TotalPages, result.PageNumber);
                    },
                    error: function () {
                        hideLoading();
                        showError();
                    }
                });
            }

            // نمایش Loading
            function showLoading() {
                tableContainer.addClass('loading-overlay');
                const spinner = `<div class="loading-spinner">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">در حال بارگذاری...</span>
                    </div>
                </div>`;
                tableContainer.append(spinner);
            }

            // مخفی کردن Loading
            function hideLoading() {
                tableContainer.removeClass('loading-overlay');
                $('.loading-spinner').remove();
            }

            // رندر جدول
            function renderTable(result) {
                        tableBody.empty();
                
                        if (result.Items && result.Items.length > 0) {
                            $.each(result.Items, function (index, clinic) {
                        const statusBadge = clinic.IsActive 
                            ? '<span class="status-badge status-active">فعال</span>' 
                            : '<span class="status-badge status-inactive">غیرفعال</span>';
                        
                        const row = `<tr class="clinic-row" data-clinic-id="${clinic.ClinicId}">
                            <td>
                                <div class="fw-bold text-primary">${escapeHtml(clinic.Name)}</div>
                                <small class="text-muted">${escapeHtml(clinic.Address || '')}</small>
                            </td>
                            <td>
                                <span class="text-dark">${escapeHtml(clinic.PhoneNumber) || '-'}</span>
                            </td>
                            <td>
                                <span class="badge bg-light text-dark fs-6">${clinic.DepartmentCount}</span>
                            </td>
                            <td>${statusBadge}</td>
                            <td>
                                <div class="action-buttons">
                                    <a href="/Admin/Clinic/Edit/${clinic.ClinicId}" 
                                       class="btn btn-action btn-edit" 
                                       title="ویرایش کلینیک" 
                                       data-bs-toggle="tooltip">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a href="/Admin/Clinic/Details/${clinic.ClinicId}" 
                                       class="btn btn-action btn-view" 
                                       title="مشاهده جزئیات" 
                                       data-bs-toggle="tooltip">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <button class="btn btn-action btn-delete" 
                                            data-id="${clinic.ClinicId}" 
                                            data-name="${escapeHtml(clinic.Name)}" 
                                            title="حذف کلینیک" 
                                            data-bs-toggle="tooltip">
                                        <i class="fas fa-trash-alt"></i>
                                        </button>
                                </div>
                                    </td>
                                </tr>`;
                                tableBody.append(row);
                            });
                    
                    // فعال‌سازی tooltips
                    $('[data-bs-toggle="tooltip"]').tooltip();
                    
                        } else {
                    showEmptyState();
                }
            }

            // نمایش وضعیت خالی
            function showEmptyState() {
                const emptyState = `
                    <tr>
                        <td colspan="5">
                            <div class="empty-state">
                                <i class="fas fa-clinic-medical"></i>
                                <h5>هیچ کلینیکی یافت نشد</h5>
                                <p class="mb-3">در حال حاضر کلینیکی با معیارهای جستجوی شما وجود ندارد.</p>
                                <a href="@Url.Action("Create")" class="btn btn-medical-success">
                                    <i class="fas fa-plus me-1"></i> ایجاد کلینیک جدید
                                </a>
                            </div>
                        </td>
                    </tr>`;
                tableBody.html(emptyState);
            }

            // نمایش خطا
            function showError() {
                const errorState = `
                    <tr>
                        <td colspan="5">
                            <div class="empty-state">
                                <i class="fas fa-exclamation-triangle text-warning"></i>
                                <h5>خطا در بارگذاری اطلاعات</h5>
                                <p class="mb-3">متأسفانه امکان دریافت اطلاعات وجود ندارد. لطفاً دوباره تلاش کنید.</p>
                                <button class="btn btn-medical" onclick="fetchClinics(${currentPage}, '${currentSearchTerm}')">
                                    <i class="fas fa-redo me-1"></i> تلاش مجدد
                                </button>
                            </div>
                        </td>
                    </tr>`;
                tableBody.html(errorState);
            }

            // به‌روزرسانی آمار
            function updateStats(result) {
                const totalClinics = result.TotalItems || 0;
                const activeClinics = result.Items ? result.Items.filter(c => c.IsActive).length : 0;
                const totalDepartments = result.Items ? result.Items.reduce((sum, c) => sum + c.DepartmentCount, 0) : 0;
                const avgDepartments = totalClinics > 0 ? Math.round(totalDepartments / totalClinics * 10) / 10 : 0;

                animateCounter('#total-clinics', totalClinics);
                animateCounter('#active-clinics', activeClinics);
                animateCounter('#total-departments', totalDepartments);
                animateCounter('#avg-departments', avgDepartments);
            }

            // انیمیشن شمارنده
            function animateCounter(selector, value) {
                const element = $(selector);
                const current = parseInt(element.text()) || 0;
                
                $({ count: current }).animate({ count: value }, {
                    duration: 1000,
                    step: function() {
                        element.text(Math.floor(this.count));
                    },
                    complete: function() {
                        element.text(value);
                    }
                });
            }

            // رندر صفحه‌بندی
            function renderPagination(totalPages, currentPageNum) {
                paginationContainer.empty();
                
                if (totalPages <= 1) return;

                let paginationHtml = '';
                
                // دکمه قبلی
                if (currentPageNum > 1) {
                    paginationHtml += `<button class="page-btn" data-page="${currentPageNum - 1}">
                        <i class="fas fa-chevron-right me-1"></i> قبلی
                    </button>`;
                }

                // شماره صفحات
                for (let i = Math.max(1, currentPageNum - 2); i <= Math.min(totalPages, currentPageNum + 2); i++) {
                    const activeClass = i === currentPageNum ? 'active' : '';
                    paginationHtml += `<button class="page-btn ${activeClass}" data-page="${i}">${i}</button>`;
                }

                // دکمه بعدی
                if (currentPageNum < totalPages) {
                    paginationHtml += `<button class="page-btn" data-page="${currentPageNum + 1}">
                        بعدی <i class="fas fa-chevron-left ms-1"></i>
                    </button>`;
                }

                paginationContainer.html(paginationHtml);
            }

            // Event Handlers
            
            // جستجو
            searchForm.on('submit', function(e) {
                e.preventDefault();
                fetchClinics(1, searchTermInput.val().trim());
            });

            // جستجوی زنده
            let searchTimeout;
            searchTermInput.on('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    const term = $(this).val().trim();
                    if (term.length >= 2 || term.length === 0) {
                        fetchClinics(1, term);
                    }
                }, 500);
            });

            // صفحه‌بندی
            paginationContainer.on('click', '.page-btn', function() {
                const page = $(this).data('page');
                fetchClinics(page, currentSearchTerm);
            });

            // حذف کلینیک
            tableBody.on('click', '.btn-delete', function () {
                const id = $(this).data('id');
                const name = $(this).data('name');
                
                // 🏥 MEDICAL: بررسی وابستگی‌ها قبل از نمایش modal حذف
                checkClinicDependencies(id, name);
            });

            // 🏥 MEDICAL: بررسی وابستگی‌های کلینیک
            function checkClinicDependencies(clinicId, clinicName) {
                console.log('🏥 MEDICAL: بررسی وابستگی‌های کلینیک:', clinicId, clinicName);
                showLoading();
                
                $.ajax({
                    url: '@Url.Action("GetDependencyInfo", "Clinic")',
                    type: 'GET',
                    data: { id: clinicId },
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (result) {
                        hideLoading();
                        console.log('🏥 MEDICAL: پاسخ سرور (Raw):', result);
                        console.log('🏥 MEDICAL: نوع پاسخ:', typeof result);
                        
                        // 🏥 MEDICAL: بررسی نوع پاسخ و تبدیل در صورت نیاز
                        let responseData = result;
                        console.log('🏥 MEDICAL: نوع پاسخ اصلی:', typeof result);
                        
                        if (typeof result === 'string') {
                            try {
                                responseData = JSON.parse(result);
                                console.log('🏥 MEDICAL: پاسخ تبدیل شده:', responseData);
                            } catch (parseError) {
                                console.error('🏥 MEDICAL: خطا در تبدیل JSON:', parseError);
                                console.error('🏥 MEDICAL: متن پاسخ:', result);
                                showMedicalToast('❌ خطا', 'خطا در پردازش پاسخ سرور', 'error');
                                return;
                            }
                        } else if (typeof result === 'object' && result !== null) {
                            responseData = result;
                            console.log('🏥 MEDICAL: پاسخ object است:', responseData);
                        } else {
                            console.error('🏥 MEDICAL: نوع پاسخ نامعتبر:', typeof result, result);
                            showMedicalToast('❌ خطا', 'پاسخ سرور نامعتبر است', 'error');
                            return;
                        }
                        
                        // 🏥 MEDICAL: بررسی وجود success property
                        if (responseData && responseData.success === true) {
                            console.log('🏥 MEDICAL: پاسخ موفق - canDelete:', responseData.canDelete);
                            
                            if (responseData.canDelete === true) {
                                console.log('🏥 MEDICAL: امکان حذف وجود دارد');
                                // ✅ امکان حذف وجود دارد
                                clinicNameToDelete.text(clinicName);
                                const deleteUrl = `@Url.Action("Delete", "Clinic")/${clinicId}`;
                deleteForm.attr('action', deleteUrl);
                deleteModal.show();
                            } else {
                                console.log('🏥 MEDICAL: امکان حذف وجود ندارد - نمایش هشدار');
                                // ❌ امکان حذف وجود ندارد - نمایش جزئیات وابستگی‌ها
                                if (responseData.data) {
                                    showDependencyWarning(responseData.data, clinicName);
                                } else {
                                    console.error('🏥 MEDICAL: data property موجود نیست:', responseData);
                                    showMedicalToast('❌ خطا', 'اطلاعات وابستگی در دسترس نیست', 'error');
                                }
                            }
                        } else {
                            console.log('🏥 MEDICAL: پاسخ ناموفق:', responseData);
                            const errorMessage = responseData?.message || 'خطا در بررسی وابستگی‌های کلینیک';
                            showMedicalToast('❌ خطا', errorMessage, 'error');
                        }
                    },
                    error: function (xhr, status, error) {
                        hideLoading();
                        console.error('🏥 MEDICAL: خطا در AJAX:', error);
                        console.error('🏥 MEDICAL: Status:', status);
                        console.error('🏥 MEDICAL: Response:', xhr.responseText);
                        showMedicalToast('❌ خطا', 'خطا در ارتباط با سرور', 'error');
                    }
                });
            }

            // 🏥 MEDICAL: نمایش هشدار وابستگی‌ها
            function showDependencyWarning(dependencyInfo, clinicName) {
                console.log('🏥 MEDICAL: نمایش هشدار وابستگی‌ها برای کلینیک:', clinicName);
                console.log('🏥 MEDICAL: اطلاعات وابستگی:', dependencyInfo);
                
                // 🏥 MEDICAL: بررسی وجود داده‌های ضروری
                if (!dependencyInfo) {
                    console.error('🏥 MEDICAL: dependencyInfo موجود نیست');
                    showMedicalToast('❌ خطا', 'اطلاعات وابستگی در دسترس نیست', 'error');
                    return;
                }
                
                // 🏥 MEDICAL: اطمینان از وجود مقادیر
                const deptCount = dependencyInfo.TotalDepartmentCount || 0;
                const activeDeptCount = dependencyInfo.ActiveDepartmentCount || 0;
                const categoryCount = dependencyInfo.TotalServiceCategoryCount || 0;
                const activeCategoryCount = dependencyInfo.ActiveServiceCategoryCount || 0;
                const serviceCount = dependencyInfo.TotalServiceCount || 0;
                const activeServiceCount = dependencyInfo.ActiveServiceCount || 0;
                const doctorCount = dependencyInfo.TotalDoctorCount || 0;
                const activeDoctorCount = dependencyInfo.ActiveDoctorCount || 0;
                const errorMessage = dependencyInfo.DeletionErrorMessage || 'امکان حذف این کلینیک وجود ندارد.';
                
                const modalHtml = `
                    <div class="modal fade" id="dependencyWarningModal" tabindex="-1" aria-labelledby="dependencyModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered">
                            <div class="modal-content border-0 shadow-lg">
                                <div class="modal-header bg-warning text-dark border-0">
                                    <h5 class="modal-title" id="dependencyModalLabel">
                                        <i class="fas fa-exclamation-triangle me-2"></i>
                                        عدم امکان حذف کلینیک
                                    </h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body py-4">
                                    <div class="text-center mb-4">
                                        <i class="fas fa-clinic-medical text-warning" style="font-size: 3rem; opacity: 0.7;"></i>
                                    </div>
                                    <div class="alert alert-warning border-0 bg-light">
                                        <h6 class="fw-bold mb-3">${escapeHtml(errorMessage)}</h6>
                                    </div>
                                    <div class="dependency-details">
                                        <h6 class="fw-bold mb-3">جزئیات وابستگی‌ها:</h6>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="dependency-card">
                                                    <div class="dependency-icon">
                                                        <i class="fas fa-building"></i>
                                                    </div>
                                                    <div class="dependency-info">
                                                        <div class="dependency-number">${deptCount}</div>
                                                        <div class="dependency-label">دپارتمان</div>
                                                        <div class="dependency-active">${activeDeptCount} فعال</div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="dependency-card">
                                                    <div class="dependency-icon">
                                                        <i class="fas fa-list-alt"></i>
                                                    </div>
                                                    <div class="dependency-info">
                                                        <div class="dependency-number">${categoryCount}</div>
                                                        <div class="dependency-label">دسته‌بندی خدمت</div>
                                                        <div class="dependency-active">${activeCategoryCount} فعال</div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="dependency-card">
                                                    <div class="dependency-icon">
                                                        <i class="fas fa-stethoscope"></i>
                                                    </div>
                                                    <div class="dependency-info">
                                                        <div class="dependency-number">${serviceCount}</div>
                                                        <div class="dependency-label">خدمت</div>
                                                        <div class="dependency-active">${activeServiceCount} فعال</div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="dependency-card">
                                                    <div class="dependency-icon">
                                                        <i class="fas fa-user-md"></i>
                                                    </div>
                                                    <div class="dependency-info">
                                                        <div class="dependency-number">${doctorCount}</div>
                                                        <div class="dependency-label">پزشک</div>
                                                        <div class="dependency-active">${activeDoctorCount} فعال</div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="mt-4">
                                        <small class="text-muted">
                                            <i class="fas fa-info-circle me-1"></i>
                                            برای حذف این کلینیک، ابتدا تمام وابستگی‌های فعال آن را حذف کنید.
                                        </small>
                                    </div>
                                </div>
                                <div class="modal-footer border-0 justify-content-center">
                                    <button type="button" class="btn btn-secondary px-4" data-bs-dismiss="modal">
                                        <i class="fas fa-times me-1"></i>
                                        بستن
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                
                // حذف modal قبلی اگر وجود دارد
                $('#dependencyWarningModal').remove();
                
                // اضافه کردن modal جدید
                $('body').append(modalHtml);
                
                // نمایش modal با تأخیر کوتاه
                setTimeout(() => {
                    try {
                        const dependencyModal = new bootstrap.Modal(document.getElementById('dependencyWarningModal'));
                        dependencyModal.show();
                        console.log('🏥 MEDICAL: Modal هشدار وابستگی نمایش داده شد');
                    } catch (error) {
                        console.error('🏥 MEDICAL: خطا در نمایش modal:', error);
                        // نمایش پیام ساده در صورت خطا
                        showMedicalToast('⚠️ هشدار', errorMessage, 'warning');
                    }
                }, 100);
                
                // حذف modal بعد از بسته شدن
                $('#dependencyWarningModal').on('hidden.bs.modal', function () {
                    $(this).remove();
                });
            }

            // تابع کمکی برای XSS Protection
            function escapeHtml(string) {
                if (!string) return '';
                return String(string).replace(/[&<>"']/g, function (s) {
                    return {
                        '&': '&amp;',
                        '<': '&lt;',
                        '>': '&gt;',
                        '"': '&quot;',
                        "'": '&#39;'
                    }[s];
                });
            }

            // بارگذاری اولیه - فقط اگر داده‌ای در Model نباشد
            @if (Model?.Items == null || !Model.Items.Any())
            {
                <text>
            fetchClinics();
                </text>
            }
            else
            {
                <text>
                // داده‌ها از Model بارگذاری شده‌اند، فقط tooltips را فعال کن
                $('[data-bs-toggle="tooltip"]').tooltip();
                </text>
            }

            // تنظیم focus روی جستجو
            searchTermInput.focus();
        });
    </script>
}