@model ClinicApp.ViewModels.DoctorManagementVM.BulkAssignmentViewModel

<div class="bulk-assignment-card p-4">
    <h4 class="mb-3">
        <i class="fas fa-users me-2"></i>
        انتساب گروهی پزشکان
    </h4>

    @using (Html.BeginForm("BulkAssign", "DoctorAssignment", FormMethod.Post, 
           new { id = "bulkAssignmentForm", @class = "needs-validation", novalidate = "novalidate" }))
    {
        @Html.AntiForgeryToken()

        <!-- Doctor Selection -->
        <div class="form-section">
            <h5>
                <i class="fas fa-user-md me-2"></i>
                انتخاب پزشکان
            </h5>
            <div class="row">
                <div class="col-12">
                    <div class="mb-3">
                        @Html.LabelFor(m => m.DoctorIds, "پزشکان", new { @class = "form-label fw-bold" })
                        @Html.ListBoxFor(m => m.DoctorIds, 
                            new MultiSelectList(ViewBag.Doctors ?? new List<object>(), "Value", "Text"), 
                            new { @class = "form-select", multiple = "multiple", id = "doctorSelection" })
                        @Html.ValidationMessageFor(m => m.DoctorIds, "", new { @class = "text-danger" })
                        <div class="form-text">
                            <i class="fas fa-info-circle me-1"></i>
                            می‌توانید چندین پزشک را انتخاب کنید (حداکثر 20 پزشک)
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Department Selection -->
        <div class="form-section">
            <h5>
                <i class="fas fa-hospital me-2"></i>
                انتخاب دپارتمان
            </h5>
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        @Html.LabelFor(m => m.DepartmentId, "دپارتمان", new { @class = "form-label fw-bold" })
                        @Html.DropDownListFor(m => m.DepartmentId, 
                            new SelectList(ViewBag.Departments ?? new List<object>(), "Value", "Text"), 
                            "انتخاب دپارتمان...", 
                            new { @class = "form-select", required = "required" })
                        @Html.ValidationMessageFor(m => m.DepartmentId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="form-label fw-bold">وضعیت انتساب</label>
                        <div class="form-check">
                            @Html.CheckBoxFor(m => m.IsActive, new { @class = "form-check-input", @checked = "checked" })
                            <label class="form-check-label" for="@Html.IdFor(m => m.IsActive)">
                                انتساب فعال
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Service Categories -->
        <div class="form-section">
            <h5>
                <i class="fas fa-stethoscope me-2"></i>
                صلاحیت‌های خدماتی
            </h5>
            <div class="row">
                <div class="col-12">
                    <div class="mb-3">
                        @Html.LabelFor(m => m.ServiceCategoryIds, "صلاحیت‌ها", new { @class = "form-label fw-bold" })
                        @Html.ListBoxFor(m => m.ServiceCategoryIds, 
                            new MultiSelectList(ViewBag.ServiceCategories ?? new List<object>(), "Value", "Text"), 
                            new { @class = "form-select", multiple = "multiple", id = "bulkServiceCategories" })
                        @Html.ValidationMessageFor(m => m.ServiceCategoryIds, "", new { @class = "text-danger" })
                        <div class="form-text">
                            <i class="fas fa-info-circle me-1"></i>
                            صلاحیت‌های انتخاب شده برای تمام پزشکان اعمال خواهد شد
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Assignment Options -->
        <div class="form-section">
            <h5>
                <i class="fas fa-cog me-2"></i>
                گزینه‌های انتساب
            </h5>
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="form-label fw-bold">نوع انتساب</label>
                        <div class="form-check">
                            @Html.RadioButtonFor(m => m.AssignmentType, "New", new { @class = "form-check-input", @checked = "checked" })
                            <label class="form-check-label" for="@Html.IdFor(m => m.AssignmentType)_New">
                                انتساب جدید
                            </label>
                        </div>
                        <div class="form-check">
                            @Html.RadioButtonFor(m => m.AssignmentType, "Replace", new { @class = "form-check-input" })
                            <label class="form-check-label" for="@Html.IdFor(m => m.AssignmentType)_Replace">
                                جایگزینی انتسابات موجود
                            </label>
                        </div>
                        <div class="form-check">
                            @Html.RadioButtonFor(m => m.AssignmentType, "Add", new { @class = "form-check-input" })
                            <label class="form-check-label" for="@Html.IdFor(m => m.AssignmentType)_Add">
                                افزودن به انتسابات موجود
                            </label>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="form-label fw-bold">گزینه‌های پیشرفته</label>
                        <div class="form-check">
                            @Html.CheckBoxFor(m => m.SkipExisting, new { @class = "form-check-input", id = "SkipExisting" })
                            <label class="form-check-label" for="@Html.IdFor(m => m.SkipExisting)">
                                رد کردن انتسابات موجود
                            </label>
                        </div>
                        <div class="form-check">
                            @Html.CheckBoxFor(m => m.ValidateCompatibility, new { @class = "form-check-input", @checked = "checked", id = "ValidateCompatibility" })
                            <label class="form-check-label" for="@Html.IdFor(m => m.ValidateCompatibility)">
                                بررسی سازگاری
                            </label>
                        </div>
                        <div class="form-check">
                            @Html.CheckBoxFor(m => m.ReplaceExisting, new { @class = "form-check-input", id = "ReplaceExisting" })
                            <label class="form-check-label" for="@Html.IdFor(m => m.ReplaceExisting)">
                                جایگزینی انتسابات موجود
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Description -->
        <div class="form-section">
            <h5>
                <i class="fas fa-comment me-2"></i>
                توضیحات
            </h5>
            <div class="row">
                <div class="col-12">
                    <div class="mb-3">
                        @Html.LabelFor(m => m.Description, "توضیحات", new { @class = "form-label fw-bold" })
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = "3", 
                            placeholder = "توضیحات مربوط به انتساب گروهی..." })
                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <!-- Preview Section -->
        <div class="form-section" id="previewSection" style="display: none;">
            <h5>
                <i class="fas fa-eye me-2"></i>
                پیش‌نمایش
            </h5>
            <div class="preview-content">
                <div class="row">
                    <div class="col-md-6">
                        <h6>پزشکان انتخاب شده:</h6>
                        <ul id="selectedDoctorsList" class="list-unstyled"></ul>
                    </div>
                    <div class="col-md-6">
                        <h6>جزئیات انتساب:</h6>
                        <div id="assignmentDetails"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="d-flex justify-content-between">
                    <div>
                        <button type="button" class="btn btn-outline-secondary" onclick="validateBulkForm()">
                            <i class="fas fa-check-circle me-2"></i>
                            اعتبارسنجی
                        </button>
                        <button type="button" class="btn btn-outline-info" onclick="previewBulkAssignment()">
                            <i class="fas fa-eye me-2"></i>
                            پیش‌نمایش
                        </button>
                        <button type="button" class="btn btn-outline-warning" onclick="checkBulkCompatibility()">
                            <i class="fas fa-link me-2"></i>
                            بررسی سازگاری
                        </button>
                    </div>
                    <div>
                        <a href="@Url.Action("Index", "DoctorAssignment")" class="btn btn-secondary me-2">
                            <i class="fas fa-times me-2"></i>
                            انصراف
                        </a>
                        <button type="submit" class="btn btn-success btn-submit">
                            <i class="fas fa-save me-2"></i>
                            ذخیره انتساب گروهی
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .bulk-assignment-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
    }
    .form-section {
        border-left: 4px solid #667eea;
        padding-left: 20px;
        margin-bottom: 30px;
    }
    .form-section h5 {
        color: #667eea;
        font-weight: 600;
    }
    .btn-submit {
        border-radius: 25px;
        font-weight: 600;
        padding: 12px 30px;
        transition: all 0.3s ease;
    }
    .btn-submit:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }
    .form-select[multiple] {
        min-height: 120px;
    }
    .preview-content {
        background: #f8f9fa;
        border-radius: 10px;
        padding: 20px;
    }
    .preview-content h6 {
        color: #667eea;
        font-weight: 600;
        margin-bottom: 15px;
    }
    #selectedDoctorsList li {
        padding: 5px 0;
        border-bottom: 1px solid #e9ecef;
    }
    #selectedDoctorsList li:last-child {
        border-bottom: none;
    }
</style>

<script>
    // محافظت jQuery - اطمینان از بارگذاری کامل jQuery
    (function() {
        function ensureJQuery(callback) {
            if (typeof jQuery !== 'undefined' && typeof $.fn !== 'undefined') {
                callback();
            } else {
                setTimeout(function() {
                    ensureJQuery(callback);
                }, 50);
            }
        }

        ensureJQuery(function() {
            $(document).ready(function () {
                initializeBulkSelect2();
                initializeBulkFormValidation();
                setupBulkEventHandlers();
            });
        });

    function initializeBulkSelect2() {
        $('#doctorSelection').select2({
            placeholder: 'انتخاب پزشکان...',
            allowClear: true,
            language: 'fa',
            width: '100%',
            maximumSelectionLength: 20
        });

        $('#DepartmentId').select2({
            placeholder: 'انتخاب دپارتمان...',
            allowClear: true,
            language: 'fa',
            width: '100%'
        });

        $('#bulkServiceCategories').select2({
            placeholder: 'انتخاب صلاحیت‌ها...',
            allowClear: true,
            language: 'fa',
            width: '100%',
            maximumSelectionLength: 10
        });
    }

    function initializeBulkFormValidation() {
        $('#bulkAssignmentForm').validate({
            rules: {
                DoctorIds: {
                    required: true,
                    minlength: 1
                },
                DepartmentId: {
                    required: true
                },
                ServiceCategoryIds: {
                    required: true,
                    minlength: 1
                },
                Description: {
                    maxlength: 500
                }
            },
            messages: {
                DoctorIds: {
                    required: 'لطفاً حداقل یک پزشک را انتخاب کنید',
                    minlength: 'لطفاً حداقل یک پزشک را انتخاب کنید'
                },
                DepartmentId: {
                    required: 'لطفاً دپارتمان را انتخاب کنید'
                },
                ServiceCategoryIds: {
                    required: 'لطفاً حداقل یک صلاحیت را انتخاب کنید',
                    minlength: 'لطفاً حداقل یک صلاحیت را انتخاب کنید'
                },
                Description: {
                    maxlength: 'توضیحات نمی‌تواند بیشتر از 500 کاراکتر باشد'
                }
            },
            errorClass: 'text-danger',
            highlight: function (element) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element) {
                $(element).removeClass('is-invalid');
            },
            submitHandler: function (form) {
                showBulkLoading();
                return true;
            }
        });
    }

    function setupBulkEventHandlers() {
        $('#DepartmentId').on('change', function() {
            const departmentId = $(this).val();
            if (departmentId) {
                loadBulkServiceCategories(departmentId);
            }
        });
    }

    function loadBulkServiceCategories(departmentId) {
        $.get('@Url.Action("GetServiceCategoriesByDepartment", "DoctorAssignment")', { departmentId: departmentId })
            .done(function (data) {
                if (data.success) {
                    updateBulkServiceCategories(data.data);
                }
            });
    }

    function updateBulkServiceCategories(categories) {
        const select = $('#bulkServiceCategories');
        select.empty();
        
        categories.forEach(function (category) {
            select.append(new Option(category.Name, category.Id, false, false));
        });
        
        select.trigger('change');
    }

    function validateBulkForm() {
        const doctorIds = $('#doctorSelection').val();
        const departmentId = $('#DepartmentId').val();
        const assignmentType = $('input[name="AssignmentType"]:checked').val();
        const skipExisting = $('#SkipExisting').is(':checked');
        const validateCompatibility = $('#ValidateCompatibility').is(':checked');

        const errors = [];

        if (!doctorIds || doctorIds.length === 0) {
            errors.push('حداقل یک پزشک باید انتخاب شود');
        }

        if (!departmentId) {
            errors.push('دپارتمان باید انتخاب شود');
        }

        if (errors.length > 0) {
            Swal.fire({
                title: 'خطا در اعتبارسنجی',
                html: errors.map(error => `<p>• ${error}</p>`).join(''),
                icon: 'error',
                confirmButtonText: 'باشه'
            });
            return false;
        }

        Swal.fire({
            title: 'اعتبارسنجی موفق',
            text: 'فرم شما معتبر است و آماده ارسال می‌باشد',
            icon: 'success',
            confirmButtonText: 'باشه'
        });

        return true;
    }

    function previewBulkAssignment() {
        const selectedDoctors = $('#doctorSelection option:selected');
        const department = $('#DepartmentId option:selected').text();
        const serviceCategories = $('#bulkServiceCategories option:selected');
        const assignmentType = $('input[name="AssignmentType"]:checked').val();

        if (selectedDoctors.length === 0) {
            Swal.fire({
                title: 'خطا',
                text: 'لطفاً ابتدا پزشکان را انتخاب کنید',
                icon: 'error',
                confirmButtonText: 'باشه'
            });
            return;
        }

        // Update preview content
        const doctorsList = selectedDoctors.map(function() { return `<li>${$(this).text()}</li>`; }).get().join('');
        $('#selectedDoctorsList').html(doctorsList);

        const assignmentDetails = `
            <p><strong>دپارتمان:</strong> ${department}</p>
            <p><strong>صلاحیت‌ها:</strong> ${serviceCategories.map(function() { return $(this).text(); }).get().join(', ') || 'هیچ صلاحیتی انتخاب نشده'}</p>
            <p><strong>نوع انتساب:</strong> ${getAssignmentTypeText(assignmentType)}</p>
            <p><strong>تعداد پزشکان:</strong> ${selectedDoctors.length}</p>
        `;
        $('#assignmentDetails').html(assignmentDetails);

        $('#previewSection').show();
    }

    function getAssignmentTypeText(type) {
        switch (type) {
            case 'New': return 'انتساب جدید';
            case 'Replace': return 'جایگزینی انتسابات موجود';
            case 'Add': return 'افزودن به انتسابات موجود';
            default: return 'نامشخص';
        }
    }

    function checkBulkCompatibility() {
        const doctorIds = $('#doctorSelection').val();
        const departmentId = $('#DepartmentId').val();

        if (!doctorIds || doctorIds.length === 0) {
            Swal.fire({
                title: 'خطا',
                text: 'لطفاً ابتدا پزشکان را انتخاب کنید',
                icon: 'error',
                confirmButtonText: 'باشه'
            });
            return;
        }

        if (!departmentId) {
            Swal.fire({
                title: 'خطا',
                text: 'لطفاً ابتدا دپارتمان را انتخاب کنید',
                icon: 'error',
                confirmButtonText: 'باشه'
            });
            return;
        }

        // TODO: Implement actual compatibility check
        Swal.fire({
            title: 'بررسی سازگاری',
            text: 'در حال بررسی سازگاری پزشکان با دپارتمان...',
            icon: 'info',
            confirmButtonText: 'باشه'
        });
    }

    function showBulkLoading() {
        Swal.fire({
            title: 'در حال ذخیره...',
            text: 'لطفاً صبر کنید',
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        });
    }
</script>
