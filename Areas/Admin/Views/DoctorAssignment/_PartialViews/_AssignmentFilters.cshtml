@model ClinicApp.ViewModels.DoctorManagementVM.AssignmentFilterViewModel

<div class="filters-card p-4 mb-4">
    <h5 class="mb-3">
        <i class="fas fa-filter me-2"></i>
        فیلترهای جستجو
    </h5>

    @using (Html.BeginForm("Index", "DoctorAssignment", FormMethod.Get, new { id = "filterForm" }))
    {
        <div class="row">
            <!-- Doctor Filter -->
            <div class="col-md-3 mb-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.DoctorName, "نام پزشک", new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.DoctorName, new { @class = "form-control", placeholder = "جستجو بر اساس نام..." })
                </div>
            </div>

            <!-- Department Filter -->
            <div class="col-md-3 mb-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.DepartmentId, "دپارتمان", new { @class = "form-label fw-bold" })
                    @Html.DropDownListFor(m => m.DepartmentId, 
                        new SelectList(ViewBag.Departments, "Id", "Name"), 
                        "همه دپارتمان‌ها", 
                        new { @class = "form-select" })
                </div>
            </div>

            <!-- Service Category Filter -->
            <div class="col-md-3 mb-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.ServiceCategoryId, "صلاحیت خدماتی", new { @class = "form-label fw-bold" })
                    @Html.DropDownListFor(m => m.ServiceCategoryId, 
                        new SelectList(ViewBag.ServiceCategories, "Id", "Name"), 
                        "همه صلاحیت‌ها", 
                        new { @class = "form-select" })
                </div>
            </div>

            <!-- Status Filter -->
            <div class="col-md-3 mb-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.Status, "وضعیت", new { @class = "form-label fw-bold" })
                    @Html.DropDownListFor(m => m.Status, 
                        new SelectList(new[] {
                            new { Value = "", Text = "همه وضعیت‌ها" },
                            new { Value = "Active", Text = "فعال" },
                            new { Value = "Inactive", Text = "غیرفعال" }
                        }, "Value", "Text"), 
                        new { @class = "form-select" })
                </div>
            </div>
        </div>

        <div class="row">
            <!-- Date Range Filters -->
            <div class="col-md-3 mb-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.AssignmentDateFrom, "تاریخ انتساب از", new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.AssignmentDateFrom, new { @class = "form-control datepicker", placeholder = "yyyy/mm/dd" })
                </div>
            </div>

            <div class="col-md-3 mb-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.AssignmentDateTo, "تاریخ انتساب تا", new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.AssignmentDateTo, new { @class = "form-control datepicker", placeholder = "yyyy/mm/dd" })
                </div>
            </div>

            <!-- Assignment Type Filter -->
            <div class="col-md-3 mb-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.AssignmentType, "نوع انتساب", new { @class = "form-label fw-bold" })
                    @Html.DropDownListFor(m => m.AssignmentType, 
                        new SelectList(new[] {
                            new { Value = "", Text = "همه انواع" },
                            new { Value = "Single", Text = "تک دپارتمانه" },
                            new { Value = "Multi", Text = "چند دپارتمانه" }
                        }, "Value", "Text"), 
                        new { @class = "form-select" })
                </div>
            </div>

            <!-- Sort Order -->
            <div class="col-md-3 mb-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.SortOrder, "مرتب‌سازی", new { @class = "form-label fw-bold" })
                    @Html.DropDownListFor(m => m.SortOrder, 
                        new SelectList(new[] {
                            new { Value = "DoctorName", Text = "نام پزشک" },
                            new { Value = "DepartmentName", Text = "نام دپارتمان" },
                            new { Value = "AssignmentDate", Text = "تاریخ انتساب" },
                            new { Value = "Status", Text = "وضعیت" }
                        }, "Value", "Text"), 
                        new { @class = "form-select" })
                </div>
            </div>
        </div>

        <!-- Advanced Filters -->
        <div class="row">
            <div class="col-12">
                <div class="advanced-filters" id="advancedFilters" style="display: none;">
                    <h6 class="mb-3">
                        <i class="fas fa-cog me-2"></i>
                        فیلترهای پیشرفته
                    </h6>
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.HasServiceCategories, "دارای صلاحیت", new { @class = "form-label fw-bold" })
                                @Html.DropDownListFor(m => m.HasServiceCategories, 
                                    new SelectList(new[] {
                                        new { Value = "", Text = "همه" },
                                        new { Value = "true", Text = "دارد" },
                                        new { Value = "false", Text = "ندارد" }
                                    }, "Value", "Text"), 
                                    new { @class = "form-select" })
                            </div>
                        </div>

                        <div class="col-md-3 mb-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.MinAssignments, "حداقل انتسابات", new { @class = "form-label fw-bold" })
                                @Html.TextBoxFor(m => m.MinAssignments, new { @class = "form-control", type = "number", min = "0", placeholder = "0" })
                            </div>
                        </div>

                        <div class="col-md-3 mb-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.MaxAssignments, "حداکثر انتسابات", new { @class = "form-label fw-bold" })
                                @Html.TextBoxFor(m => m.MaxAssignments, new { @class = "form-control", type = "number", min = "0", placeholder = "نامحدود" })
                            </div>
                        </div>

                        <div class="col-md-3 mb-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.CreatedBy, "ایجاد شده توسط", new { @class = "form-label fw-bold" })
                                @Html.TextBoxFor(m => m.CreatedBy, new { @class = "form-control", placeholder = "نام کاربر..." })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filter Actions -->
        <div class="row mt-3">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <button type="submit" class="btn btn-primary me-2">
                            <i class="fas fa-search me-2"></i>
                            اعمال فیلتر
                        </button>
                        <button type="button" class="btn btn-outline-secondary me-2" onclick="resetFilters()">
                            <i class="fas fa-undo me-2"></i>
                            پاک کردن
                        </button>
                        <button type="button" class="btn btn-outline-info" onclick="toggleAdvancedFilters()">
                            <i class="fas fa-cog me-2"></i>
                            فیلترهای پیشرفته
                        </button>
                    </div>
                    <div>
                        <button type="button" class="btn btn-outline-success" onclick="exportFilteredData()">
                            <i class="fas fa-download me-2"></i>
                            خروجی
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .filters-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        border: 1px solid #e9ecef;
    }
    .filters-card h5 {
        color: #667eea;
        font-weight: 600;
        border-bottom: 2px solid #f8f9fa;
        padding-bottom: 10px;
    }
    .form-label {
        font-size: 0.9rem;
        margin-bottom: 8px;
    }
    .form-control, .form-select {
        border-radius: 8px;
        border: 1px solid #ced4da;
        transition: all 0.3s ease;
    }
    .form-control:focus, .form-select:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }
    .advanced-filters {
        background: #f8f9fa;
        border-radius: 10px;
        padding: 20px;
        margin-top: 20px;
        border: 1px solid #e9ecef;
    }
    .advanced-filters h6 {
        color: #495057;
        font-weight: 600;
    }
    .btn {
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    .btn:hover {
        transform: translateY(-1px);
    }
</style>

<script>
    $(document).ready(function () {
        initializeFilters();
        setupFilterEventHandlers();
    });

    function initializeFilters() {
        // Initialize date pickers
        $('.datepicker').persianDatepicker({
            format: 'YYYY/MM/DD',
            initialValue: false,
            autoClose: true,
            onSelect: function (unix) {
                // Handle date selection
            }
        });

        // Initialize Select2 for dropdowns
        $('#DepartmentId, #ServiceCategoryId, #Status, #AssignmentType, #SortOrder').select2({
            placeholder: 'انتخاب کنید...',
            allowClear: true,
            language: 'fa',
            width: '100%'
        });
    }

    function setupFilterEventHandlers() {
        // Auto-submit form on certain changes
        $('#DepartmentId, #ServiceCategoryId, #Status, #AssignmentType').on('change', function() {
            if ($(this).val()) {
                $('#filterForm').submit();
            }
        });

        // Debounced search for text inputs
        let searchTimeout;
        $('#DoctorName, #CreatedBy').on('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(function() {
                $('#filterForm').submit();
            }, 500);
        });
    }

    function resetFilters() {
        Swal.fire({
            title: 'پاک کردن فیلترها',
            text: 'آیا می‌خواهید تمام فیلترها پاک شوند؟',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'بله، پاک کن',
            cancelButtonText: 'انصراف'
        }).then((result) => {
            if (result.isConfirmed) {
                // Reset all form fields
                $('#filterForm')[0].reset();
                
                // Clear Select2 selections
                $('#DepartmentId, #ServiceCategoryId, #Status, #AssignmentType, #SortOrder').val(null).trigger('change');
                
                // Clear date pickers
                $('.datepicker').val('');
                
                // Hide advanced filters
                $('#advancedFilters').hide();
                
                // Submit form to refresh results
                $('#filterForm').submit();
            }
        });
    }

    function toggleAdvancedFilters() {
        const advancedFilters = $('#advancedFilters');
        const button = $('button[onclick="toggleAdvancedFilters()"]');
        
        if (advancedFilters.is(':visible')) {
            advancedFilters.slideUp();
            button.html('<i class="fas fa-cog me-2"></i>فیلترهای پیشرفته');
        } else {
            advancedFilters.slideDown();
            button.html('<i class="fas fa-times me-2"></i>بستن فیلترهای پیشرفته');
        }
    }

    function exportFilteredData() {
        const formData = $('#filterForm').serialize();
        const exportUrl = '@Url.Action("ExportAssignments", "DoctorAssignment")?' + formData;
        
        Swal.fire({
            title: 'در حال آماده‌سازی خروجی...',
            text: 'لطفاً صبر کنید',
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        });

        // Create a temporary link to download the file
        const link = document.createElement('a');
        link.href = exportUrl;
        link.download = 'assignments_export.xlsx';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);

        setTimeout(() => {
            Swal.fire({
                title: 'خروجی آماده شد',
                text: 'فایل با موفقیت دانلود شد',
                icon: 'success',
                confirmButtonText: 'باشه'
            });
        }, 1000);
    }

    // Keyboard shortcuts
    $(document).keydown(function(e) {
        // Ctrl + F to focus on search
        if (e.ctrlKey && e.keyCode === 70) {
            e.preventDefault();
            $('#DoctorName').focus();
        }
        
        // Ctrl + R to reset filters
        if (e.ctrlKey && e.keyCode === 82) {
            e.preventDefault();
            resetFilters();
        }
        
        // Ctrl + E to export
        if (e.ctrlKey && e.keyCode === 69) {
            e.preventDefault();
            exportFilteredData();
        }
    });
</script>
