@{
    ViewBag.Title = "مدیریت انتسابات پزشکان";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@model dynamic

@section Styles {
    <link href="~/Content/plugins/DataTables/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/DataTables/css/responsive.bootstrap4.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <style>
        .stats-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 15px;
            color: white;
            transition: transform 0.3s ease;
        }
        .stats-card:hover {
            transform: translateY(-5px);
        }
        .stats-icon {
            font-size: 2.5rem;
            opacity: 0.8;
        }
        .assignment-table {
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .btn-assignment {
            border-radius: 25px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        .btn-assignment:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        .search-box {
            background: white;
            border-radius: 25px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        .loading-spinner {
            display: none;
        }
    </style>
}

<div class="container-fluid">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-0 text-primary">
                        <i class="fas fa-user-md me-2"></i>
                        مدیریت انتسابات پزشکان
                    </h2>
                    <p class="text-muted mb-0">مدیریت کامل انتسابات پزشکان به دپارتمان‌ها و سرفصل‌های خدماتی</p>
                </div>
                <div>
                    <button type="button" class="btn btn-success btn-assignment" onclick="showBulkAssignmentModal()">
                        <i class="fas fa-users me-2"></i>
                        انتساب گروهی
                    </button>
                    <button type="button" class="btn btn-info btn-assignment" onclick="refreshData()">
                        <i class="fas fa-sync-alt me-2"></i>
                        بروزرسانی
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters and Statistics -->
    @Html.Partial("_AssignmentFilters", Model.Filters)
    @Html.Partial("_AssignmentStats", Model.Stats)

    <!-- Main Content -->
    <div class="row">
        <div class="col-12">
            <div class="assignment-table p-4">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h4 class="mb-0">
                        <i class="fas fa-list me-2"></i>
                        لیست انتسابات پزشکان
                    </h4>
                    <div class="loading-spinner">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">در حال بارگذاری...</span>
                        </div>
                    </div>
                </div>

                <div class="table-responsive">
                    <table id="assignmentsTable" class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>ردیف</th>
                                <th>نام پزشک</th>
                                <th>کد ملی</th>
                                <th>دپارتمان‌ها</th>
                                <th>سرفصل‌های خدماتی</th>
                                <th>وضعیت</th>
                                <th>تاریخ انتساب</th>
                                <th>عملیات</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Data will be loaded via AJAX -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bulk Assignment Modal -->
<div class="modal fade" id="bulkAssignmentModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-users me-2"></i>
                    انتساب گروهی پزشکان
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label class="form-label">انتخاب پزشکان</label>
                        <select id="bulkDoctors" class="form-select" multiple>
                            <!-- Doctors will be loaded here -->
                        </select>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">دپارتمان مقصد</label>
                        <select id="bulkDepartment" class="form-select">
                            <option value="">انتخاب کنید...</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 mb-3">
                        <label class="form-label">سرفصل‌های خدماتی</label>
                        <select id="bulkServiceCategories" class="form-select" multiple>
                            <!-- Service categories will be loaded here -->
                        </select>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">انصراف</button>
                <button type="button" class="btn btn-success" onclick="performBulkAssignment()">
                    <i class="fas fa-save me-2"></i>
                    انتساب گروهی
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/content/plugins/DataTables/js/jquery.dataTables.min.js"></script>
    <script src="~/content/plugins/DataTables/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/content/plugins/DataTables/js/dataTables.responsive.min.js"></script>
    <script src="~/content/plugins/sweetalert2/sweetalert2@11.js"></script>
    <script src="~/content/plugins/select2/js/select2.min.js"></script>
    <script src="~/content/plugins/select2/js/fa.min.js"></script>
    
    <script>
        let assignmentsTable;
        let currentFilters = {};

        $(document).ready(function () {
            initializeDataTable();
            initializeSelect2();
            loadInitialData();
        });

        function initializeDataTable() {
            assignmentsTable = $('#assignmentsTable').DataTable({
                language: {
                    url: '/Scripts/DataTables/persian.json'
                },
                responsive: true,
                processing: true,
                serverSide: false,
                pageLength: 25,
                order: [[0, 'asc']],
                columnDefs: [
                    { targets: [0, 7], orderable: false },
                    { targets: [3, 4], width: '20%' },
                    { targets: [5], width: '10%' }
                ],
                drawCallback: function (settings) {
                    // Add custom styling after table is drawn
                }
            });
        }

        function initializeSelect2() {
            $('#departmentFilter, #bulkDepartment').select2({
                placeholder: 'انتخاب کنید...',
                allowClear: true,
                language: 'fa'
            });

            $('#bulkDoctors, #bulkServiceCategories').select2({
                placeholder: 'انتخاب کنید...',
                allowClear: true,
                language: 'fa'
            });
        }

        function loadInitialData() {
            showLoading();
            
            // Load departments for filter
            $.get('@Url.Action("GetDepartments", "DoctorDepartment")')
                .done(function (data) {
                    if (data.success) {
                        populateDepartmentFilter(data.data);
                    }
                });

            // Load doctors for bulk assignment
            $.get('@Url.Action("GetDoctors", "Doctor")')
                .done(function (data) {
                    if (data.success) {
                        populateBulkDoctors(data.data);
                    }
                });

            // Load service categories for bulk assignment
            $.get('@Url.Action("GetServiceCategories", "DoctorServiceCategory")')
                .done(function (data) {
                    if (data.success) {
                        populateBulkServiceCategories(data.data);
                    }
                });

            hideLoading();
        }

        function populateDepartmentFilter(departments) {
            const filter = $('#departmentFilter');
            filter.empty().append('<option value="">همه دپارتمان‌ها</option>');
            
            departments.forEach(function (dept) {
                filter.append(`<option value="${dept.Id}">${dept.Name}</option>`);
            });
        }

        function populateBulkDoctors(doctors) {
            const select = $('#bulkDoctors');
            select.empty();
            
            doctors.forEach(function (doctor) {
                select.append(`<option value="${doctor.Id}">${doctor.FullName} - ${doctor.NationalCode}</option>`);
            });
        }

        function populateBulkServiceCategories(categories) {
            const select = $('#bulkServiceCategories');
            select.empty();
            
            categories.forEach(function (category) {
                select.append(`<option value="${category.Id}">${category.Name}</option>`);
            });
        }

        function applyFilters() {
            currentFilters = {
                search: $('#searchInput').val(),
                department: $('#departmentFilter').val(),
                status: $('#statusFilter').val()
            };

            refreshTable();
        }

        function refreshTable() {
            showLoading();
            
            // Clear current table data
            assignmentsTable.clear();

            // Load filtered data
            $.post('@Url.Action("GetAssignments", "DoctorAssignment")', currentFilters)
                .done(function (data) {
                    if (data.success) {
                        populateTable(data.data);
                    } else {
                        showError('خطا در بارگذاری داده‌ها', data.message);
                    }
                })
                .fail(function () {
                    showError('خطا در ارتباط با سرور', 'لطفاً دوباره تلاش کنید');
                })
                .always(function () {
                    hideLoading();
                });
        }

        function populateTable(assignments) {
            assignments.forEach(function (assignment, index) {
                const row = [
                    index + 1,
                    assignment.DoctorName,
                    assignment.DoctorNationalCode,
                    formatDepartments(assignment.Departments),
                    formatServiceCategories(assignment.ServiceCategories),
                    formatStatus(assignment.Status),
                    formatDate(assignment.AssignmentDate),
                    createActionButtons(assignment.Id)
                ];
                
                assignmentsTable.row.add(row);
            });
            
            assignmentsTable.draw();
        }

        function formatDepartments(departments) {
            if (!departments || departments.length === 0) {
                return '<span class="text-muted">بدون انتساب</span>';
            }
            
            return departments.map(dept => 
                `<span class="badge bg-primary me-1">${dept.Name}</span>`
            ).join('');
        }

        function formatServiceCategories(categories) {
            if (!categories || categories.length === 0) {
                return '<span class="text-muted">بدون صلاحیت</span>';
            }
            
            return categories.map(cat => 
                `<span class="badge bg-info me-1">${cat.Name}</span>`
            ).join('');
        }

        function formatStatus(status) {
            const statusMap = {
                'active': '<span class="badge bg-success">فعال</span>',
                'inactive': '<span class="badge bg-secondary">غیرفعال</span>',
                'pending': '<span class="badge bg-warning">انتظار تایید</span>'
            };
            
            return statusMap[status] || '<span class="badge bg-secondary">نامشخص</span>';
        }

        function formatDate(dateString) {
            if (!dateString) return '-';
            
            const date = new Date(dateString);
            return date.toLocaleDateString('fa-IR');
        }

        function createActionButtons(assignmentId) {
            return `
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="viewDetails(${assignmentId})" title="مشاهده جزئیات">
                        <i class="fas fa-eye"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-success" onclick="editAssignment(${assignmentId})" title="ویرایش">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-warning" onclick="transferDoctor(${assignmentId})" title="انتقال">
                        <i class="fas fa-exchange-alt"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeAssignment(${assignmentId})" title="حذف">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
            `;
        }

        function viewDetails(assignmentId) {
            window.location.href = '@Url.Action("Details", "DoctorAssignment")/' + assignmentId;
        }

        function editAssignment(assignmentId) {
            window.location.href = '@Url.Action("AssignToDepartment", "DoctorAssignment")/' + assignmentId;
        }

        function transferDoctor(assignmentId) {
            window.location.href = '@Url.Action("TransferDoctor", "DoctorAssignment")/' + assignmentId;
        }

        function removeAssignment(assignmentId) {
            Swal.fire({
                title: 'آیا مطمئن هستید؟',
                text: 'این عملیات قابل بازگشت نیست!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'بله، حذف کن',
                cancelButtonText: 'انصراف'
            }).then((result) => {
                if (result.isConfirmed) {
                    performRemoveAssignment(assignmentId);
                }
            });
        }

        function performRemoveAssignment(assignmentId) {
            showLoading();
            
            $.post('@Url.Action("RemoveAssignments", "DoctorAssignment")', { id: assignmentId })
                .done(function (data) {
                    if (data.success) {
                        showSuccess('حذف موفق', 'انتساب با موفقیت حذف شد');
                        refreshTable();
                    } else {
                        showError('خطا در حذف', data.message);
                    }
                })
                .fail(function () {
                    showError('خطا در ارتباط با سرور', 'لطفاً دوباره تلاش کنید');
                })
                .always(function () {
                    hideLoading();
                });
        }

        function showBulkAssignmentModal() {
            $('#bulkAssignmentModal').modal('show');
        }

        function performBulkAssignment() {
            const doctors = $('#bulkDoctors').val();
            const department = $('#bulkDepartment').val();
            const categories = $('#bulkServiceCategories').val();

            if (!doctors || doctors.length === 0) {
                showError('خطا', 'لطفاً حداقل یک پزشک انتخاب کنید');
                return;
            }

            if (!department) {
                showError('خطا', 'لطفاً دپارتمان را انتخاب کنید');
                return;
            }

            const assignments = doctors.map(doctorId => ({
                DoctorId: doctorId,
                DepartmentId: department,
                ServiceCategoryIds: categories || []
            }));

            showLoading();
            
            $.post('@Url.Action("BulkAssign", "DoctorAssignment")', { models: assignments })
                .done(function (data) {
                    if (data.success) {
                        showSuccess('انتساب گروهی موفق', 
                            `${data.successCount} پزشک با موفقیت انتساب شدند`);
                        $('#bulkAssignmentModal').modal('hide');
                        refreshTable();
                    } else {
                        showError('خطا در انتساب گروهی', data.message);
                    }
                })
                .fail(function () {
                    showError('خطا در ارتباط با سرور', 'لطفاً دوباره تلاش کنید');
                })
                .always(function () {
                    hideLoading();
                });
        }

        function refreshData() {
            refreshTable();
        }

        function showLoading() {
            $('.loading-spinner').show();
        }

        function hideLoading() {
            $('.loading-spinner').hide();
        }

        function showSuccess(title, message) {
            Swal.fire({
                title: title,
                text: message,
                icon: 'success',
                confirmButtonText: 'باشه'
            });
        }

        function showError(title, message) {
            Swal.fire({
                title: title,
                text: message,
                icon: 'error',
                confirmButtonText: 'باشه'
            });
        }

        // Search functionality
        $('#searchInput').on('keyup', function (e) {
            if (e.keyCode === 13) {
                applyFilters();
            }
        });

        // Auto-refresh every 5 minutes
        setInterval(function () {
            refreshTable();
        }, 300000);
    </script>
}
