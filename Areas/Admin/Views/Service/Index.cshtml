@model ClinicApp.Interfaces.PagedResult<ClinicApp.ViewModels.ServiceIndexViewModel>
@{
    ViewBag.Title = "مدیریت خدمات پزشکی";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link href="~/Content/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <style>
        /* استایل‌های اختصاصی برای مدیریت خدمات پزشکی */
        .header-section {
            background: linear-gradient(135deg, #007bff 0%, #6610f2 100%);
            color: white;
            padding: 2rem 0;
            margin: -15px -15px 20px -15px;
            border-radius: 0 0 15px 15px;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .header-info h1 {
            margin: 0;
            font-size: 1.8rem;
            font-weight: 600;
        }

        .header-info p {
            margin: 5px 0 0 0;
            opacity: 0.9;
            font-size: 1rem;
        }

        .stats-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 25px;
        }

        .stats-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            border-left: 4px solid #007bff;
            transition: all 0.3s ease;
        }

        .stats-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.15);
        }

        .stats-card h3 {
            margin: 0 0 5px 0;
            font-size: 1.4rem;
            color: #2c3e50;
        }

        .stats-card p {
            margin: 0;
            color: #7f8c8d;
            font-size: 0.9rem;
        }

        .search-filters {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        .table-container {
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .table thead th {
            background: #f8f9fa;
            border: none;
            font-weight: 600;
            color: #2c3e50;
            padding: 15px;
        }

        .table tbody tr {
            transition: background-color 0.2s;
        }

        .table tbody tr:hover {
            background-color: #f8f9fa;
        }

        .service-card {
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            transition: all 0.3s ease;
        }

        .service-card:hover {
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            transform: translateY(-2px);
        }

        .service-header {
            display: flex;
            justify-content: space-between;
            align-items: start;
            margin-bottom: 10px;
        }

        .service-title {
            font-weight: 600;
            color: #2c3e50;
            margin: 0;
        }

        .service-code {
            background: #e9ecef;
            color: #495057;
            padding: 2px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-family: monospace;
        }

        .service-price {
            font-weight: 600;
            color: #28a745;
            font-size: 1.1rem;
        }

        .service-meta {
            display: flex;
            gap: 15px;
            align-items: center;
            color: #6c757d;
                font-size: 0.9rem;
            }

        .badge {
            font-size: 0.75rem;
            padding: 4px 8px;
        }

        .action-buttons .btn {
            margin: 0 2px;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 0.85rem;
        }

        .pagination-container {
            background: white;
            padding: 15px;
            border-radius: 0 0 10px 10px;
            border-top: 1px solid #dee2e6;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #6c757d;
        }

        .empty-state i {
            font-size: 4rem;
            margin-bottom: 20px;
            opacity: 0.3;
        }

        .category-info {
            background: #e3f2fd;
            border: 1px solid #bbdefb;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }

        .category-info h6 {
            margin: 0 0 5px 0;
            color: #1976d2;
            font-weight: 600;
        }

        .view-toggle {
            background: white;
            border-radius: 8px;
            padding: 5px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .view-toggle .btn {
            border: none;
            border-radius: 6px;
            padding: 8px 15px;
        }

        @@media (max-width: 768px) {
            .header-content {
                flex-direction: column;
                text-align: center;
                gap: 15px;
            }

            .stats-cards {
                grid-template-columns: 1fr;
            }

            .table-container {
                overflow-x: auto;
            }

            .service-header {
                flex-direction: column;
                gap: 10px;
            }
        }
    </style>
}

<!-- Header Section -->
<div class="header-section">
    <div class="header-content">
        <div class="header-info">
            <h1><i class="fas fa-stethoscope me-2"></i>مدیریت خدمات پزشکی</h1>
            <p>مدیریت و سازماندهی خدمات پزشکی ارائه شده</p>
            </div>
        <div class="header-actions">
            @if (ViewBag.ServiceCategoryId != null)
            {
                <a href="@Url.Action("Create", new { serviceCategoryId = ViewBag.ServiceCategoryId })" 
                   class="btn btn-light btn-lg">
                    <i class="fas fa-plus me-2"></i>خدمت جدید
                </a>
            }
        </div>
            </div>
        </div>

<!-- آمار کلی -->
<div class="stats-cards">
                <div class="stats-card">
        <h3 id="totalServices">@(Model?.TotalItems ?? 0)</h3>
        <p>کل خدمات</p>
            </div>
                <div class="stats-card">
        <h3 id="activeServices">@(Model?.Items?.Count(s => s.IsActive) ?? 0)</h3>
        <p>خدمات فعال</p>
            </div>
                <div class="stats-card">
        <h3 id="avgPrice">@(Model?.Items?.Any() == true ? Model.Items.Average(s => s.Price).ToString("N0") : "0")</h3>
        <p>میانگین قیمت (تومان)</p>
            </div>
                <div class="stats-card">
        <h3 id="totalCategories">@(Model?.Items?.Select(s => s.ServiceCategoryId).Distinct().Count() ?? 0)</h3>
        <p>دسته‌بندی‌ها</p>
            </div>
        </div>

<!-- نمایش اطلاعات دسته‌بندی انتخاب شده -->
@if (!string.IsNullOrEmpty(ViewBag.ServiceCategoryName))
{
    <div class="category-info">
        <h6><i class="fas fa-layer-group me-2"></i>دسته‌بندی انتخاب شده</h6>
        <small>@ViewBag.ServiceCategoryName • @ViewBag.DepartmentName</small>
    </div>
}

<!-- فیلترها و جستجو - Medical Environment -->
<div class="search-filters">
    <form method="get" id="searchForm" action="@Url.Action("Index", "Service")" novalidate>
        <div class="row g-3">
            <div class="col-md-3">
                <label class="form-label">دسته‌بندی:</label>
                <select class="form-select" name="serviceCategoryId" id="categorySelect">
                    <option value="">همه دسته‌بندی‌ها</option>
                    @if (ViewBag.ServiceCategories != null)
                    {
                        foreach (var category in (IEnumerable<SelectListItem>)ViewBag.ServiceCategories)
                        {
                            <option value="@category.Value" @(category.Selected ? "selected" : "")>@category.Text</option>
                        }
                    }
                </select>
            </div>
                <div class="col-md-4">
                <label class="form-label">جستجو:</label>
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="جستجو در خدمات..." 
                           name="searchTerm" value="@ViewBag.SearchTerm" id="searchInput"
                           maxlength="100" pattern="[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF\\s\\w\\d\\-\\(\\)\\,\\.\\!\\?]+">
                    <button class="btn btn-outline-secondary" type="submit" id="searchBtn">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
                </div>
                <div class="col-md-3">
                <label class="form-label">تعداد نمایش:</label>
                <select class="form-select" name="pageSize" id="pageSizeSelect">
                    <option value="10" @(ViewBag.PageSize == 10 ? "selected" : "")>10</option>
                    <option value="25" @(ViewBag.PageSize == 25 ? "selected" : "")>25</option>
                    <option value="50" @(ViewBag.PageSize == 50 ? "selected" : "")>50</option>
                </select>
                </div>
                <div class="col-md-2">
                <label class="form-label">نمایش:</label>
                <div class="view-toggle btn-group w-100" role="group">
                    <button type="button" class="btn btn-outline-primary active" id="tableViewBtn">
                        <i class="fas fa-table"></i>
                    </button>
                    <button type="button" class="btn btn-outline-primary" id="cardViewBtn">
                        <i class="fas fa-th-large"></i>
                    </button>
                </div>
            </div>
                </div>
        <input type="hidden" name="page" value="1" id="pageInput">
        <!-- 🔒 اطمینان از حفظ serviceCategoryId - Medical Environment -->
        <input type="hidden" name="serviceCategoryId" value="@ViewBag.ServiceCategoryId" id="serviceCategoryIdInput">
        <!-- 🔒 امنیت و ردیابی - Medical Environment -->
        <input type="hidden" name="timestamp" value="@DateTime.Now.Ticks" id="timestampInput">
    </form>
        </div>

<!-- نمایش خدمات -->
<div id="servicesContainer">
    @if (Model?.Items != null && Model.Items.Any())
    {
        <!-- نمایش جدولی -->
        <div id="tableView" class="table-container">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                        <th>نام خدمت</th>
                        <th>کد</th>
                            <th>دسته‌بندی</th>
                        <th>قیمت</th>
                            <th>وضعیت</th>
                            <th>تاریخ ایجاد</th>
                            <th>عملیات</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var service in Model.Items)
                    {
                        <tr data-service-id="@service.ServiceId">
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="me-3">
                                        <i class="fas fa-stethoscope text-primary"></i>
                                    </div>
                                    <div>
                                        <strong>@service.Title</strong>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <span class="service-code">@service.ServiceCode</span>
                            </td>
                            <td>
                                <span class="badge bg-info">@service.ServiceCategoryTitle</span>
                            </td>
                            <td>
                                <span class="service-price">@service.PriceFormatted تومان</span>
                            </td>
                            <td>
                                @if (service.IsActive)
                                {
                                    <span class="badge bg-success">فعال</span>
                                        }
                                        else
                                        {
                                    <span class="badge bg-danger">غیرفعال</span>
                                        }
                                    </td>
                            <td>
                                <small class="text-muted">@service.CreatedAtShamsi</small>
                            </td>
                                    <td>
                                        <div class="action-buttons">
                                    <a href="@Url.Action("Details", new { id = service.ServiceId })" 
                                       class="btn btn-sm btn-outline-info" title="مشاهده جزئیات">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                    <a href="@Url.Action("Edit", new { id = service.ServiceId })" 
                                       class="btn btn-sm btn-outline-warning" title="ویرایش">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                    <button type="button" class="btn btn-sm btn-outline-danger" 
                                            onclick="confirmDelete(@service.ServiceId, '@service.Title')" 
                                               title="حذف">
                                                <i class="fas fa-trash"></i>
                                    </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        <!-- نمایش کارتی -->
        <div id="cardView" class="row" style="display: none;">
            @foreach (var service in Model.Items)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="service-card" data-service-id="@service.ServiceId">
                        <div class="service-header">
                            <div>
                                <h6 class="service-title">@service.Title</h6>
                                <span class="service-code">@service.ServiceCode</span>
                            </div>
                            <div class="text-end">
                                <div class="service-price">@service.PriceFormatted تومان</div>
                                @if (service.IsActive)
                                {
                                    <span class="badge bg-success">فعال</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">غیرفعال</span>
                                }
                            </div>
                        </div>
                        <div class="service-meta">
                            <span><i class="fas fa-layer-group me-1"></i>@service.ServiceCategoryTitle</span>
                            <span><i class="fas fa-calendar me-1"></i>@service.CreatedAtShamsi</span>
                        </div>
                        <div class="service-actions mt-3">
                            <div class="action-buttons">
                                <a href="@Url.Action("Details", new { id = service.ServiceId })" 
                                   class="btn btn-sm btn-outline-info">
                                    <i class="fas fa-eye me-1"></i>جزئیات
                                </a>
                                <a href="@Url.Action("Edit", new { id = service.ServiceId })" 
                                   class="btn btn-sm btn-outline-warning">
                                    <i class="fas fa-edit me-1"></i>ویرایش
                                </a>
                                <button type="button" class="btn btn-sm btn-outline-danger" 
                                        onclick="confirmDelete(@service.ServiceId, '@service.Title')">
                                    <i class="fas fa-trash me-1"></i>حذف
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="table-container">
            <div class="empty-state">
                <i class="fas fa-stethoscope"></i>
                <h4>هیچ خدمتی یافت نشد</h4>
                <p>برای شروع، یک خدمت جدید ایجاد کنید.</p>
                @if (ViewBag.ServiceCategoryId != null)
                {
                    <a href="@Url.Action("Create", new { serviceCategoryId = ViewBag.ServiceCategoryId })" 
                       class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>ایجاد اولین خدمت
                    </a>
                }
                else
                {
                    <a href="@Url.Action("Categories")" class="btn btn-info">
                        <i class="fas fa-layer-group me-2"></i>مدیریت دسته‌بندی‌ها
                    </a>
                }
            </div>
        </div>
    }
        </div>

<!-- Pagination -->
@if (Model?.TotalPages > 1)
{
    <div class="pagination-container">
        <nav aria-label="صفحه‌بندی">
            <ul class="pagination justify-content-center mb-0">
                @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                        <a class="page-link" href="#" onclick="changePage(@(Model.PageNumber - 1))">قبلی</a>
                        </li>
                    }

                    @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="#" onclick="changePage(@i)">@i</a>
                        </li>
                    }

                @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                        <a class="page-link" href="#" onclick="changePage(@(Model.PageNumber + 1))">بعدی</a>
                        </li>
                    }
                </ul>
            </nav>
        <div class="text-center mt-2">
            <small class="text-muted">
                نمایش @((Model.PageNumber - 1) * Model.PageSize + 1) تا @(Math.Min(Model.PageNumber * Model.PageSize, Model.TotalItems)) از @Model.TotalItems مورد
            </small>
    </div>
</div>
}

<!-- Modal حذف -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">تأیید حذف</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>آیا از حذف خدمت "<span id="deleteItemName"></span>" اطمینان دارید؟</p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>توجه:</strong> این عمل قابل بازگشت نیست.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">انصراف</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">حذف</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Content/plugins/select2/js/select2.min.js"></script>
    <script>
        $(document).ready(function() {
            console.log('🏥 MEDICAL: شروع راه‌اندازی صفحه مدیریت خدمات');
            
            // 🔒 Initialize Select2 - Medical Environment
            try {
                $('#categorySelect').select2({
                    placeholder: 'انتخاب دسته‌بندی...',
                    allowClear: true,
                    dir: 'rtl',
                width: '100%',
                    minimumResultsForSearch: 10
                });
                console.log('🏥 MEDICAL: Select2 initialized successfully');
            } catch (error) {
                console.error('🏥 MEDICAL: Select2 initialization error:', error);
            }

            // 🔒 Auto-submit on category change - Medical Environment
            $('#categorySelect').on('change', function() {
                console.log('🏥 MEDICAL: Category changed to:', $(this).val());
                $('#pageInput').val(1);
                submitSearchForm();
            });

            // 🔒 Auto-submit on page size change - Medical Environment
            $('#pageSizeSelect').on('change', function() {
                console.log('🏥 MEDICAL: Page size changed to:', $(this).val());
                $('#pageInput').val(1);
                submitSearchForm();
            });

            // 🔒 Search with Enter key - Medical Environment
            $('#searchInput').on('keypress', function(e) {
                if (e.which === 13) {
                    e.preventDefault();
                    console.log('🏥 MEDICAL: Search triggered by Enter key');
                    $('#pageInput').val(1);
                    submitSearchForm();
                }
            });

            // 🔒 Search button click - Medical Environment
            $('#searchBtn').on('click', function(e) {
                e.preventDefault();
                console.log('🏥 MEDICAL: Search button clicked');
                $('#pageInput').val(1);
                submitSearchForm();
            });

            // 🔒 View toggle - Medical Environment
            $('#tableViewBtn').on('click', function() {
                console.log('🏥 MEDICAL: Switching to table view');
                $(this).addClass('active');
                $('#cardViewBtn').removeClass('active');
                $('#tableView').show();
                $('#cardView').hide();
                localStorage.setItem('servicesViewMode', 'table');
            });

            $('#cardViewBtn').on('click', function() {
                console.log('🏥 MEDICAL: Switching to card view');
                $(this).addClass('active');
                $('#tableViewBtn').removeClass('active');
                $('#tableView').hide();
                $('#cardView').show();
                localStorage.setItem('servicesViewMode', 'card');
            });

            // 🔒 Restore view mode - Medical Environment
            try {
                const savedViewMode = localStorage.getItem('servicesViewMode') || 'table';
                console.log('🏥 MEDICAL: Restoring view mode:', savedViewMode);
                if (savedViewMode === 'card') {
                    $('#cardViewBtn').click();
                }
            } catch (error) {
                console.error('🏥 MEDICAL: Error restoring view mode:', error);
            }

            // 🔒 Form submission prevention - Medical Environment
            $('#searchForm').on('submit', function(e) {
                e.preventDefault();
                console.log('🏥 MEDICAL: Form submission prevented, using custom submit');
                submitSearchForm();
            });

            // 🔒 Input validation - Medical Environment
            $('#searchInput').on('input', function() {
                const value = $(this).val();
                if (value.length > 100) {
                    $(this).val(value.substring(0, 100));
                    showMedicalToast('⚠️ هشدار', 'حداکثر 100 کاراکتر مجاز است', 'warning');
                }
            });

            console.log('🏥 MEDICAL: صفحه مدیریت خدمات راه‌اندازی شد');
        });

        // 🔒 تابع ارسال فرم جستجو - Medical Environment
        function submitSearchForm() {
            try {
                console.log('🏥 MEDICAL: Submitting search form');
                
                // 🔒 اعتبارسنجی فرم
                const form = $('#searchForm')[0];
                if (!form) {
                    console.error('🏥 MEDICAL: Search form not found');
                    showMedicalToast('❌ خطا', 'فرم جستجو یافت نشد', 'error');
                    return;
                }

                // 🔒 اطمینان از وجود action
                if (!form.action) {
                    form.action = '@Url.Action("Index", "Service")';
                    console.log('🏥 MEDICAL: Set form action to:', form.action);
                }

                // 🔒 اطمینان از وجود serviceCategoryId در URL
                const currentUrl = new URL(window.location.href);
                const serviceCategoryId = currentUrl.searchParams.get('serviceCategoryId');
                
                if (serviceCategoryId) {
                    // اضافه کردن serviceCategoryId به فرم اگر وجود ندارد
                    let categoryInput = form.querySelector('input[name="serviceCategoryId"]');
                    if (!categoryInput) {
                        categoryInput = document.createElement('input');
                        categoryInput.type = 'hidden';
                        categoryInput.name = 'serviceCategoryId';
                        form.appendChild(categoryInput);
                    }
                    categoryInput.value = serviceCategoryId;
                    console.log('🏥 MEDICAL: Added serviceCategoryId to form:', serviceCategoryId);
                }

                // 🔒 بروزرسانی timestamp
                $('#timestampInput').val(Date.now());

                // 🔒 نمایش loading
                $('#searchBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');
                
                // 🔒 ارسال فرم
                console.log('🏥 MEDICAL: Form action:', form.action);
                console.log('🏥 MEDICAL: Form method:', form.method);
                console.log('🏥 MEDICAL: Form data:', new FormData(form));
                form.submit();
                
            } catch (error) {
                console.error('🏥 MEDICAL: Error submitting search form:', error);
                showMedicalToast('❌ خطا', 'خطا در ارسال فرم جستجو', 'error');
                $('#searchBtn').prop('disabled', false).html('<i class="fas fa-search"></i>');
            }
        }

        // 🔒 تغییر صفحه - Medical Environment
        function changePage(page) {
            try {
                console.log('🏥 MEDICAL: Changing to page:', page);
                
                // 🔒 اعتبارسنجی شماره صفحه
                if (!page || page < 1) {
                    console.warn('🏥 MEDICAL: Invalid page number:', page);
                    showMedicalToast('⚠️ هشدار', 'شماره صفحه نامعتبر است', 'warning');
                    return;
                }
                
                // 🔒 اطمینان از وجود serviceCategoryId
                const currentUrl = new URL(window.location.href);
                const serviceCategoryId = currentUrl.searchParams.get('serviceCategoryId');
                
                if (serviceCategoryId) {
                    $('#serviceCategoryIdInput').val(serviceCategoryId);
                    console.log('🏥 MEDICAL: Preserved serviceCategoryId:', serviceCategoryId);
                }
                
                $('#pageInput').val(page);
                submitSearchForm();
                
            } catch (error) {
                console.error('🏥 MEDICAL: Error changing page:', error);
                showMedicalToast('❌ خطا', 'خطا در تغییر صفحه', 'error');
            }
        }

        // تأیید حذف
        function confirmDelete(id, name) {
            $('#deleteItemName').text(name);
            $('#confirmDeleteBtn').off('click').on('click', function() {
                deleteService(id);
            });
            
            // Fix accessibility issue: Remove aria-hidden before showing modal
            $('#deleteModal').removeAttr('aria-hidden');
            $('#deleteModal').modal('show');
            
            // Restore aria-hidden when modal is hidden
            $('#deleteModal').on('hidden.bs.modal', function() {
                $(this).attr('aria-hidden', 'true');
            });
        }

        // حذف خدمت
        function deleteService(id) {
            console.log('🏥 MEDICAL: Deleting service with ID:', id);
            
            // 🔒 اطمینان از وجود Anti-Forgery Token
            var token = $('input[name="__RequestVerificationToken"]').val();
            if (!token) {
                console.error('🏥 MEDICAL: Anti-Forgery Token not found!');
                showMedicalToast('❌ خطا', 'خطای امنیتی: توکن تأیید یافت نشد. لطفاً صفحه را رفرش کنید.', 'error');
                return;
            }
            
            console.log('🏥 MEDICAL: Anti-Forgery Token found:', token.substring(0, 10) + '...');

                $.ajax({
                url: '@Url.Action("Delete")',
                    type: 'POST',
                dataType: 'json',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    data: {
                    id: id,
                    __RequestVerificationToken: token
                },
                success: function(result) {
                    $('#deleteModal').modal('hide');
                    console.log('🏥 MEDICAL: Delete result:', result);
                    console.log('🏥 MEDICAL: Result type:', typeof result);
                    console.log('🏥 MEDICAL: Result message:', result.message);
                    console.log('🏥 MEDICAL: Result success:', result.success);
                    
                    // اطمینان از وجود پیام با بررسی دقیق‌تر
                    let message = 'پیام نامشخص';
                    if (result && result.message !== undefined && result.message !== null && result.message !== '') {
                        message = result.message;
                    } else if (result && result.Message !== undefined && result.Message !== null && result.Message !== '') {
                        message = result.Message;
                    }
                    
                    const success = result && (result.success === true || result.Success === true);
                    
                    console.log('🏥 MEDICAL: Final message:', message);
                    console.log('🏥 MEDICAL: Final success:', success);
                    
                    if (success) {
                        console.log('🏥 MEDICAL: Calling showMedicalToast with success...');
                        showMedicalToast('✅ موفقیت', message, 'success');
                        // حذف ردیف از جدول
                        $(`tr[data-service-id="${id}"]`).fadeOut();
                        $(`.service-card[data-service-id="${id}"]`).fadeOut();
                        // بروزرسانی آمار
                        updateStats();
                            } else {
                        console.log('🏥 MEDICAL: Calling showMedicalToast with error...');
                        showMedicalToast('❌ خطا', message, 'error');
                    }
                },
                error: function(xhr, status, error) {
                    $('#deleteModal').modal('hide');
                    console.error('🏥 MEDICAL: Delete error:', {xhr, status, error});
                    
                    // تلاش برای استخراج پیام خطا از پاسخ
                    let errorMessage = 'خطا در ارتباط با سرور';
                    try {
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        } else if (xhr.responseText) {
                            const response = JSON.parse(xhr.responseText);
                            if (response.message) {
                                errorMessage = response.message;
                            }
                            }
                        } catch (e) {
                        console.error('🏥 MEDICAL: Error parsing response:', e);
                    }
                    
                    showMedicalToast('❌ خطا', errorMessage, 'error');
                }
            });
        }

        // 🔒 بروزرسانی آمار - Medical Environment
        function updateStats() {
            try {
                console.log('🏥 MEDICAL: Updating statistics');
                
                // شمارش تعداد خدمات باقی‌مانده
                const remainingServices = $('tr[data-service-id]').length + $('.service-card[data-service-id]').length;
                
                // بروزرسانی آمار در صفحه
                $('.stats-card .stat-value').each(function() {
                    const $stat = $(this);
                    const statType = $stat.data('stat-type');
                    
                    if (statType === 'totalServices') {
                        $stat.text(remainingServices);
                    }
                });
                
                console.log('🏥 MEDICAL: Statistics updated, remaining services:', remainingServices);
                
            } catch (error) {
                console.error('🏥 MEDICAL: Error updating statistics:', error);
            }
        }

        // 🔒 تابع اعتبارسنجی ورودی - Medical Environment
        function validateInput(input, maxLength = 100) {
            try {
                const value = input.value;
                
                // حذف کاراکترهای خطرناک
                const sanitized = value.replace(/[<>\"'&]/g, '');
                
                // بررسی طول
                if (sanitized.length > maxLength) {
                    return sanitized.substring(0, maxLength);
                }
                
                return sanitized;
                
            } catch (error) {
                console.error('🏥 MEDICAL: Input validation error:', error);
                return '';
            }
        }

        // 🔒 تابع امنیت صفحه - Medical Environment
        function securePage() {
            try {
                // جلوگیری از کلیک راست
                $(document).on('contextmenu', function(e) {
                    e.preventDefault();
                    showMedicalToast('⚠️ هشدار', 'کلیک راست غیرفعال است', 'warning');
                });
                
                // جلوگیری از کلیدهای میانبر خطرناک
                $(document).on('keydown', function(e) {
                    // F12, Ctrl+Shift+I, Ctrl+U
                    if (e.keyCode === 123 || (e.ctrlKey && e.shiftKey && e.keyCode === 73) || (e.ctrlKey && e.keyCode === 85)) {
                        e.preventDefault();
                        showMedicalToast('⚠️ هشدار', 'این عملیات مجاز نیست', 'warning');
                    }
                });
                
                console.log('🏥 MEDICAL: Page security initialized');
                
            } catch (error) {
                console.error('🏥 MEDICAL: Security initialization error:', error);
            }
        }

        // 🔒 راه‌اندازی امنیت صفحه
        $(document).ready(function() {
            securePage();
        });

        // استفاده از تابع showMedicalToast از فایل medical-toast.js
        // این تابع در فایل Content/js/medical-toast.js تعریف شده است
    </script>
    
    <!-- Anti-Forgery Token -->
    @Html.AntiForgeryToken()
}