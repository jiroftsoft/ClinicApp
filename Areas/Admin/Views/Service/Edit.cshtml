@using ClinicApp.Extensions
@using ClinicApp.Helpers
@model ClinicApp.ViewModels.ServiceCreateEditViewModel
@{
    ViewBag.Title = "ویرایش خدمات";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<!-- بسته‌های CSS مورد نیاز -->
@section Styles {
    <link href="~/Content/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <style>
        /* استایل‌های اختصاصی برای فرم ویرایش خدمات پزشکی */
        .form-section {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
            margin-bottom: 20px;
        }

        .form-section-title {
            font-weight: 600;
            color: #1a6dcc;
            margin-bottom: 15px;
            padding-bottom: 8px;
            border-bottom: 1px solid #eee;
            display: flex;
            align-items: center;
        }

            .form-section-title i {
                margin-left: 8px;
                font-size: 1.1rem;
            }

        .required:after {
            content: " *";
            color: #d32f2f;
            margin-right: 2px;
        }

        .btn-submit {
            background: linear-gradient(135deg, #1a6dcc 0%, #0d4a9e 100%);
            color: white;
            border: none;
            padding: 10px 25px;
            border-radius: 25px;
            font-weight: 500;
            transition: all 0.2s;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            font-size: 1.05rem;
        }

            .btn-submit:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(26, 109, 204, 0.4);
            }

            .btn-submit i {
                margin-left: 8px;
            }

        .btn-cancel {
            background-color: #f1f3f5;
            color: #495057;
            border-radius: 25px;
            padding: 10px 25px;
            transition: all 0.2s;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            font-size: 1.05rem;
        }

            .btn-cancel:hover {
                background-color: #e9ecef;
                transform: translateY(-2px);
            }

            .btn-cancel i {
                margin-left: 8px;
            }

        .form-control:focus {
            border-color: #1a6dcc;
            box-shadow: 0 0 0 0.2rem rgba(26, 109, 204, 0.25);
        }

        .select2-container .select2-selection--single {
            height: 42px;
            padding: 6px 12px;
            font-size: 1rem;
        }

        .select2-container--default .select2-selection--single .select2-selection__rendered {
            line-height: 28px;
            padding-right: 10px;
        }

        .select2-container--default .select2-selection--single .select2-selection__arrow {
            height: 40px;
        }

        .form-note {
            font-size: 0.85rem;
            color: #6c757d;
            margin-top: 4px;
            font-style: italic;
        }

        .validation-summary-errors {
            background-color: #ffebee;
            border-radius: 6px;
            padding: 12px;
            margin-bottom: 15px;
            border-right: 3px solid #d32f2f;
        }

            .validation-summary-errors ul {
                margin-bottom: 0;
                padding-left: 20px;
            }

            .validation-summary-errors li {
                margin-bottom: 4px;
            }

        .audit-info {
            background-color: #f8f9fa;
            border-radius: 6px;
            padding: 15px;
            margin-top: 15px;
            border-left: 3px solid #1a6dcc;
        }

            .audit-info h6 {
                color: #1a6dcc;
                margin-top: 0;
                display: flex;
                align-items: center;
            }

                .audit-info h6 i {
                    margin-left: 8px;
                }

            .audit-info .info-row {
                display: flex;
                justify-content: space-between;
                padding: 8px 0;
                border-bottom: 1px dashed #eee;
            }

                .audit-info .info-row:last-child {
                    border-bottom: none;
                }

            .audit-info .info-label {
                font-weight: 500;
                color: #495057;
            }

            .audit-info .info-value {
                font-weight: 500;
            }

        .form-actions {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 10px;
        }

        .medical-highlight {
            background-color: #e3f2fd;
            border-left: 3px solid #1a6dcc;
            padding: 15px;
            border-radius: 0 4px 4px 0;
            margin-bottom: 15px;
        }

            .medical-highlight h5 {
                margin-top: 0;
                color: #1a6dcc;
            }

            .medical-highlight ul {
                padding-right: 20px;
            }

            .medical-highlight li {
                margin-bottom: 8px;
            }

        .service-status {
            padding: 3px 10px;
            border-radius: 20px;
            font-size: 0.85rem;
            display: inline-block;
            margin-top: 5px;
        }

        .status-active {
            background-color: #e8f5e9;
            color: #2e7d32;
        }

        .status-inactive {
            background-color: #ffebee;
            color: #c62828;
        }

        /* استایل‌های موبایل */
        @@media (max-width: 768px) {
            .form-section {
                padding: 15px;
            }

            .btn-submit, .btn-cancel {
                width: 100%;
                margin-bottom: 10px;
            }

            .form-note {
                font-size: 0.8rem;
            }

            .form-actions {
                flex-direction: column;
            }

            .audit-info .info-row {
                flex-direction: column;
            }

            .audit-info .info-label {
                margin-bottom: 4px;
            }

            .medical-highlight {
                padding: 12px;
            }
        }

        /* استایل‌های مربوط به محیط پزشکی */
        .medical-environment {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }

            .medical-environment h5 {
                color: #1a6dcc;
                margin-bottom: 12px;
                display: flex;
                align-items: center;
            }

                .medical-environment h5 i {
                    margin-left: 8px;
                }

            .medical-environment .info-item {
                display: flex;
                align-items: center;
                margin-bottom: 8px;
                padding: 8px 0;
            }

                .medical-environment .info-item i {
                    margin-left: 10px;
                    color: #1a6dcc;
                    width: 20px;
                }

            .medical-environment .info-value {
                font-weight: 500;
            }

        /* استایل‌های مربوط به امنیت اطلاعات پزشکی */
        .security-badge {
            display: inline-block;
            background-color: #e8f5e9;
            color: #2e7d32;
            padding: 3px 10px;
            border-radius: 15px;
            font-size: 0.85rem;
            margin-right: 5px;
        }

        .sensitive-data {
            background-color: #fff8e1;
            border-left: 3px solid #ffa000;
            padding: 10px 15px;
            border-radius: 0 4px 4px 0;
            margin: 10px 0;
        }

            .sensitive-data h6 {
                margin-top: 0;
                color: #ef6c00;
                display: flex;
                align-items: center;
            }

                .sensitive-data h6 i {
                    margin-left: 8px;
                }

        .usage-statistics {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }

            .usage-statistics h5 {
                color: #1a6dcc;
                margin-bottom: 15px;
                display: flex;
                align-items: center;
            }

                .usage-statistics h5 i {
                    margin-left: 8px;
                }

        .stat-card {
            background-color: white;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            margin-bottom: 15px;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: 600;
            color: #1a6dcc;
            margin: 5px 0;
        }

        .stat-label {
            color: #6c757d;
            font-size: 0.9rem;
        }
    </style>
}

<div class="page-content">
    <div class="container-fluid">
        <!-- هدر صفحه -->
        <div class="row align-items-center mb-4">
            <div class="col-md-6">
                <h1 class="page-title mb-0">
                    <i class="fas fa-edit text-primary me-2"></i>
                    ویرایش خدمات: @Model.Title
                </h1>
                <p class="text-muted mb-0">ویرایش اطلاعات خدمات پزشکی در کلینیک شفا</p>
            </div>
            <div class="col-md-6 text-md-end mt-2 mt-md-0">
                <a href="@Url.Action("Index", "Service")" class="btn btn-cancel">
                    <i class="fas fa-arrow-right me-1"></i> بازگشت به لیست
                </a>
            </div>
        </div>

        <!-- اطلاعات وضعیت خدمات -->
        <div class="alert alert-info mb-4">
            <div class="d-flex align-items-center">
                <i class="fas fa-info-circle fa-2x me-3 text-info"></i>
                <div>
                    <h5 class="mb-1">وضعیت فعلی خدمات</h5>
                    <p class="mb-0">
                        این خدمات
                        <span class="service-status @(Model.IsActive ? "status-active" : "status-inactive")">
                            @(Model.IsActive ? "فعال" : "غیرفعال")
                        </span>
                        است و
                        @if (Model.IsActive)
                        {
                            <text>در سیستم قابل استفاده است.</text>
                        }
                        else
                        {
                            <text>در سیستم قابل استفاده نیست.</text>
                        }
                    </p>
                </div>
            </div>
        </div>

        <!-- فرم ویرایش خدمات -->
        <div class="row">
            <div class="col-lg-8">
                @using (Html.BeginForm("Edit", "Service", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.ServiceId)

                    <div class="form-section">
                        <h5 class="form-section-title">
                            <i class="fas fa-edit"></i> اطلاعات اصلی خدمات
                        </h5>

                        @Html.ValidationSummary(false, "", new { @class = "validation-summary-errors" })

                        <div class="mb-4">
                            @Html.LabelFor(model => model.Title, new { @class = "form-label required" })
                            @Html.TextBoxFor(model => model.Title, new { @class = "form-control form-control-lg", placeholder = "عنوان خدمات را وارد کنید" })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger small mt-1" })
                            <div class="form-note">مثال: "معاینه اولیه دندانپزشکی"، "تزریق واکسن آنفلوانزا"</div>
                        </div>

                        <div class="mb-4">
                            @Html.LabelFor(model => model.ServiceCode, new { @class = "form-label required" })
                            @Html.TextBoxFor(model => model.ServiceCode, new { @class = "form-control form-control-lg", placeholder = "کد خدمات را وارد کنید", pattern = "[a-zA-Z0-9_]+" })
                            @Html.ValidationMessageFor(model => model.ServiceCode, "", new { @class = "text-danger small mt-1" })
                            <div class="form-note">مثال: "DENT-001"، "VACC-005" - فقط حروف لاتین، اعداد و زیرخط مجاز است</div>
                        </div>

                        <div class="mb-4">
                            @Html.LabelFor(model => model.ServiceCategoryId, new { @class = "form-label required" })
                            @if (ViewBag.ServiceCategories != null && ((IEnumerable<SelectListItem>)ViewBag.ServiceCategories).Any())
                            {
                                @Html.DropDownListFor(model => model.ServiceCategoryId, (IEnumerable<SelectListItem>)ViewBag.ServiceCategories, "انتخاب دسته‌بندی", new { @class = "form-control form-control-lg select2", id = "ServiceCategoryId" })
                            }
                            else
                            {
                                <select class="form-control form-control-lg select2" id="ServiceCategoryId" name="ServiceCategoryId">
                                    <option value="">در حال بارگذاری دسته‌بندی‌ها...</option>
                                </select>
                            }
                            @Html.ValidationMessageFor(model => model.ServiceCategoryId, "", new { @class = "text-danger small mt-1" })
                            <div class="form-note">دسته‌بندی مربوط به این خدمات را انتخاب کنید</div>
                        </div>

                        <div class="mb-4">
                            @Html.LabelFor(model => model.Price, new { @class = "form-label required" })
                            @Html.TextBoxFor(model => model.Price, new { @class = "form-control form-control-lg", type = "number", min = "0", step = "1000", placeholder = "قیمت را وارد کنید" })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger small mt-1" })
                            <div class="form-note">قیمت خدمات به تومان (بدون علامت) - مثال: 500000</div>
                        </div>

                        <!-- بخش محاسبه قیمت بر اساس اجزای فنی و حرفه‌ای -->
                        <div class="form-section">
                            <h5 class="form-section-title">
                                <i class="fas fa-calculator"></i>
                                محاسبه قیمت بر اساس اجزای فنی و حرفه‌ای
                            </h5>

                            <!-- فیلدهای TechnicalPart و ProfessionalPart حذف شدند -->
                            <!-- استفاده از ServiceComponents به عنوان روش اصلی محاسبه -->
                            <div class="row">
                                <div class="col-12">
                                    <div class="alert alert-info">
                                        <i class="fas fa-info-circle"></i>
                                        <strong>نکته:</strong> اجزای فنی و حرفه‌ای خدمات از طریق جدول ServiceComponents مدیریت می‌شوند.
                                        برای مشاهده و ویرایش اجزای محاسباتی، از بخش مدیریت اجزای خدمات استفاده کنید.
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(model => model.IsHashtagged, new { @class = "form-label" })
                                        <div class="form-check">
                                            @Html.CheckBoxFor(model => model.IsHashtagged, new { @class = "form-check-input" })
                                            @Html.LabelFor(model => model.IsHashtagged, "آیا این خدمت هشتگ‌دار است؟", new { @class = "form-check-label" })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.IsHashtagged, "", new { @class = "text-danger small mt-1" })
                                        <div class="form-note">خدمات هشتگ‌دار از کای‌های متفاوتی استفاده می‌کنند</div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(model => model.PriceCalculationType, new { @class = "form-label" })
                                        @Html.DropDownListFor(model => model.PriceCalculationType,
                                            new SelectList(new[] {
                                                new { Value = "1", Text = "قیمت ثابت" },
                                                new { Value = "2", Text = "محاسبه بر اساس اجزای فنی و حرفه‌ای" }
                                            }, "Value", "Text", "2"),
                                            new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.PriceCalculationType, "", new { @class = "text-danger small mt-1" })
                                        <div class="form-note">نوع محاسبه قیمت خدمت</div>
                                    </div>
                                </div>
                            </div>

                            <!-- نمایش محاسبه قیمت -->
                            <div class="alert alert-info" id="price-calculation-info" style="display: none;">
                                <h6><i class="fas fa-info-circle"></i> محاسبه قیمت</h6>
                                <p class="mb-0" id="price-calculation-text"></p>
                            </div>
                        </div>

                        <div class="mb-4">
                            @Html.LabelFor(model => model.Description, new { @class = "form-label" })
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control form-control-lg", rows = "4", placeholder = "توضیحات خدمات را وارد کنید" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger small mt-1" })
                            <div class="form-note">توضیحات تکمیلی درباره این خدمات (اختیاری)</div>
                        </div>

                        <div class="form-actions">
                            <button type="submit" class="btn btn-submit">
                                <i class="fas fa-save"></i> به‌روزرسانی خدمات
                            </button>
                            <a href="@Url.Action("Index", "Service")" class="btn btn-cancel">
                                <i class="fas fa-times"></i> انصراف
                            </a>
                        </div>
                    </div>

                    <!-- بخش راهنمای سریع برای محیط پزشکی -->
                    <div class="medical-highlight">
                        <h5><i class="fas fa-lightbulb"></i> راهنمای سریع برای محیط پزشکی</h5>
                        <ul>
                            <li>برای افزایش سرعت در محیط پزشکی، از کلیدهای میانبر استفاده کنید: <strong>Tab</strong> برای حرکت بین فیلدها و <strong>Ctrl + Enter</strong> برای ذخیره سریع</li>
                            <li>کدهای خدمات باید به گونه‌ای باشند که به راحتی قابل تشخیص و یادآوری باشند (مثال: DENT-001 برای دندانپزشکی)</li>
                            <li>قیمت‌ها باید با افزایش 1000 تومانی وارد شوند (برای ساده‌سازی محاسبات در محیط پزشکی)</li>
                            <li>توضیحات خدمات باید شامل نکات ایمنی و پروتکل‌های مربوطه باشد</li>
                        </ul>
                    </div>
                }
            </div>

            <div class="col-lg-4">
                <!-- اطلاعات ردیابی (Audit Trail) -->
                <div class="form-section">
                    <h5 class="form-section-title">
                        <i class="fas fa-history"></i> اطلاعات ردیابی
                    </h5>
                    <div class="audit-info">
                        <h6><i class="fas fa-user-plus"></i> اطلاعات ایجاد</h6>
                        <div class="info-row">
                            <span class="info-label">ایجاد کننده:</span>
                            <span class="info-value">@Model.CreatedBy</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">تاریخ ایجاد:</span>
                            <span class="info-value">@Model.CreatedAtShamsi</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">ساعت ایجاد:</span>
                            <span class="info-value">@Model.CreatedAt.ToString("HH:mm")</span>
                        </div>

                        @if (Model.UpdatedAt.HasValue)
                        {
                            <h6 class="mt-3"><i class="fas fa-user-edit"></i> آخرین ویرایش</h6>
                            <div class="info-row">
                                <span class="info-label">ویرایش کننده:</span>
                                <span class="info-value">@Model.UpdatedBy</span>
                            </div>
                            <div class="info-row">
                                <span class="info-label">تاریخ ویرایش:</span>
                                <span class="info-value">@Model.UpdatedAtShamsi</span>
                            </div>
                            <div class="info-row">
                                <span class="info-label">ساعت ویرایش:</span>
                                <span class="info-value">@Model.UpdatedAt.Value.ToString("HH:mm")</span>
                            </div>
                        }
                    </div>
                </div>

                <!-- آمار استفاده از خدمات -->
                <div class="usage-statistics">
                    <h5><i class="fas fa-chart-line"></i> آمار استفاده از خدمات</h5>
                    <div class="stat-card">
                        <div class="stat-label">تعداد استفاده‌ها</div>
                        <div class="stat-value">@Model.UsageCount</div>
                        <div class="text-muted small">در کل دوره زمانی</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-label">درآمد کل</div>
                        <div class="stat-value">@Model.TotalRevenue.ToString("N0") تومان</div>
                        <div class="text-muted small">در کل دوره زمانی</div>
                    </div>
                    <div class="text-center mt-3">
                        <a href="@Url.Action("Report", "Service", new { id = Model.ServiceId })" class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-chart-bar me-1"></i> مشاهده گزارش کامل
                        </a>
                    </div>
                </div>

                <!-- اطلاعات سیستم -->
                <div class="form-section">
                    <h5 class="form-section-title">
                        <i class="fas fa-info-circle"></i> اطلاعات سیستم
                    </h5>
                    <div class="text-muted">
                        <div class="medical-environment">
                            <div class="info-item">
                                <i class="fas fa-user"></i>
                                <span class="info-value">@ViewBag.CurrentUserName</span>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-calendar-alt"></i>
                                <span class="info-value">@DateTime.Now.ToPersianDateTime()</span>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-clock"></i>
                                <span class="info-value">@DateTime.Now.ToString("HH:mm")</span>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-info-circle"></i>
                                <span class="info-value">آخرین ویرایش توسط شما انجام خواهد شد</span>
                            </div>
                        </div>

                        <div class="sensitive-data">
                            <h6><i class="fas fa-lock"></i> امنیت اطلاعات پزشکی</h6>
                            <p class="mb-0">تمام تغییرات ایجاد شده در این صفحه تحت پوشش قانون حفظ حریم خصوصی ایران قرار دارند و در سیستم ردیابی دقیق خواهند شد.</p>
                        </div>

                        <div class="d-flex align-items-center mt-3">
                            <i class="fas fa-shield-alt text-success me-2"></i>
                            <span class="security-badge">داده‌های پزشکی رمزگذاری شده</span>
                        </div>
                    </div>
                </div>

                <!-- دسته‌بندی‌های پیشنهادی -->
                <div class="form-section">
                    <h5 class="form-section-title">
                        <i class="fas fa-list"></i> دسته‌بندی‌های پیشنهادی
                    </h5>
                    <div class="text-muted">
                        <ul class="list-group">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                معاینات اولیه
                                <span class="badge bg-primary rounded-pill">12</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                تزریقات و واکسیناسیون
                                <span class="badge bg-primary rounded-pill">8</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                آزمایش‌های تشخیصی
                                <span class="badge bg-primary rounded-pill">15</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                خدمات تصویربرداری
                                <span class="badge bg-primary rounded-pill">7</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                خدمات دندانپزشکی
                                <span class="badge bg-primary rounded-pill">10</span>
                            </li>
                        </ul>
                        <div class="mt-3 text-center">
                            <a href="@Url.Action("Create", "ServiceCategory")" class="btn btn-sm btn-outline-primary">
                                <i class="fas fa-plus me-1"></i> افزودن دسته‌بندی جدید
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Content/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/Content/plugins/select2/js/fa.min.js"></script>

    <script>
        $(document).ready(function () {
            console.log('🏥 MEDICAL: شروع راه‌اندازی فرم ویرایش خدمت');
            
            // فعال‌سازی select2 برای انتخاب دسته‌بندی - Medical Environment
            $('.select2').select2({
                placeholder: "انتخاب دسته‌بندی",
                language: "fa",
                width: '100%',
                minimumResultsForSearch: -1,
                allowClear: true
            });

            // اطمینان از انتخاب صحیح دسته‌بندی
            var selectedCategoryId = @(Model?.ServiceCategoryId ?? 0);
            if (selectedCategoryId > 0) {
                console.log('🏥 MEDICAL: دسته‌بندی انتخاب شده:', selectedCategoryId);
                $('#ServiceCategoryId').val(selectedCategoryId).trigger('change');
            }

            // بررسی وضعیت dropdown
            var dropdown = $('#ServiceCategoryId');
            if (dropdown.length > 0) {
                var options = dropdown.find('option');
                console.log('🏥 MEDICAL: تعداد گزینه‌های dropdown:', options.length);
                
                if (options.length <= 1) {
                    console.warn('🏥 MEDICAL: dropdown خالی است یا فقط یک گزینه دارد');
                    // تلاش برای بارگذاری مجدد
                    setTimeout(function() {
                        location.reload();
                    }, 2000);
                }
            }

            // اعتبارسنجی فرم
            (function () {
                'use strict';
                window.addEventListener('load', function () {
                    var forms = document.getElementsByClassName('needs-validation');
                    Array.prototype.filter.call(forms, function (form) {
                        form.addEventListener('submit', function (event) {
                            if (form.checkValidity() === false) {
                                event.preventDefault();
                                event.stopPropagation();
                            }
                            form.classList.add('was-validated');
                        }, false);
                    });
                }, false);
            })();

            // افزودن کلیدهای میانبر برای محیط پزشکی
            $(document).keydown(function(e) {
                // کلیدهای میانبر برای محیط پزشکی
                if (e.ctrlKey && e.key === 'Enter') {
                    // ذخیره سریع با Ctrl + Enter
                    $('form button[type="submit"]').click();
                    return false;
                }
            });

            // فرمت‌دهی قیمت - Medical Environment (فقط نمایش، نه ورود)
            $('#Price').on('blur', function() {
                var value = $(this).val();
                if (value && !isNaN(value)) {
                    // فقط نمایش فرمت شده، بدون تغییر مقدار اصلی
                    var numericValue = parseInt(value);
                    if (numericValue > 0) {
                        // نمایش فرمت شده در tooltip یا کنار فیلد
                        $(this).attr('title', 'مبلغ: ' + numericValue.toLocaleString('fa-IR') + ' تومان');
                    }
                }
            });

            // اطمینان از بارگذاری قیمت در فرم ویرایش - Medical Environment
            $(document).ready(function() {
                var priceValue = @Html.Raw(Json.Encode(Model.Price));
                console.log('🏥 MEDICAL: Model.Price value:', priceValue);
                console.log('🏥 MEDICAL: Model.Price type:', typeof priceValue);
                
                if (priceValue && priceValue > 0) {
                    console.log('🏥 MEDICAL: Setting price value:', priceValue);
                    $('#Price').val(priceValue);
                    
                    // تأیید تنظیم مقدار
                    setTimeout(function() {
                        var currentValue = $('#Price').val();
                        console.log('🏥 MEDICAL: Current price field value:', currentValue);
                        if (currentValue != priceValue) {
                            console.error('🏥 MEDICAL: Price value not set correctly!');
                            $('#Price').val(priceValue); // تلاش مجدد
                        }
                    }, 100);
                } else {
                    console.warn('🏥 MEDICAL: Price value not found or invalid:', priceValue);
                }
            });

            // محاسبه قیمت بر اساس اجزای فنی و حرفه‌ای
            function calculatePriceFromComponents() {
                // فیلدهای TechnicalPart و ProfessionalPart حذف شدند
                // محاسبه از طریق ServiceComponents انجام می‌شود
                var isHashtagged = $('#IsHashtagged').is(':checked');
                var calculationType = $('#PriceCalculationType').val();

                if (calculationType === '2') {
                    // محاسبه از طریق ServiceComponents - نیاز به UI جدید
                    $('#price-calculation-info').hide();
                    showServiceComponentsInfo();
                } else {
                    $('#price-calculation-info').hide();
                }
            }

            // نمایش اطلاعات ServiceComponents
            function showServiceComponentsInfo() {
                $('#price-calculation-text').html(
                    '<div class="alert alert-warning">' +
                    '<i class="fas fa-exclamation-triangle"></i> ' +
                    '<strong>توجه:</strong> برای محاسبه قیمت بر اساس اجزای فنی و حرفه‌ای، ' +
                    'اجزای محاسباتی را در بخش مدیریت اجزای خدمات ویرایش کنید.' +
                    '</div>'
                );
                $('#price-calculation-info').show();
            }

            // دریافت کای‌ها از سرور
            function fetchKaiFactors(technicalPart, professionalPart, isHashtagged) {
                var currentYear = 1404; // سال مالی جاری

                // نمایش لودینگ
                $('#price-calculation-text').html('<i class="fas fa-spinner fa-spin"></i> در حال محاسبه...');
                $('#price-calculation-info').show();

                // درخواست‌های موازی برای دریافت کای‌های فنی و حرفه‌ای
                var technicalPromise = $.get('@Url.Action("GetFactorsByType", "FactorSetting")', {
                    factorType: 1, // Technical
                    financialYear: currentYear
                });

                var professionalPromise = $.get('@Url.Action("GetFactorsByType", "FactorSetting")', {
                    factorType: 2, // Professional
                    financialYear: currentYear
                });

                $.when(technicalPromise, professionalPromise).done(function(technicalResponse, professionalResponse) {
                    var technicalFactors = technicalResponse[0];
                    var professionalFactors = professionalResponse[0];

                    // پیدا کردن کای مناسب
                    var technicalKai = findAppropriateKai(technicalFactors, isHashtagged);
                    var professionalKai = findAppropriateKai(professionalFactors, isHashtagged);

                    if (technicalKai && professionalKai) {
                        calculateAndDisplayPrice(technicalPart, professionalPart, technicalKai, professionalKai);
                    } else {
                        showKaiNotFoundError(isHashtagged, currentYear);
                    }
                }).fail(function() {
                    $('#price-calculation-text').html('<span class="text-danger">خطا در دریافت کای‌ها از سرور</span>');
                });
            }

            // پیدا کردن کای مناسب
            function findAppropriateKai(factors, isHashtagged) {
                // ابتدا کای مطابق با وضعیت هشتگ را جستجو کن
                var exactMatch = factors.find(function(f) {
                    return f.isActive && f.isHashtagged === isHashtagged;
                });

                if (exactMatch) {
                    return exactMatch;
                }

                // اگر یافت نشد، اولین کای فعال را برگردان
                var fallback = factors.find(function(f) {
                    return f.isActive;
                });

                return fallback;
            }

            // محاسبه و نمایش قیمت
            function calculateAndDisplayPrice(technicalPart, professionalPart, technicalKai, professionalKai) {
                var technicalTotal = technicalPart * technicalKai.value;
                var professionalTotal = professionalPart * professionalKai.value;
                var calculatedPrice = technicalTotal + professionalTotal;

                var calculationHtml = '';
                
                if (technicalPart > 0) {
                    calculationHtml += 'جزء فنی: ' + technicalPart + ' × کای فنی (' + technicalKai.name + '): ' + 
                                     technicalKai.value.toFixed(2) + ' = ' + technicalTotal.toFixed(0) + ' ریال<br>';
                    calculationHtml += '<small style="color: #666;">(' + (technicalTotal / 10).toFixed(0) + ' تومان)</small><br>';
                }
                
                if (professionalPart > 0) {
                    calculationHtml += 'جزء حرفه‌ای: ' + professionalPart + ' × کای حرفه‌ای (' + professionalKai.name + '): ' + 
                                     professionalKai.value.toFixed(2) + ' = ' + professionalTotal.toFixed(0) + ' ریال<br>';
                    calculationHtml += '<small style="color: #666;">(' + (professionalTotal / 10).toFixed(0) + ' تومان)</small><br>';
                }
                
                calculationHtml += '<hr><strong>قیمت کل: ' + calculatedPrice.toFixed(0) + ' ریال</strong><br>';
                calculationHtml += '<small style="color: #666;">(' + (calculatedPrice / 10).toFixed(0) + ' تومان)</small>';

                $('#price-calculation-text').html(calculationHtml);
                $('#price-calculation-info').show();

                // به‌روزرسانی فیلد قیمت
                $('#Price').val(Math.round(calculatedPrice));
            }

            // نمایش خطای عدم وجود کای
            function showKaiNotFoundError(isHashtagged, currentYear) {
                var hashtagText = isHashtagged ? 'هشتگ‌دار' : 'عادی';
                $('#price-calculation-text').html(
                    '<span class="text-warning">' +
                    '<i class="fas fa-exclamation-triangle"></i> ' +
                    'کای‌های مورد نیاز برای خدمات ' + hashtagText + ' در سال مالی ' + currentYear + ' یافت نشد.<br>' +
                    'لطفاً ابتدا کای‌های مربوطه را در <a href="@Url.Action("Index", "FactorSetting")" target="_blank">بخش مدیریت کای‌ها</a> تعریف کنید.' +
                    '</span>'
                );
            }

            // رویدادهای محاسبه قیمت
            $('#IsHashtagged, #PriceCalculationType').on('change keyup', function() {
                calculatePriceFromComponents();
            });

            // حذف محدودیت‌های اضافی برای ورود مستقیم
            $('#Price').on('keypress', function(e) {
                // اجازه ورود اعداد، نقطه و کلیدهای کنترل
                if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                    e.preventDefault();
                }
            });

            // اعتبارسنجی کد خدمات - Medical Environment (فقط اعداد)
            $('#ServiceCode').on('blur', function() {
                var serviceCode = $(this).val();
                var serviceId = $('#ServiceId').val();
                var $field = $(this);
                
                // حذف خطاهای قبلی
                $field.removeClass('is-invalid').addClass('is-valid');
                $field.siblings('.text-danger').remove();
                
                if (!serviceCode) {
                    var errorDiv = $('<div class="text-danger small mt-1">کد خدمت الزامی است</div>');
                    $field.after(errorDiv);
                    $field.addClass('is-invalid');
                    return;
                }
                
                // اعتبارسنجی الگو - فقط اعداد
                if (!/^\d+$/.test(serviceCode)) {
                    var errorDiv = $('<div class="text-danger small mt-1">کد خدمت باید فقط شامل اعداد باشد</div>');
                    $field.after(errorDiv);
                    $field.addClass('is-invalid');
                    return;
                }
                
                // اعتبارسنجی طول - Medical Environment
                if (serviceCode.length < 3 || serviceCode.length > 10) {
                    var errorDiv = $('<div class="text-danger small mt-1">کد خدمت باید بین 3 تا 10 رقم باشد</div>');
                    $field.after(errorDiv);
                    $field.addClass('is-invalid');
                    return;
                }
                
                // بررسی تکراری بودن
                $.ajax({
                    url: '@Url.Action("CheckServiceCode", "Service")',
                    type: 'POST',
                    dataType: 'json',
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    data: { 
                        serviceCode: serviceCode, 
                        excludeServiceId: serviceId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        console.log('🏥 MEDICAL: CheckServiceCode response:', response);
                        if (!response.isAvailable) {
                            var errorDiv = $('<div class="text-danger small mt-1">' + (response.message || 'این کد خدمت قبلاً استفاده شده است') + '</div>');
                            $field.after(errorDiv);
                            $field.addClass('is-invalid');
                        } else {
                            $field.removeClass('is-invalid').addClass('is-valid');
                            $field.siblings('.text-danger').remove();
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('🏥 MEDICAL: CheckServiceCode error:', {xhr, status, error});
                        var errorDiv = $('<div class="text-danger small mt-1">خطا در بررسی کد خدمت</div>');
                        $field.after(errorDiv);
                        $field.addClass('is-invalid');
                    }
                });
            });
        });
    </script>
}