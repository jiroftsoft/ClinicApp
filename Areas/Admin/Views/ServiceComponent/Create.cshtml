@using ClinicApp.Extensions
@using ClinicApp.Helpers
@model ClinicApp.ViewModels.ServiceComponentCreateEditViewModel
@{
    ViewBag.Title = "ایجاد جزء خدمت جدید";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link href="~/Content/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <style>
        /* استایل‌های اختصاصی برای فرم ایجاد جزء خدمت */
        .form-section {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
            margin-bottom: 20px;
        }

        .form-section-title {
            font-weight: 600;
            color: #28a745;
            margin-bottom: 15px;
            padding-bottom: 8px;
            border-bottom: 1px solid #eee;
            display: flex;
            align-items: center;
        }

        .form-section-title i {
            margin-left: 8px;
            font-size: 1.1rem;
        }

        .required:after {
            content: " *";
            color: #d32f2f;
            margin-right: 2px;
        }

        .btn-submit {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 25px;
            font-weight: 500;
            transition: all 0.2s;
        }

        .btn-submit:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
        }

        .btn-cancel {
            background: linear-gradient(135deg, #6c757d 0%, #5a6268 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 25px;
            font-weight: 500;
            transition: all 0.2s;
            text-decoration: none;
            display: inline-block;
        }

        .btn-cancel:hover {
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(108, 117, 125, 0.3);
        }

        .form-control, .form-select {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 10px 15px;
            transition: all 0.2s;
        }

        .form-control:focus, .form-select:focus {
            border-color: #28a745;
            box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
        }

        .form-label {
            font-weight: 500;
            color: #495057;
            margin-bottom: 8px;
        }

        .alert-info {
            background-color: #d1ecf1;
            border-color: #bee5eb;
            color: #0c5460;
            border-radius: 8px;
        }

        .component-type-info {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }

        .component-type-info h6 {
            color: #495057;
            margin-bottom: 10px;
        }

        .component-type-info p {
            margin: 5px 0;
            color: #6c757d;
            font-size: 0.9rem;
        }

        .validation-summary {
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
            color: #721c24;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .field-validation-error {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 5px;
        }

        .input-validation-error {
            border-color: #dc3545;
        }
    </style>
}

<!-- Header Section -->
<div class="form-section">
    <h2 class="form-section-title">
        <i class="fas fa-plus-circle"></i> ایجاد جزء خدمت جدید
    </h2>
    <p class="text-muted">لطفاً اطلاعات جزء خدمت را با دقت تکمیل کنید.</p>
</div>

<!-- Validation Summary -->
@if (!ViewData.ModelState.IsValid)
{
    <div class="validation-summary">
        <h6><i class="fas fa-exclamation-triangle"></i> خطاهای اعتبارسنجی</h6>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
}

<!-- Component Type Information -->
<div class="component-type-info">
    <h6><i class="fas fa-info-circle"></i> راهنمای انواع اجزای خدمت</h6>
    <p><strong>جزء فنی:</strong> شامل هزینه‌های فنی، تجهیزات و امکانات مورد نیاز برای ارائه خدمت</p>
    <p><strong>جزء حرفه‌ای:</strong> شامل دستمزد و تخصص پزشک یا ارائه‌دهنده خدمت</p>
</div>

<!-- Create Form -->
@using (Html.BeginForm("Create", "ServiceComponent", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
{
    @Html.AntiForgeryToken()
    
    <!-- Service Selection -->
    <div class="form-section">
        <h4 class="form-section-title">
            <i class="fas fa-stethoscope"></i> انتخاب خدمت
        </h4>
        
        <div class="row">
            <div class="col-md-12">
                <label for="ServiceId" class="form-label required">خدمت</label>
                @Html.DropDownListFor(m => m.ServiceId, ViewBag.Services as SelectList, "انتخاب خدمت...", new { @class = "form-select", required = "required" })
                @Html.ValidationMessageFor(m => m.ServiceId, "", new { @class = "field-validation-error" })
            </div>
        </div>
    </div>

    <!-- Component Details -->
    <div class="form-section">
        <h4 class="form-section-title">
            <i class="fas fa-cogs"></i> جزئیات جزء خدمت
        </h4>
        
        <div class="row">
            <div class="col-md-6">
                <label for="ComponentType" class="form-label required">نوع جزء</label>
                @Html.DropDownListFor(m => m.ComponentType, Html.GetEnumSelectList<ClinicApp.Models.Enums.ServiceComponentType>(), "انتخاب نوع جزء...", new { @class = "form-select", required = "required" })
                @Html.ValidationMessageFor(m => m.ComponentType, "", new { @class = "field-validation-error" })
            </div>
            
            <div class="col-md-6">
                <label for="Coefficient" class="form-label required">ضریب (کای)</label>
                @Html.TextBoxFor(m => m.Coefficient, new { @class = "form-control", type = "number", step = "0.01", min = "0.01", max = "999999.99", required = "required", placeholder = "مثال: 1.25" })
                @Html.ValidationMessageFor(m => m.Coefficient, "", new { @class = "field-validation-error" })
                <small class="form-text text-muted">ضریب باید بین 0.01 تا 999999.99 باشد</small>
            </div>
        </div>
        
        <div class="row mt-3">
            <div class="col-md-12">
                <label for="Description" class="form-label">توضیحات</label>
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = "3", placeholder = "توضیحات اختیاری در مورد این جزء خدمت..." })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "field-validation-error" })
            </div>
        </div>
        
        <div class="row mt-3">
            <div class="col-md-12">
                <div class="form-check">
                    @Html.CheckBoxFor(m => m.IsActive, new { @class = "form-check-input", @checked = "checked" })
                    <label class="form-check-label" for="IsActive">
                        جزء خدمت فعال باشد
                    </label>
                </div>
            </div>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="form-section">
        <div class="d-flex justify-content-between">
            <a href="@Url.Action("Index")" class="btn-cancel">
                <i class="fas fa-times"></i> انصراف
            </a>
            
            <button type="submit" class="btn-submit">
                <i class="fas fa-save"></i> ایجاد جزء خدمت
            </button>
        </div>
    </div>
}

@section Scripts {
    <script src="~/Content/plugins/select2/js/select2.min.js"></script>
    <script>
        $(document).ready(function() {
            // Initialize Select2
            $('.form-select').select2({
                placeholder: "انتخاب کنید...",
                allowClear: true
            });

            // Form validation
            (function() {
                'use strict';
                window.addEventListener('load', function() {
                    var forms = document.getElementsByClassName('needs-validation');
                    var validation = Array.prototype.filter.call(forms, function(form) {
                        form.addEventListener('submit', function(event) {
                            if (form.checkValidity() === false) {
                                event.preventDefault();
                                event.stopPropagation();
                            }
                            form.classList.add('was-validated');
                        }, false);
                    });
                }, false);
            })();

            // Coefficient input validation
            $('#Coefficient').on('input', function() {
                var value = parseFloat($(this).val());
                if (value < 0.01 || value > 999999.99) {
                    $(this).addClass('input-validation-error');
                } else {
                    $(this).removeClass('input-validation-error');
                }
            });

            // Component type change handler
            $('#ComponentType').on('change', function() {
                var componentType = $(this).val();
                if (componentType === 'Technical') {
                    $('#Coefficient').attr('placeholder', 'مثال: 0.85 (جزء فنی)');
                } else if (componentType === 'Professional') {
                    $('#Coefficient').attr('placeholder', 'مثال: 1.25 (جزء حرفه‌ای)');
                }
            });
        });
    </script>
}
