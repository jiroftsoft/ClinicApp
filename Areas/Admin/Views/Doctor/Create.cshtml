@model ClinicApp.ViewModels.DoctorManagementVM.DoctorCreateEditViewModel
@{
    ViewBag.Title = "افزودن پزشک جدید";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link href="~/Content/plugins/persian-datepicker/persian-datepicker.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/SweetAlert2/sweetalert2.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <style>
        .form-section {
            background: #f8f9fc;
            border-radius: 0.35rem;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border: 1px solid #e3e6f0;
        }

        .form-section h5 {
            color: #4e73df;
            border-bottom: 2px solid #4e73df;
            padding-bottom: 0.5rem;
            margin-bottom: 1.5rem;
        }

        .required-field::after {
            content: " *";
            color: #e74a3b;
        }

        .profile-image-container {
            text-align: center;
            margin-bottom: 1rem;
        }

        .profile-image {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid #4e73df;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        }

        .dropzone {
            border: 2px dashed #4e73df;
            border-radius: 0.35rem;
            background: #f8f9fc;
            min-height: 100px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .dropzone:hover {
            background: #eaecf4;
            border-color: #2e59d9;
        }

        .dropzone.dragover {
            background: #e3f2fd;
            border-color: #2196f3;
            transform: scale(1.02);
        }

        .dropzone.upload-success {
            background: #e8f5e8;
            border-color: #28a745;
            animation: successPulse 0.5s ease-in-out;
        }

        @@keyframes successPulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }

        .profile-image {
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .profile-image:hover {
            transform: scale(1.05);
            box-shadow: 0 0.25rem 2rem 0 rgba(58, 59, 69, 0.25);
        }

        .validation-summary {
            background: #f8d7da;
            border: 1px solid #f5c6cb;
            border-radius: 0.35rem;
            padding: 1rem;
            margin-bottom: 1.5rem;
        }

        .validation-summary ul {
            margin-bottom: 0;
            padding-right: 1.5rem;
        }

        .form-group label {
            font-weight: 600;
            color: #5a5c69;
        }

        .help-text {
            font-size: 0.875rem;
            color: #858796;
            margin-top: 0.25rem;
        }



        .select2-container--default .select2-selection--multiple {
            min-height: 38px;
            border: 1px solid #d1d3e2;
        }

        .select2-container--default .select2-selection--multiple .select2-selection__choice {
            background-color: #4e73df;
            border: 1px solid #4e73df;
            color: white;
            border-radius: 0.25rem;
            padding: 0.25rem 0.5rem;
            margin: 0.125rem;
        }

        .form-loading {
            position: relative;
            pointer-events: none;
            opacity: 0.6;
        }

        .form-loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20px;
            height: 20px;
            margin: -10px 0 0 -10px;
            border: 2px solid #f3f3f3;
            border-top: 2px solid #4e73df;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .field-error {
            border-color: #e74a3b !important;
            box-shadow: 0 0 0 0.2rem rgba(231, 74, 59, 0.25) !important;
        }

        .field-success {
            border-color: #1cc88a !important;
            box-shadow: 0 0 0 0.2rem rgba(28, 200, 138, 0.25) !important;
        }
    </style>
}



<div class="container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">
            <i class="fas fa-user-plus text-primary"></i>
            افزودن پزشک جدید
        </h1>
        <a href="@Url.Action("Index", "Doctor")" class="btn btn-secondary btn-sm">
            <i class="fas fa-arrow-right"></i>
            بازگشت به لیست
        </a>
    </div>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="validation-summary">
            <h6 class="text-danger">
                <i class="fas fa-exclamation-triangle"></i>
                خطاهای اعتبارسنجی:
            </h6>
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        </div>
    }

    <form id="doctorForm" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()

        <!-- Basic Information Section -->
        <div class="form-section">
            <h5>
                <i class="fas fa-user"></i>
                اطلاعات پایه
            </h5>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="FirstName" class="required-field">نام</label>
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "نام پزشک", maxlength = "100" })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                        <div class="help-text">نام باید به فارسی و حداقل 2 کاراکتر باشد</div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="LastName" class="required-field">نام خانوادگی</label>
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "نام خانوادگی پزشک", maxlength = "100" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                        <div class="help-text">نام خانوادگی باید به فارسی و حداقل 2 کاراکتر باشد</div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="NationalCode" class="required-field">کد ملی</label>
                        @Html.TextBoxFor(m => m.NationalCode, new { @class = "form-control", placeholder = "کد ملی 10 رقمی", maxlength = "10", pattern = "[0-9]{10}" })
                        @Html.ValidationMessageFor(m => m.NationalCode, "", new { @class = "text-danger" })
                        <div class="help-text">کد ملی باید دقیقاً 10 رقم باشد</div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="MedicalCouncilCode" class="required-field">شماره نظام پزشکی</label>
                        @Html.TextBoxFor(m => m.MedicalCouncilCode, new { @class = "form-control", placeholder = "شماره نظام پزشکی", maxlength = "20" })
                        @Html.ValidationMessageFor(m => m.MedicalCouncilCode, "", new { @class = "text-danger" })
                        <div class="help-text">شماره نظام پزشکی الزامی است</div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="PhoneNumber" class="required-field">شماره تلفن</label>
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "09123456789", maxlength = "11", pattern = "0[0-9]{10}" })
                        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                        <div class="help-text">شماره تلفن باید با 0 شروع شود و 11 رقم باشد</div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="Email">ایمیل</label>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email", placeholder = "example@email.com", maxlength = "100" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        <div class="help-text">فرمت ایمیل صحیح وارد کنید</div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="Gender" class="required-field">جنسیت</label>
                        @Html.DropDownListFor(m => m.Gender, new SelectList(new[]
                        {
                            new { Value = "", Text = "انتخاب جنسیت" },
                            new { Value = "1", Text = "مرد" },
                            new { Value = "2", Text = "زن" }
                        }, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="DateOfBirthShamsi">تاریخ تولد</label>
                        @Html.TextBoxFor(m => m.DateOfBirthShamsi, new { @class = "form-control", placeholder = "مثال: 1369/03/27", autocomplete = "off" })
                        @Html.ValidationMessageFor(m => m.DateOfBirthShamsi, "", new { @class = "text-danger" })
                        <div class="help-text">تاریخ تولد را به صورت شمسی وارد کنید (مثال: 1369/03/27)</div>
                    </div>
                </div>

            </div>
        </div>

        <!-- Professional Information Section -->
        <div class="form-section">
            <h5>
                <i class="fas fa-stethoscope"></i>
                اطلاعات حرفه‌ای
            </h5>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="Degree" class="required-field">مدرک تحصیلی</label>
                        @Html.DropDownListFor(m => m.Degree, new SelectList(new[]
                        {
                            new { Value = "", Text = "انتخاب مدرک تحصیلی" },
                            new { Value = "1", Text = "پزشک عمومی" },
                            new { Value = "2", Text = "متخصص" },
                            new { Value = "3", Text = "فوق تخصص" },
                            new { Value = "4", Text = "دندانپزشک" },
                            new { Value = "5", Text = "داروساز" }
                        }, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Degree, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="GraduationYear">سال فارغ‌التحصیلی</label>
                        @Html.TextBoxFor(m => m.GraduationYear, new { @class = "form-control", type = "number", min = "1350", max = "1410", placeholder = "مثال: 1395" })
                        @Html.ValidationMessageFor(m => m.GraduationYear, "", new { @class = "text-danger" })
                        <div class="help-text">سال فارغ‌التحصیلی باید بین 1350 تا 1410 باشد</div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="University">دانشگاه</label>
                        @Html.TextBoxFor(m => m.University, new { @class = "form-control", placeholder = "نام دانشگاه محل تحصیل", maxlength = "200" })
                        @Html.ValidationMessageFor(m => m.University, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="ExperienceYears">سال‌های تجربه</label>
                        @Html.TextBoxFor(m => m.ExperienceYears, new { @class = "form-control", type = "number", min = "0", max = "50", placeholder = "تعداد سال‌های تجربه" })
                        @Html.ValidationMessageFor(m => m.ExperienceYears, "", new { @class = "text-danger" })
                        <div class="help-text">تعداد سال‌های تجربه کاری</div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="SelectedSpecializationIds" class="required-field">تخصص‌ها</label>
                        <select id="SelectedSpecializationIds" name="SelectedSpecializationIds" multiple class="form-control select2-specializations" data-placeholder="انتخاب تخصص‌ها">
                            @if (ViewBag.Specializations != null)
                            {
                                foreach (var specialization in ViewBag.Specializations)
                                {
                                    <option value="@specialization.SpecializationId">@specialization.Name</option>
                                }
                            }
                        </select>
                        <div class="help-text">می‌توانید چند تخصص انتخاب کنید</div>
                        @Html.ValidationMessageFor(m => m.SelectedSpecializationIds, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="LicenseNumber">شماره پروانه</label>
                        @Html.TextBoxFor(m => m.LicenseNumber, new { @class = "form-control", placeholder = "شماره پروانه پزشکی", maxlength = "50" })
                        @Html.ValidationMessageFor(m => m.LicenseNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="Education">تحصیلات تکمیلی</label>
                        @Html.TextBoxFor(m => m.Education, new { @class = "form-control", placeholder = "مثال: فلوشیپ قلب، فوق تخصص گوارش", maxlength = "100" })
                        @Html.ValidationMessageFor(m => m.Education, "", new { @class = "text-danger" })
                        <div class="help-text">تحصیلات تکمیلی یا تخصص‌های اضافی</div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label for="Bio">بیوگرافی</label>
                        @Html.TextAreaFor(m => m.Bio, new { @class = "form-control", rows = "4", placeholder = "توضیحات مختصر درباره سوابق و تخصص‌های پزشک...", maxlength = "2000" })
                        @Html.ValidationMessageFor(m => m.Bio, "", new { @class = "text-danger" })
                        <div class="help-text">حداکثر 2000 کاراکتر</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Contact Information Section -->
        <div class="form-section">
            <h5>
                <i class="fas fa-address-book"></i>
                اطلاعات تماس و آدرس
            </h5>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="HomeAddress">آدرس منزل</label>
                        @Html.TextAreaFor(m => m.HomeAddress, new { @class = "form-control", rows = "3", placeholder = "آدرس کامل منزل", maxlength = "500" })
                        @Html.ValidationMessageFor(m => m.HomeAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="OfficeAddress">آدرس مطب</label>
                        @Html.TextAreaFor(m => m.OfficeAddress, new { @class = "form-control", rows = "3", placeholder = "آدرس کامل مطب یا محل کار", maxlength = "500" })
                        @Html.ValidationMessageFor(m => m.OfficeAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="EmergencyContact">شماره تماس اضطراری</label>
                        @Html.TextBoxFor(m => m.EmergencyContact, new { @class = "form-control", placeholder = "شماره تماس اضطراری", maxlength = "50" })
                        @Html.ValidationMessageFor(m => m.EmergencyContact, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <!-- Profile Image Section -->
        <div class="form-section">
            <h5>
                <i class="fas fa-camera"></i>
                تصویر پروفایل
            </h5>
            <div class="row">
                <div class="col-md-6">
                    <div class="profile-image-container">
                        <img id="profilePreview" src="/Content/Images/default-avatar.jpg" class="profile-image" alt="تصویر پروفایل" />
                    </div>
                    <div class="dropzone" id="imageDropzone">
                        <div class="dz-message">
                            <i class="fas fa-cloud-upload-alt fa-2x text-primary mb-2"></i>
                            <p>برای آپلود تصویر کلیک کنید یا فایل را اینجا بکشید</p>
                            <small class="text-muted">فرمت‌های مجاز: JPG, PNG, GIF (حداکثر 2MB)</small>
                        </div>
                    </div>
                    <input type="file" id="ProfileImage" name="ProfileImage" accept="image/*" style="display: none;" />
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="IsActive">وضعیت فعال</label>
                        <div class="custom-control custom-switch">
                            @Html.CheckBoxFor(m => m.IsActive, new { @class = "custom-control-input", id = "IsActive" })
                            <label class="custom-control-label" for="IsActive">
                                پزشک فعال است و می‌تواند نوبت‌دهی کند
                            </label>
                        </div>
                        @Html.ValidationMessageFor(m => m.IsActive, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="SecurityLevel">سطح امنیتی</label>
                        @Html.DropDownListFor(m => m.SecurityLevel, new SelectList(new[]
                        {
                            new { Value = "Normal", Text = "عادی" },
                            new { Value = "High", Text = "بالا" },
                            new { Value = "VeryHigh", Text = "خیلی بالا" }
                        }, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.SecurityLevel, "", new { @class = "text-danger" })
                        <div class="help-text">سطح دسترسی به اطلاعات حساس</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Form Actions -->
        <div class="form-section">
            <div class="row">
                <div class="col-md-12">
                    <div class="d-flex justify-content-between">
                        <a href="@Url.Action("Index", "Doctor")" class="btn btn-secondary">
                            <i class="fas fa-times"></i>
                            انصراف
                        </a>
                        <div>
                            
                            <button type="submit" class="btn btn-primary" id="submitBtn">
                                <i class="fas fa-save"></i>
                                ذخیره پزشک
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>



@section Scripts {
    <script src="~/Content/plugins/persian-datepicker/persian-datepicker.min.js"></script>
    <script src="~/Content/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/Content/plugins/SweetAlert2/sweetalert2@11.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize Persian DatePicker for DateOfBirthShamsi
            $('#DateOfBirthShamsi').persianDatepicker({
                format: 'YYYY/MM/DD',
                initialValue: false,
                autoClose: true,
                onSelect: function(unix) {
                    // Convert to Persian date format
                    var date = new Date(unix);
                    var persianDate = date.getFullYear() + '/' + 
                        String(date.getMonth() + 1).padStart(2, '0') + '/' + 
                        String(date.getDate()).padStart(2, '0');
                    $('#DateOfBirthShamsi').val(persianDate);
                }
            });

            // Initialize Select2 for specializations
            $('#SelectedSpecializationIds').select2({
                placeholder: "انتخاب تخصص‌ها",
                allowClear: true,
                language: 'fa',
                dir: 'rtl',
                width: '100%',
                tags: false,
                tokenSeparators: [',', ' '],
                maximumSelectionLength: 10,
                templateResult: formatSpecialization,
                templateSelection: formatSpecializationSelection
            });

            // Custom formatting for specializations
            function formatSpecialization(specialization) {
                if (!specialization.id) return specialization.text;
                return $('<span><i class="fas fa-stethoscope text-primary"></i> ' + specialization.text + '</span>');
            }

            function formatSpecializationSelection(specialization) {
                if (!specialization.id) return specialization.text;
                return $('<span><i class="fas fa-stethoscope"></i> ' + specialization.text + '</span>');
            }

            // Enhanced Image Upload Functionality
            initializeImageUpload();

            // Enhanced form validation
            $('#doctorForm').validate({
                rules: {
                    FirstName: {
                        required: true,
                        minlength: 2,
                        maxlength: 100,
                        pattern: /^[\u0600-\u06FF\s]+$/
                    },
                    LastName: {
                        required: true,
                        minlength: 2,
                        maxlength: 100,
                        pattern: /^[\u0600-\u06FF\s]+$/
                    },
                    NationalCode: {
                        required: true,
                        minlength: 10,
                        maxlength: 10,
                        digits: true,
                        pattern: /^\d{10}$/
                    },
                    MedicalCouncilCode: {
                        required: true,
                        minlength: 1,
                        maxlength: 20
                    },
                    PhoneNumber: {
                        required: true,
                        pattern: /^0\d{10}$/
                    },
                    SelectedSpecializationIds: {
                        required: true
                    },
                    Email: {
                        email: true,
                        maxlength: 100
                    },
                    Degree: {
                        required: true
                    },
                    Gender: {
                        required: true
                    },
                    GraduationYear: {
                        range: [1350, 1410]
                    },
                    ExperienceYears: {
                        range: [0, 50]
                    },
                    University: {
                        maxlength: 200
                    },
                    HomeAddress: {
                        maxlength: 500
                    },
                    OfficeAddress: {
                        maxlength: 500
                    },
                    Bio: {
                        maxlength: 2000
                    },
                    EmergencyContact: {
                        maxlength: 50
                    },
                    Education: {
                        maxlength: 100
                    },
                    LicenseNumber: {
                        maxlength: 50
                    }
                },
                messages: {
                    FirstName: {
                        required: "نام الزامی است",
                        minlength: "نام باید حداقل 2 کاراکتر باشد",
                        maxlength: "نام نمی‌تواند بیش از 100 کاراکتر باشد",
                        pattern: "نام باید به فارسی وارد شود"
                    },
                    LastName: {
                        required: "نام خانوادگی الزامی است",
                        minlength: "نام خانوادگی باید حداقل 2 کاراکتر باشد",
                        maxlength: "نام خانوادگی نمی‌تواند بیش از 100 کاراکتر باشد",
                        pattern: "نام خانوادگی باید به فارسی وارد شود"
                    },
                    NationalCode: {
                        required: "کد ملی الزامی است",
                        minlength: "کد ملی باید 10 رقم باشد",
                        maxlength: "کد ملی باید 10 رقم باشد",
                        digits: "کد ملی باید فقط شامل اعداد باشد",
                        pattern: "کد ملی باید دقیقاً 10 رقم باشد"
                    },
                    MedicalCouncilCode: {
                        required: "شماره نظام پزشکی الزامی است",
                        minlength: "شماره نظام پزشکی الزامی است",
                        maxlength: "شماره نظام پزشکی نمی‌تواند بیش از 20 کاراکتر باشد"
                    },
                    PhoneNumber: {
                        required: "شماره تلفن الزامی است",
                        pattern: "شماره تلفن باید با 0 شروع شود و 11 رقم باشد"
                    },
                    SelectedSpecializationIds: {
                        required: "انتخاب حداقل یک تخصص الزامی است"
                    },
                    Email: {
                        email: "فرمت ایمیل صحیح نیست",
                        maxlength: "ایمیل نمی‌تواند بیش از 100 کاراکتر باشد"
                    },
                    Degree: {
                        required: "مدرک تحصیلی الزامی است"
                    },
                    Gender: {
                        required: "جنسیت الزامی است"
                    },
                    GraduationYear: {
                        range: "سال فارغ‌التحصیلی باید بین 1350 تا 1410 باشد"
                    },
                    ExperienceYears: {
                        range: "سال‌های تجربه باید بین 0 تا 50 باشد"
                    },
                    University: {
                        maxlength: "نام دانشگاه نمی‌تواند بیش از 200 کاراکتر باشد"
                    },
                    HomeAddress: {
                        maxlength: "آدرس منزل نمی‌تواند بیش از 500 کاراکتر باشد"
                    },
                    OfficeAddress: {
                        maxlength: "آدرس مطب نمی‌تواند بیش از 500 کاراکتر باشد"
                    },
                    Bio: {
                        maxlength: "بیوگرافی نمی‌تواند بیش از 2000 کاراکتر باشد"
                    },
                    EmergencyContact: {
                        maxlength: "شماره تماس اضطراری نمی‌تواند بیش از 50 کاراکتر باشد"
                    },
                    Education: {
                        maxlength: "تحصیلات نمی‌تواند بیش از 100 کاراکتر باشد"
                    },
                    LicenseNumber: {
                        maxlength: "شماره پروانه نمی‌تواند بیش از 50 کاراکتر باشد"
                    }
                },
                errorElement: 'span',
                errorClass: 'text-danger',
                highlight: function (element) {
                    $(element).closest('.form-group').addClass('has-error');
                    $(element).addClass('field-error');
                },
                unhighlight: function (element) {
                    $(element).closest('.form-group').removeClass('has-error');
                    $(element).removeClass('field-error');
                    if ($(element).val().length > 0) {
                        $(element).addClass('field-success');
                    }
                },
                submitHandler: function(form) {
                    // بررسی انتخاب تخصص‌ها
                    var selectedSpecializations = $('#SelectedSpecializationIds').val();
                    if (!selectedSpecializations || selectedSpecializations.length === 0) {
                        swal("خطا!", "لطفاً حداقل یک تخصص انتخاب کنید.", "error");
                        return false;
                    }

                    // Show loading state
                    $('#submitBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> در حال ذخیره...');
                    $('#doctorForm').addClass('form-loading');

                    return true;
                }
            });

            // Real-time validation
            $('input, textarea, select').on('blur', function() {
                $(this).valid();
            });

            // National Code validation with real-time feedback
            $('#NationalCode').on('input', function () {
                var value = $(this).val();
                $(this).removeClass('field-error field-success');
                
                if (value.length === 10) {
                    if (!isValidNationalCode(value)) {
                        $(this).addClass('field-error');
                        if (!$(this).next('.invalid-feedback').length) {
                            $(this).after('<div class="invalid-feedback">کد ملی وارد شده صحیح نیست</div>');
                        }
                    } else {
                        $(this).addClass('field-success');
                        $(this).next('.invalid-feedback').remove();
                    }
                }
            });
        });

        function isValidNationalCode(code) {
            if (code.length !== 10) return false;

            var sum = 0;
            for (var i = 0; i < 9; i++) {
                sum += parseInt(code[i]) * (10 - i);
            }
            var remainder = sum % 11;
            var checkDigit = parseInt(code[9]);

            if (remainder < 2) {
                return checkDigit === remainder;
            } else {
                return checkDigit === (11 - remainder);
            }
        }



        // Enhanced Image Upload Functionality
        function initializeImageUpload() {
            // Initialize custom file upload
            $('#imageDropzone').on('click', function() {
                $('#ProfileImage').click();
            });

            $('#ProfileImage').on('change', function() {
                var file = this.files[0];
                if (file) {
                    // Validate file type
                    if (!file.type.match(/image.*/)) {
                        swal("خطا!", "فقط فایل‌های تصویری مجاز هستند.", "error");
                        return;
                    }
                    
                    // Validate file size (2MB)
                    if (file.size > 3 * 1024 * 1024) {
                        swal("خطا!", "حجم فایل نباید بیشتر از 3 مگابایت باشد.", "error");
                        return;
                    }

                    // Show loading state
                    $('#imageDropzone .dz-message').html('<i class="fas fa-spinner fa-spin fa-2x text-primary mb-2"></i><p>در حال پردازش...</p>');

                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#profilePreview').attr('src', e.target.result);
                        $('#imageDropzone .dz-message').html('<i class="fas fa-check fa-2x text-success mb-2"></i><p>تصویر انتخاب شد</p><small class="text-success">' + file.name + '</small>');
                        
                        // Add success animation
                        $('#imageDropzone').addClass('upload-success');
                        setTimeout(function() {
                            $('#imageDropzone').removeClass('upload-success');
                        }, 2000);
                    };
                    reader.readAsDataURL(file);
                }
            });

            // Drag and drop functionality
            $('#imageDropzone').on('dragover', function(e) {
                e.preventDefault();
                $(this).addClass('dragover');
            });

            $('#imageDropzone').on('dragleave', function(e) {
                e.preventDefault();
                $(this).removeClass('dragover');
            });

            $('#imageDropzone').on('drop', function(e) {
                e.preventDefault();
                $(this).removeClass('dragover');
                
                var files = e.originalEvent.dataTransfer.files;
                if (files.length > 0) {
                    $('#ProfileImage')[0].files = files;
                    $('#ProfileImage').trigger('change');
                }
            });

            // Remove image functionality
            $('#profilePreview').on('click', function() {
                if ($('#ProfileImage')[0].files.length > 0) {
                    swal({
                        title: "حذف تصویر",
                        text: "آیا می‌خواهید تصویر انتخاب شده را حذف کنید؟",
                        icon: "warning",
                        buttons: ["انصراف", "حذف"],
                        dangerMode: true,
                    }).then((willDelete) => {
                        if (willDelete) {
                            $('#ProfileImage').val('');
                            $('#profilePreview').attr('src', '/Content/Images/default-avatar.jpg');
                            $('#imageDropzone .dz-message').html('<i class="fas fa-cloud-upload-alt fa-2x text-primary mb-2"></i><p>برای آپلود تصویر کلیک کنید یا فایل را اینجا بکشید</p><small class="text-muted">فرمت‌های مجاز: JPG, PNG, GIF (حداکثر 2MB)</small>');
                        }
                    });
                }
            });
        }

    </script>
}
