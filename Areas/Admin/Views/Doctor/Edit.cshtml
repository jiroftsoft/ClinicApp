@model ClinicApp.ViewModels.DoctorManagementVM.DoctorCreateEditViewModel
@{
    ViewBag.Title = "ویرایش پزشک";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link href="~/Content/plugins/persian-datepicker/persian-datepicker.min.css" rel="stylesheet" />
    <style>
        /* Medical Environment Color Scheme - Minimal Design */
        :root {
            --medical-primary: #2c5aa0;
            --medical-secondary: #6c757d;
            --medical-success: #28a745;
            --medical-danger: #dc3545;
            --medical-warning: #ffc107;
            --medical-info: #17a2b8;
            --medical-light: #f8f9fa;
            --medical-dark: #343a40;
            --medical-border: #dee2e6;
            --medical-text: #495057;
            --medical-text-muted: #6c757d;
        }

        /* Base Styles - Clean and Minimal */
        body {
            font-family: 'Tahoma', 'Arial', sans-serif;
            font-size: 14px;
            line-height: 1.6;
            color: var(--medical-text);
            background-color: #ffffff;
        }

        /* Form Container - Simple and Clean */
        .medical-form-container {
            background: #ffffff;
            border: 1px solid var(--medical-border);
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .medical-form-header {
            border-bottom: 2px solid var(--medical-primary);
            padding-bottom: 1rem;
            margin-bottom: 2rem;
        }

        .medical-form-title {
            color: var(--medical-primary);
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0;
        }

        .medical-form-subtitle {
            color: var(--medical-text-muted);
            font-size: 0.9rem;
            margin-top: 0.5rem;
        }

        /* Form Sections - Minimal Design */
        .form-section {
            background: var(--medical-light);
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border: 1px solid var(--medical-border);
        }

        .form-section-title {
            color: var(--medical-primary);
            border-bottom: 2px solid var(--medical-primary);
            padding-bottom: 0.5rem;
            margin-bottom: 1.5rem;
            font-size: 1.1rem;
            font-weight: 600;
        }

        .required::after {
            content: " *";
            color: var(--medical-danger);
            font-weight: bold;
        }

        /* Profile Image - Simple Design */
        .profile-image-container {
            text-align: center;
            margin-bottom: 1rem;
        }

        .profile-image {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid var(--medical-primary);
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        /* Simple File Upload */
        .file-upload-container {
            border: 2px dashed var(--medical-border);
            border-radius: 8px;
            background: var(--medical-light);
            padding: 1.5rem;
            text-align: center;
            cursor: pointer;
            transition: border-color 0.3s ease;
        }

            .file-upload-container:hover {
                border-color: var(--medical-primary);
            }

        /* Form Elements - Touch Friendly */
        .form-control {
            font-size: 14px;
            padding: 0.75rem;
            border: 1px solid var(--medical-border);
            border-radius: 6px;
        }

            .form-control:focus {
                border-color: var(--medical-primary);
                box-shadow: 0 0 0 0.2rem rgba(44, 90, 160, 0.25);
            }

        .btn {
            font-size: 14px;
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            font-weight: 500;
        }

        /* Validation - Clean Design */
        .validation-summary {
            background: #f8d7da;
            border: 1px solid #f5c6cb;
            border-radius: 6px;
            padding: 1rem;
            margin-bottom: 1.5rem;
        }

            .validation-summary ul {
                margin-bottom: 0;
                padding-right: 1.5rem;
            }

        .form-group label {
            font-weight: 600;
            color: var(--medical-text);
            margin-bottom: 0.5rem;
        }

        .help-text {
            font-size: 0.875rem;
            color: var(--medical-text-muted);
            margin-top: 0.25rem;
        }

        /* Audit Info - Simple Design */
        .audit-info {
            background: #e8f4fd;
            border: 1px solid #bee5eb;
            border-radius: 6px;
            padding: 1rem;
            margin-bottom: 1.5rem;
        }

            .audit-info h6 {
                color: #0c5460;
                margin-bottom: 0.5rem;
            }

            .audit-info p {
                margin-bottom: 0.25rem;
                font-size: 0.875rem;
            }

        /* Card Design - Minimal */
        .card {
            border: 1px solid var(--medical-border);
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .card-header {
            background: var(--medical-light);
            border-bottom: 1px solid var(--medical-border);
            padding: 1rem 1.5rem;
        }

        .card-body {
            padding: 1.5rem;
        }
    </style>
}

<div class="container-fluid">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">
            <i class="fas fa-user-edit text-primary"></i>
            ویرایش پزشک
        </h1>
        <a href="@Url.Action("Index", "Doctor")" class="btn btn-secondary btn-sm">
            <i class="fas fa-arrow-right"></i>
            بازگشت به لیست
        </a>
    </div>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            @Html.ValidationSummary(false)
        </div>
    }

    <form id="doctorForm" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.DoctorId)

        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">اطلاعات شخصی</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="FirstName">نام *</label>
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="LastName">نام خانوادگی *</label>
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="NationalCode">کد ملی *</label>
                            @Html.TextBoxFor(m => m.NationalCode, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="MedicalCouncilCode">شماره نظام پزشکی *</label>
                            @Html.TextBoxFor(m => m.MedicalCouncilCode, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MedicalCouncilCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="Gender">جنسیت *</label>
                            @Html.DropDownListFor(m => m.Gender, new SelectList(new[]
                                           {
                                new { Value = "", Text = "انتخاب جنسیت" },
                                new { Value = "1", Text = "مرد" },
                                new { Value = "2", Text = "زن" }
                            }, "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="DateOfBirthShamsi">تاریخ تولد</label>
                            @Html.TextBoxFor(m => m.DateOfBirthShamsi, new { @class = "form-control", placeholder = "مثال: 1369/03/27", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.DateOfBirthShamsi, "", new { @class = "text-danger" })
                            <div class="help-text">تاریخ تولد را به صورت شمسی وارد کنید (مثال: 1369/03/27)</div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="Email">ایمیل</label>
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="PhoneNumber">شماره تلفن *</label>
                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">اطلاعات حرفه‌ای</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="Degree">مدرک تحصیلی *</label>
                            @Html.DropDownListFor(m => m.Degree, new SelectList(new[]
                                           {
                                new { Value = "", Text = "انتخاب مدرک تحصیلی" },
                                new { Value = "1", Text = "پزشک عمومی" },
                                new { Value = "2", Text = "متخصص" },
                                new { Value = "3", Text = "فوق تخصص" },
                                new { Value = "4", Text = "دندانپزشک" },
                                new { Value = "5", Text = "داروساز" }
                            }, "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Degree, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="GraduationYear">سال فارغ‌التحصیلی</label>
                            @Html.TextBoxFor(m => m.GraduationYear, new { @class = "form-control", type = "number", min = "1350", max = "1410" })
                            @Html.ValidationMessageFor(m => m.GraduationYear, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="University">دانشگاه</label>
                            @Html.TextBoxFor(m => m.University, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.University, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="ExperienceYears">سال‌های تجربه</label>
                            @Html.TextBoxFor(m => m.ExperienceYears, new { @class = "form-control", type = "number", min = "0", max = "50" })
                            @Html.ValidationMessageFor(m => m.ExperienceYears, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="SelectedSpecializationIds">تخصص‌ها *</label>
                            <select id="SelectedSpecializationIds" name="SelectedSpecializationIds" multiple class="form-control" size="5">
                                @if (ViewBag.Specializations != null)
                                {
                                    foreach (var specialization in ViewBag.Specializations)
                                    {
                                        var isSelected = Model.SelectedSpecializationIds != null && Model.SelectedSpecializationIds.Contains(specialization.SpecializationId);
                                        <option value="@specialization.SpecializationId" @(isSelected ? "selected" : "")>@specialization.Name</option>
                                    }
                                }
                            </select>
                            <div class="help-text">برای انتخاب چند تخصص، کلید Ctrl را نگه دارید</div>
                            @Html.ValidationMessageFor(m => m.SelectedSpecializationIds, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="LicenseNumber">شماره پروانه</label>
                            @Html.TextBoxFor(m => m.LicenseNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.LicenseNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="Education">تحصیلات تکمیلی</label>
                            @Html.TextBoxFor(m => m.Education, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Education, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="SecurityLevel">سطح امنیتی</label>
                            @Html.DropDownListFor(m => m.SecurityLevel, new SelectList(new[]
                                           {
                                new { Value = "Normal", Text = "عادی" },
                                new { Value = "High", Text = "بالا" },
                                new { Value = "VeryHigh", Text = "خیلی بالا" }
                            }, "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.SecurityLevel, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label for="Bio">بیوگرافی</label>
                            @Html.TextAreaFor(m => m.Bio, new { @class = "form-control", rows = "4" })
                            @Html.ValidationMessageFor(m => m.Bio, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">اطلاعات تماس</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="HomeAddress">آدرس منزل</label>
                            @Html.TextAreaFor(m => m.HomeAddress, new { @class = "form-control", rows = "3", placeholder = "آدرس منزل پزشک" })
                            @Html.ValidationMessageFor(m => m.HomeAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="OfficeAddress">آدرس مطب</label>
                            @Html.TextAreaFor(m => m.OfficeAddress, new { @class = "form-control", rows = "3", placeholder = "آدرس مطب یا کلینیک" })
                            @Html.ValidationMessageFor(m => m.OfficeAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="Address">آدرس</label>
                            @Html.TextAreaFor(m => m.Address, new { @class = "form-control", rows = "3" })
                            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="EmergencyContact">شماره تماس اضطراری</label>
                            @Html.TextBoxFor(m => m.EmergencyContact, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.EmergencyContact, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">تصویر پروفایل و وضعیت</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    
                    <div class="col-md-6">
                        <div class="profile-image-container">
                            <img id="profilePreview" 
                                 src="@(string.IsNullOrEmpty(Model.ProfileImageUrl) ? "/Content/Images/default-avatar.png" : Model.ProfileImageUrl)" 
                                 class="profile-image" alt="تصویر پروفایل" />
                        </div>

                        <!-- لیبل به input وصل است -->
                        <label for="ProfileImage" id="imageUploadContainer" class="file-upload-container">
                            <i class="fas fa-cloud-upload-alt fa-2x text-primary mb-2"></i>
                            <p class="mb-2">برای آپلود تصویر کلیک کنید</p>
                            <small class="text-muted">فرمت‌های مجاز: JPG, PNG, GIF (حداکثر 2MB)</small>
                        </label>

                        <!-- این input با label بالا وصل است -->
                        <input type="file" id="ProfileImage" name="ProfileImage" accept="image/*" style="display:none;" />
                    </div>


                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="IsActive">وضعیت فعال</label>
                            <div class="custom-control custom-switch">
                                @Html.CheckBoxFor(m => m.IsActive, new { @class = "custom-control-input", id = "IsActive" })
                                <label class="custom-control-label" for="IsActive">
                                    پزشک فعال است و می‌تواند نوبت‌دهی کند
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <!-- Audit Trail Section -->
        <div class="audit-info">
            <h6><i class="fas fa-history"></i> اطلاعات ردیابی</h6>
            <div class="row">
                <div class="col-md-6">
                    <p><strong>تاریخ ایجاد:</strong> @Model.CreatedAtShamsi</p>
                    <p><strong>ایجاد کننده:</strong> @Model.CreatedBy</p>
                </div>
                <div class="col-md-6">
                    @if (!string.IsNullOrEmpty(Model.UpdatedAtShamsi))
                    {
                        <p><strong>آخرین ویرایش:</strong> @Model.UpdatedAtShamsi</p>
                        <p><strong>ویرایش کننده:</strong> @Model.UpdatedBy</p>
                    }
                </div>
            </div>
        </div>

        <div class="form-group">
            <a href="@Url.Action("Index", "Doctor")" class="btn btn-secondary">
                <i class="fas fa-times"></i>
                انصراف
            </a>
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save"></i>
                ذخیره تغییرات
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <script src="~/Content/plugins/persian-datepicker/persian-datepicker.min.js"></script>
    <script src="~/Content/plugins/SweetAlert2/sweetalert2@11.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize Persian DatePicker for DateOfBirthShamsi
            $('#DateOfBirthShamsi').persianDatepicker({
                format: 'YYYY/MM/DD',
                initialValue: false,
                autoClose: true,
                onSelect: function(unix) {
                    // Convert to Persian date format
                    var date = new Date(unix);
                    var persianDate = date.getFullYear() + '/' +
                        String(date.getMonth() + 1).padStart(2, '0') + '/' +
                        String(date.getDate()).padStart(2, '0');
                    $('#DateOfBirthShamsi').val(persianDate);
                }
            });

            // Simple form validation without jQuery validate
            $('#doctorForm').off('submit').on('submit', function(e) {
                var isValid = true;

                // Check required fields
                $(this).find('[required]').each(function() {
                    if (!$(this).val()) {
                        $(this).addClass('is-invalid');
                        isValid = false;
                    } else {
                        $(this).removeClass('is-invalid').addClass('is-valid');
                    }
                });

                // Check specializations
                var selectedSpecializations = $('#SelectedSpecializationIds').val();
                if (!selectedSpecializations || selectedSpecializations.length === 0) {
                    $('#SelectedSpecializationIds').addClass('is-invalid');
                    Swal.fire({
                        icon: 'error',
                        title: 'خطا',
                        text: 'لطفاً حداقل یک تخصص انتخاب کنید.',
                        confirmButtonText: 'باشه'
                    });
                    isValid = false;
                } else {
                    $('#SelectedSpecializationIds').removeClass('is-invalid').addClass('is-valid');
                }

                if (isValid) {
                    // Show loading state
                    $('button[type="submit"]').prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> در حال ذخیره...');
                } else {
                    e.preventDefault();
                }

                return isValid;
            });

            // Real-time validation feedback - Fixed to prevent conflicts
            $('input, select, textarea').off('blur').on('blur', function() {
                if ($(this).prop('required') && !$(this).val()) {
                    $(this).addClass('is-invalid').removeClass('is-valid');
                } else if ($(this).val()) {
                    $(this).removeClass('is-invalid').addClass('is-valid');
                }
            });

            // Phone number formatting
            $('#PhoneNumber').off('input').on('input', function () {
                var value = $(this).val().replace(/\D/g, '');
                if (value.length > 0 && !value.startsWith('0')) {
                    value = '0' + value;
                }
                $(this).val(value);
            });

            // National code validation
            $('#NationalCode').off('input').on('input', function () {
                var value = $(this).val().replace(/\D/g, '');
                if (value.length > 10) {
                    value = value.substring(0, 10);
                }
                $(this).val(value);
            });

            // Medical council code validation
            $('#MedicalCouncilCode').off('input').on('input', function () {
                var value = $(this).val().replace(/\D/g, '');
                if (value.length > 8) {
                    value = value.substring(0, 8);
                }
                $(this).val(value);
            });

            // Simple Image Upload - Fixed to prevent infinite loop
         // Simple Image Upload - Fixed to prevent infinite loop
$('#ProfileImage').on('change', function (e) {
    var file = e.target.files[0];
    if (file) {
        var reader = new FileReader();
        reader.onload = function (e) {
            $('#profilePreview').attr('src', e.target.result);
        }
        reader.readAsDataURL(file);
    }
        });




            // Success/Error messages
            @if (TempData["Success"] != null)
            {
                <text>
                Swal.fire({
                    icon: 'success',
                    title: 'موفقیت',
                    text: '@TempData["Success"]',
                    confirmButtonText: 'باشه'
                });
                </text>
            }

            @if (TempData["Error"] != null)
            {
                <text>
                Swal.fire({
                    icon: 'error',
                    title: 'خطا',
                    text: '@TempData["Error"]',
                    confirmButtonText: 'باشه'
                });
                </text>
            }
        });
    </script>
}
