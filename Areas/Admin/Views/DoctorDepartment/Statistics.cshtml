@model ClinicApp.ViewModels.DoctorManagementVM.DepartmentStatisticsViewModel
@{
    ViewBag.Title = "آمار انتسابات دپارتمان";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link href="~/Content/plugins/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <style>
        .stats-card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }
        .metric-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            transition: transform 0.3s ease;
        }
        .metric-card:hover {
            transform: translateY(-5px);
        }
        .metric-card h3 {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 10px;
        }
        .metric-card p {
            opacity: 0.9;
            margin-bottom: 0;
        }
        .chart-container {
            background: white;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        .table-responsive {
            border-radius: 10px;
            overflow: hidden;
        }
        .progress-bar-custom {
            height: 8px;
            border-radius: 4px;
        }
        .filter-section {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }
        .export-buttons {
            margin-bottom: 20px;
        }
        .export-btn {
            margin-right: 10px;
            margin-bottom: 10px;
        }
    </style>
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-0 text-primary">
                        <i class="fas fa-chart-bar me-2"></i>
                        آمار انتسابات دپارتمان
                    </h2>
                    <p class="text-muted mb-0">گزارش‌های جامع و آمار انتسابات پزشکان به دپارتمان‌ها</p>
                </div>
                <div>
                    <a href="@Url.Action("Index", "DoctorDepartment")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-right me-2"></i>
                        بازگشت به لیست
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Export Buttons -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="export-buttons">
                <button type="button" class="btn btn-success export-btn" onclick="exportToExcel()">
                    <i class="fas fa-file-excel me-2"></i>
                    خروجی Excel
                </button>
                <button type="button" class="btn btn-danger export-btn" onclick="exportToPdf()">
                    <i class="fas fa-file-pdf me-2"></i>
                    خروجی PDF
                </button>
                <button type="button" class="btn btn-info export-btn" onclick="refreshStatistics()">
                    <i class="fas fa-sync-alt me-2"></i>
                    بروزرسانی آمار
                </button>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="filter-section">
                <h5 class="mb-3">
                    <i class="fas fa-filter me-2"></i>
                    فیلترهای گزارش
                </h5>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="dateFrom" class="form-label">از تاریخ</label>
                            <input type="text" class="form-control persian-date" id="dateFrom" placeholder="1402/01/01">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="dateTo" class="form-label">تا تاریخ</label>
                            <input type="text" class="form-control persian-date" id="dateTo" placeholder="1402/12/29">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="departmentFilter" class="form-label">دپارتمان</label>
                            <select class="form-control" id="departmentFilter">
                                <option value="">همه دپارتمان‌ها</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="statusFilter" class="form-label">وضعیت</label>
                            <select class="form-control" id="statusFilter">
                                <option value="">همه وضعیت‌ها</option>
                                <option value="active">فعال</option>
                                <option value="inactive">غیرفعال</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-12">
                        <button type="button" class="btn btn-primary me-2" onclick="applyFilters()">
                            <i class="fas fa-search me-2"></i>
                            اعمال فیلتر
                        </button>
                        <button type="button" class="btn btn-outline-secondary" onclick="clearFilters()">
                            <i class="fas fa-times me-2"></i>
                            پاک کردن فیلترها
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Key Metrics -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="metric-card">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h3 id="totalAssignments">0</h3>
                        <p>کل انتسابات</p>
                    </div>
                    <i class="fas fa-hospital fa-2x opacity-50"></i>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="metric-card">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h3 id="activeAssignments">0</h3>
                        <p>انتسابات فعال</p>
                    </div>
                    <i class="fas fa-check-circle fa-2x opacity-50"></i>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="metric-card">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h3 id="totalDoctors">0</h3>
                        <p>پزشکان انتساب شده</p>
                    </div>
                    <i class="fas fa-user-md fa-2x opacity-50"></i>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="metric-card">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h3 id="totalDepartments">0</h3>
                        <p>دپارتمان‌های فعال</p>
                    </div>
                    <i class="fas fa-building fa-2x opacity-50"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="chart-container">
                <h5 class="mb-3">
                    <i class="fas fa-chart-pie me-2"></i>
                    توزیع انتسابات بر اساس دپارتمان
                </h5>
                <canvas id="departmentChart" width="400" height="200"></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <div class="chart-container">
                <h5 class="mb-3">
                    <i class="fas fa-chart-bar me-2"></i>
                    توزیع نقش‌ها در دپارتمان‌ها
                </h5>
                <canvas id="roleChart" width="400" height="200"></canvas>
            </div>
        </div>
    </div>

    <!-- Department Details Table -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="stats-card p-4">
                <h5 class="mb-3">
                    <i class="fas fa-table me-2"></i>
                    جزئیات انتسابات دپارتمان‌ها
                </h5>
                <div class="table-responsive">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>دپارتمان</th>
                                <th>کل انتسابات</th>
                                <th>انتسابات فعال</th>
                                <th>پزشکان منحصر به فرد</th>
                                <th>درصد اشغال</th>
                                <th>عملیات</th>
                            </tr>
                        </thead>
                        <tbody id="departmentTableBody">
                            <!-- Data will be loaded via AJAX -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activity -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="stats-card p-4">
                <h5 class="mb-3">
                    <i class="fas fa-clock me-2"></i>
                    آخرین انتسابات
                </h5>
                <div id="recentAssignments">
                    <!-- Data will be loaded via AJAX -->
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="stats-card p-4">
                <h5 class="mb-3">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    هشدارها و نکات مهم
                </h5>
                <div id="alerts">
                    <!-- Data will be loaded via AJAX -->
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Content/plugins/sweetalert2/sweetalert2@11.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
        // محافظت jQuery - اطمینان از بارگذاری کامل jQuery
        (function() {
            function ensureJQuery(callback) {
                if (typeof jQuery !== 'undefined' && typeof $.fn !== 'undefined') {
                    callback();
                } else {
                    setTimeout(function() {
                        ensureJQuery(callback);
                    }, 50);
                }
            }

            ensureJQuery(function() {
                $(document).ready(function () {
                    initializePersianDatePickers();
                    loadStatistics();
                    loadFilters();
                    setupEventHandlers();
                });
            });
        })();

        let departmentChart, roleChart;

        function initializePersianDatePickers() {
            $('.persian-date').persianDatepicker({
                format: 'YYYY/MM/DD',
                initialValue: false,
                autoClose: true,
                onSelect: function(unix) {
                    var date = new Date(unix);
                    var persianDate = date.getFullYear() + '/' + String(date.getMonth() + 1).padStart(2, '0') + '/' + String(date.getDate()).padStart(2, '0');
                    $(this.element).val(persianDate);
                }
            });
        }

        function loadStatistics() {
            const filters = getFilters();
            
            $.get('@Url.Action("GetStatistics", "DoctorDepartment")', filters)
                .done(function (data) {
                    if (data.success) {
                        updateMetrics(data.data);
                        updateCharts(data.data);
                        updateDepartmentTable(data.data.DepartmentDetails);
                        updateRecentAssignments(data.data.RecentAssignments);
                        updateAlerts(data.data.Alerts);
                    }
                })
                .fail(function () {
                    showError('خطا در بارگذاری آمار', 'لطفاً دوباره تلاش کنید');
                });
        }

        function loadFilters() {
            // Load departments for filter
            $.get('@Url.Action("GetDepartments", "DoctorDepartment")')
                .done(function (data) {
                    if (data.success) {
                        const select = $('#departmentFilter');
                        data.data.forEach(function(dept) {
                            select.append(`<option value="${dept.Value}">${dept.Text}</option>`);
                        });
                    }
                })
                .fail(function () {
                    console.error('Failed to load departments');
                });
        }

        function setupEventHandlers() {
            // Auto-refresh every 5 minutes
            setInterval(function () {
                loadStatistics();
            }, 300000);
        }

        function getFilters() {
            return {
                dateFrom: $('#dateFrom').val(),
                dateTo: $('#dateTo').val(),
                departmentId: $('#departmentFilter').val(),
                status: $('#statusFilter').val()
            };
        }

        function applyFilters() {
            loadStatistics();
        }

        function clearFilters() {
            $('#dateFrom').val('');
            $('#dateTo').val('');
            $('#departmentFilter').val('');
            $('#statusFilter').val('');
            loadStatistics();
        }

        function refreshStatistics() {
            loadStatistics();
            showSuccess('بروزرسانی موفق', 'آمار با موفقیت بروزرسانی شد');
        }

        function updateMetrics(data) {
            $('#totalAssignments').text(data.TotalAssignments);
            $('#activeAssignments').text(data.ActiveAssignments);
            $('#totalDoctors').text(data.TotalDoctors);
            $('#totalDepartments').text(data.TotalDepartments);
        }

        function updateCharts(data) {
            // Department Chart
            if (departmentChart) {
                departmentChart.destroy();
            }
            
            const deptCtx = document.getElementById('departmentChart').getContext('2d');
            departmentChart = new Chart(deptCtx, {
                type: 'doughnut',
                data: {
                    labels: data.DepartmentChart.Labels,
                    datasets: [{
                        data: data.DepartmentChart.Data,
                        backgroundColor: [
                            '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0',
                            '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });

            // Role Chart
            if (roleChart) {
                roleChart.destroy();
            }
            
            const roleCtx = document.getElementById('roleChart').getContext('2d');
            roleChart = new Chart(roleCtx, {
                type: 'bar',
                data: {
                    labels: data.RoleChart.Labels,
                    datasets: [{
                        label: 'تعداد',
                        data: data.RoleChart.Data,
                        backgroundColor: '#667eea',
                        borderColor: '#764ba2',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        function updateDepartmentTable(departments) {
            const tbody = $('#departmentTableBody');
            tbody.empty();
            
            departments.forEach(function(dept) {
                const occupancyPercent = dept.TotalAssignments > 0 ? 
                    Math.round((dept.ActiveAssignments / dept.TotalAssignments) * 100) : 0;
                
                tbody.append(`
                    <tr>
                        <td>${dept.DepartmentName}</td>
                        <td>${dept.TotalAssignments}</td>
                        <td>${dept.ActiveAssignments}</td>
                        <td>${dept.UniqueDoctors}</td>
                        <td>
                            <div class="progress">
                                <div class="progress-bar progress-bar-custom" 
                                     style="width: ${occupancyPercent}%" 
                                     role="progressbar">
                                    ${occupancyPercent}%
                                </div>
                            </div>
                        </td>
                        <td>
                            <button type="button" class="btn btn-sm btn-outline-primary" 
                                    onclick="viewDepartmentDetails(${dept.DepartmentId})">
                                <i class="fas fa-eye"></i>
                            </button>
                        </td>
                    </tr>
                `);
            });
        }

        function updateRecentAssignments(assignments) {
            const container = $('#recentAssignments');
            container.empty();
            
            if (assignments.length === 0) {
                container.append('<p class="text-muted">هیچ انتساب جدیدی یافت نشد</p>');
                return;
            }
            
            assignments.forEach(function(assignment) {
                container.append(`
                    <div class="d-flex justify-content-between align-items-center mb-2 p-2 border-bottom">
                        <div>
                            <strong>${assignment.DoctorName}</strong>
                            <br>
                            <small class="text-muted">${assignment.DepartmentName}</small>
                        </div>
                        <div class="text-end">
                            <small class="text-muted">${assignment.AssignmentDate}</small>
                            <br>
                            <span class="badge bg-${assignment.IsActive ? 'success' : 'secondary'}">
                                ${assignment.IsActive ? 'فعال' : 'غیرفعال'}
                            </span>
                        </div>
                    </div>
                `);
            });
        }

        function updateAlerts(alerts) {
            const container = $('#alerts');
            container.empty();
            
            if (alerts.length === 0) {
                container.append('<p class="text-success">هیچ هشداری وجود ندارد</p>');
                return;
            }
            
            alerts.forEach(function(alert) {
                container.append(`
                    <div class="alert alert-${alert.Type} alert-dismissible fade show" role="alert">
                        <i class="fas fa-${alert.Icon} me-2"></i>
                        ${alert.Message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                `);
            });
        }

        function viewDepartmentDetails(departmentId) {
            window.location.href = '@Url.Action("Index", "DoctorDepartment")?departmentId=' + departmentId;
        }

        function exportToExcel() {
            const filters = getFilters();
            const url = '@Url.Action("ExportToExcel", "DoctorDepartment")?' + $.param(filters);
            window.open(url, '_blank');
        }

        function exportToPdf() {
            const filters = getFilters();
            const url = '@Url.Action("ExportToPdf", "DoctorDepartment")?' + $.param(filters);
            window.open(url, '_blank');
        }

        function showSuccess(title, message) {
            Swal.fire({
                title: title,
                text: message,
                icon: 'success',
                confirmButtonText: 'باشه'
            });
        }

        function showError(title, message) {
            Swal.fire({
                title: title,
                text: message,
                icon: 'error',
                confirmButtonText: 'باشه'
            });
        }

        // Keyboard shortcuts
        $(document).keydown(function (e) {
            // Ctrl+R for refresh
            if (e.ctrlKey && e.keyCode === 82) {
                e.preventDefault();
                refreshStatistics();
            }
            
            // Ctrl+E for export Excel
            if (e.ctrlKey && e.keyCode === 69) {
                e.preventDefault();
                exportToExcel();
            }
            
            // Ctrl+P for export PDF
            if (e.ctrlKey && e.keyCode === 80) {
                e.preventDefault();
                exportToPdf();
            }
        });
    </script>
}
