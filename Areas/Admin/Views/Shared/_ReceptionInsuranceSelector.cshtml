@model int // PatientId

@{
    var patientId = Model;
}

<div id="receptionInsuranceSelector_@patientId" class="reception-insurance-selector card shadow-sm mb-3">
    <div class="card-header bg-info text-white">
        <h6 class="mb-0">
            <i class="fas fa-user-shield"></i> انتخاب بیمه بیمار (پذیرش)
            <button type="button" class="btn btn-sm btn-outline-light float-end" onclick="refreshReceptionInsuranceStatus(@patientId)">
                <i class="fas fa-sync-alt"></i>
            </button>
        </h6>
    </div>
    <div class="card-body">
        <!-- وضعیت فعلی -->
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <strong>بیمه پایه:</strong>
                        <span id="receptionPrimaryStatus_@patientId" class="badge bg-secondary">در حال بررسی...</span>
                    </div>
                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="selectPrimaryInsurance(@patientId)">
                        <i class="fas fa-plus-circle"></i> انتخاب
                    </button>
                </div>
                <div id="receptionPrimaryDetails_@patientId" class="mt-1 small text-muted">
                    <div id="receptionPrimaryName_@patientId">-</div>
                    <div id="receptionPrimaryPolicy_@patientId">-</div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <strong>بیمه تکمیلی:</strong>
                        <span id="receptionSupplementaryStatus_@patientId" class="badge bg-secondary">در حال بررسی...</span>
                    </div>
                    <button type="button" class="btn btn-sm btn-outline-info" onclick="selectSupplementaryInsurance(@patientId)">
                        <i class="fas fa-plus-circle"></i> انتخاب
                    </button>
                </div>
                <div id="receptionSupplementaryDetails_@patientId" class="mt-1 small text-muted">
                    <div id="receptionSupplementaryName_@patientId">-</div>
                    <div id="receptionSupplementaryPolicy_@patientId">-</div>
                </div>
            </div>
        </div>

        <!-- اعتبارسنجی سریع -->
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <strong>اعتبارسنجی:</strong>
                        <span id="receptionValidationStatus_@patientId" class="badge bg-secondary">در حال بررسی...</span>
                    </div>
                    <div>
                        <button type="button" class="btn btn-sm btn-outline-success" onclick="quickValidateReceptionInsurance(@patientId)">
                            <i class="fas fa-bolt"></i> بررسی سریع
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-warning" onclick="fullValidateReceptionInsurance(@patientId)">
                            <i class="fas fa-check-circle"></i> اعتبارسنجی کامل
                        </button>
                    </div>
                </div>
                <div id="receptionValidationMessage_@patientId" class="mt-2 small" style="display: none;">
                    <!-- Validation messages will be shown here -->
                </div>
            </div>
        </div>

        <!-- هشدارها -->
        <div id="receptionAlerts_@patientId" class="mt-3" style="display: none;">
            <!-- Alerts will be populated here -->
        </div>
    </div>
</div>

<style>
    .reception-insurance-selector {
        border-left: 4px solid #17a2b8;
    }
    
    .reception-insurance-selector .card-body {
        padding: 1rem;
    }
    
    .reception-insurance-selector .btn {
        font-size: 0.8rem;
        padding: 0.25rem 0.5rem;
    }
    
    .reception-insurance-selector .badge {
        font-size: 0.7rem;
    }
</style>

<script>
    $(document).ready(function() {
        // بارگذاری اولیه وضعیت بیمه برای پذیرش
        loadReceptionInsuranceStatus(@patientId);
    });

    function loadReceptionInsuranceStatus(patientId) {
        $.ajax({
            url: '@Url.Action("GetPatientInsuranceStatusForReception", "Reception")',
            method: 'GET',
            data: { patientId: patientId },
            success: function(response) {
                if (response.Success) {
                    updateReceptionInsuranceDisplay(patientId, response.Data);
                } else {
                    showReceptionInsuranceError(patientId, response.Message);
                }
            },
            error: function(xhr, status, error) {
                showReceptionInsuranceError(patientId, 'خطا در دریافت وضعیت بیمه');
            }
        });
    }

    function updateReceptionInsuranceDisplay(patientId, status) {
        // به‌روزرسانی بیمه پایه
        if (status.HasPrimaryInsurance && status.PrimaryInsurance) {
            updateReceptionInsuranceDisplay(patientId, 'primary', status.PrimaryInsurance, true);
        } else {
            updateReceptionInsuranceDisplay(patientId, 'primary', null, false);
        }

        // به‌روزرسانی بیمه تکمیلی
        if (status.HasSupplementaryInsurance && status.SupplementaryInsurance) {
            updateReceptionInsuranceDisplay(patientId, 'supplementary', status.SupplementaryInsurance, true);
        } else {
            updateReceptionInsuranceDisplay(patientId, 'supplementary', null, false);
        }

        // اعتبارسنجی خودکار
        quickValidateReceptionInsurance(patientId);
    }

    function updateReceptionInsuranceDisplay(patientId, type, insurance, hasInsurance) {
        const prefix = 'reception' + type.charAt(0).toUpperCase() + type.slice(1);
        const status = $('#' + prefix + 'Status_' + patientId);
        const details = $('#' + prefix + 'Details_' + patientId);

        if (hasInsurance && insurance) {
            status.removeClass('bg-secondary bg-danger').addClass('bg-success').text('فعال');
            
            $('#' + prefix + 'Name_' + patientId).text(insurance.Name || '-');
            $('#' + prefix + 'Policy_' + patientId).text('شماره بیمه: ' + (insurance.PolicyNumber || '-'));
        } else {
            status.removeClass('bg-success').addClass('bg-danger').text('ندارد');
            
            $('#' + prefix + 'Name_' + patientId).text('-');
            $('#' + prefix + 'Policy_' + patientId).text('-');
        }
    }

    function quickValidateReceptionInsurance(patientId) {
        $('#receptionValidationStatus_' + patientId).removeClass('bg-success bg-danger').addClass('bg-secondary').text('در حال بررسی...');
        
        $.ajax({
            url: '@Url.Action("QuickValidatePatientInsurance", "Reception")',
            method: 'GET',
            data: { patientId: patientId },
            success: function(response) {
                if (response.Success && response.Data) {
                    $('#receptionValidationStatus_' + patientId).removeClass('bg-secondary bg-danger').addClass('bg-success').text('معتبر');
                    $('#receptionValidationMessage_' + patientId).removeClass('text-danger').addClass('text-success').text('بیمه بیمار معتبر است').show();
                } else {
                    $('#receptionValidationStatus_' + patientId).removeClass('bg-secondary bg-success').addClass('bg-danger').text('نامعتبر');
                    $('#receptionValidationMessage_' + patientId).removeClass('text-success').addClass('text-danger').text(response.Message || 'بیمه بیمار معتبر نیست').show();
                }
            },
            error: function(xhr, status, error) {
                $('#receptionValidationStatus_' + patientId).removeClass('bg-success bg-secondary').addClass('bg-danger').text('خطا');
                $('#receptionValidationMessage_' + patientId).removeClass('text-success').addClass('text-danger').text('خطا در بررسی اعتبار بیمه').show();
            }
        });
    }

    function fullValidateReceptionInsurance(patientId) {
        $('#receptionValidationStatus_' + patientId).removeClass('bg-success bg-danger').addClass('bg-secondary').text('در حال بررسی...');
        
        $.ajax({
            url: '@Url.Action("ValidatePatientInsuranceForReception", "Reception")',
            method: 'GET',
            data: { patientId: patientId },
            success: function(response) {
                if (response.Success) {
                    updateReceptionValidationDisplay(patientId, response.Data);
                } else {
                    showReceptionValidationError(patientId, response.Message);
                }
            },
            error: function(xhr, status, error) {
                showReceptionValidationError(patientId, 'خطا در اعتبارسنجی کامل بیمه');
            }
        });
    }

    function updateReceptionValidationDisplay(patientId, validationResult) {
        if (validationResult.IsValid) {
            $('#receptionValidationStatus_' + patientId).removeClass('bg-secondary bg-danger').addClass('bg-success').text('معتبر');
            $('#receptionValidationMessage_' + patientId).removeClass('text-danger').addClass('text-success').text('بیمه بیمار معتبر است').show();
        } else {
            $('#receptionValidationStatus_' + patientId).removeClass('bg-secondary bg-success').addClass('bg-danger').text('نامعتبر');
            $('#receptionValidationMessage_' + patientId).removeClass('text-success').addClass('text-danger').text('بیمه بیمار نامعتبر است').show();
        }

        // نمایش مسائل
        if (validationResult.Issues && validationResult.Issues.length > 0) {
            const alertsHtml = validationResult.Issues.map(issue => 
                `<div class="alert alert-${getSeverityClass(issue.Severity)} alert-sm">
                    <strong>${issue.Message}</strong>
                    ${issue.Recommendation ? '<br><small>' + issue.Recommendation + '</small>' : ''}
                </div>`
            ).join('');
            $('#receptionAlerts_' + patientId).html(alertsHtml).show();
        } else {
            $('#receptionAlerts_' + patientId).hide();
        }
    }

    function getSeverityClass(severity) {
        switch(severity) {
            case 'Critical': return 'danger';
            case 'Warning': return 'warning';
            case 'Info': return 'info';
            default: return 'secondary';
        }
    }

    function selectPrimaryInsurance(patientId) {
        // باز کردن مودال انتخاب بیمه پایه
        // این تابع باید با مودال انتخاب بیمه پیاده‌سازی شود
        toastr.info('انتخاب بیمه پایه - در حال توسعه');
    }

    function selectSupplementaryInsurance(patientId) {
        // باز کردن مودال انتخاب بیمه تکمیلی
        // این تابع باید با مودال انتخاب بیمه پیاده‌سازی شود
        toastr.info('انتخاب بیمه تکمیلی - در حال توسعه');
    }

    function showReceptionInsuranceError(patientId, message) {
        $('#receptionPrimaryStatus_' + patientId).removeClass('bg-success bg-secondary').addClass('bg-danger').text('خطا');
        $('#receptionSupplementaryStatus_' + patientId).removeClass('bg-success bg-secondary').addClass('bg-danger').text('خطا');
        toastr.error('خطا در دریافت وضعیت بیمه: ' + message);
    }

    function showReceptionValidationError(patientId, message) {
        $('#receptionValidationStatus_' + patientId).removeClass('bg-success bg-secondary').addClass('bg-danger').text('خطا');
        $('#receptionValidationMessage_' + patientId).removeClass('text-success').addClass('text-danger').text(message).show();
        toastr.error('خطا در اعتبارسنجی: ' + message);
    }

    function refreshReceptionInsuranceStatus(patientId) {
        loadReceptionInsuranceStatus(patientId);
        toastr.info('وضعیت بیمه به‌روزرسانی شد');
    }
</script>