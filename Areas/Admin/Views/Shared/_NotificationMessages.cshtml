@using ClinicApp.Services
@using ClinicApp.Services.Notification
@{
    var notificationService = DependencyResolver.Current.GetService<IMessageNotificationService>();
    var messages = notificationService?.GetMessages() ?? new List<NotificationMessage>();
}

@if (messages.Any())
{
    <div class="notification-container" style="position: fixed; top: 20px; right: 20px; z-index: 9999; max-width: 400px;">
        @foreach (var message in messages)
        {
            <div class="alert @message.CssClass alert-dismissible fade show notification-message" role="alert" style="margin-bottom: 10px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);">
                <i class="@message.Icon"></i>
                <strong>@message.Message</strong>
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
    </div>

    <script>
        $(document).ready(function() {
            // Auto-hide notifications after 5 seconds
            setTimeout(function() {
                $('.notification-message').fadeOut('slow', function() {
                    $(this).remove();
                });
            }, 5000);

            // Clear notifications from session after display
            $.post('@Url.Action("ClearNotifications", "Base", new { area = "Admin" })');
        });
    </script>
}
