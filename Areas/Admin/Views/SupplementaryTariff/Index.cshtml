@model ClinicApp.ViewModels.Insurance.Supplementary.SupplementaryTariffIndexPageViewModel
@{
    ViewBag.Title = "مدیریت تعرفه‌های بیمه تکمیلی - Production Ready";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}


<div class="container-fluid">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="medical-card">
                <div class="card-header">
                    <h2 class="mb-0">
                        <i class="fas fa-shield-alt me-2"></i>
                        مدیریت تعرفه‌های بیمه تکمیلی
                    </h2>
                    <p class="mb-0 mt-2 opacity-75">
                        مدیریت کامل تعرفه‌های بیمه تکمیلی برای محیط درمانی
                    </p>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="stats-card">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-list-alt fa-2x text-primary"></i>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h5 class="mb-0">@Model.TotalServices</h5>
                        <p class="text-muted mb-0">کل خدمات</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="stats-card">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-shield-alt fa-2x text-success"></i>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h5 class="mb-0">@Model.TotalTariffs</h5>
                        <p class="text-muted mb-0">کل تعرفه‌ها</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="stats-card">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-check-circle fa-2x text-success"></i>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h5 class="mb-0">@Model.ActiveTariffs</h5>
                        <p class="text-muted mb-0">تعرفه‌های فعال</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="stats-card">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-clock fa-2x text-warning"></i>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h5 class="mb-0">@Model.ExpiredTariffs</h5>
                        <p class="text-muted mb-0">تعرفه‌های منقضی</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <a href="@Url.Action("Create", "SupplementaryTariff")" class="btn btn-medical-primary me-2">
                        <i class="fas fa-plus me-2"></i>
                        ایجاد تعرفه جدید
                    </a>
                    <a href="@Url.Action("CreateBulk", "SupplementaryTariff")" class="btn btn-medical-secondary me-2">
                        <i class="fas fa-layer-group me-2"></i>
                        ایجاد گروهی
                    </a>
                    <button type="button" class="btn btn-medical-success" onclick="refreshData()">
                        <i class="fas fa-sync-alt me-2"></i>
                        بروزرسانی
                    </button>
                </div>
                <div>
                    <button type="button" class="btn btn-medical-danger" onclick="clearAllFilters()">
                        <i class="fas fa-filter me-2"></i>
                        پاک کردن فیلترها
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters Section -->
    <div class="row mb-4">
        <div class="col-12">
            @Html.Partial("_SupplementaryTariffFilters", Model.Filters)
        </div>
    </div>

    <!-- Tariffs Table -->
    <div class="row">
        <div class="col-12">
            <div id="tableHost" aria-live="polite" aria-busy="false">
                @Html.Partial("_SupplementaryTariffTable", Model.Tariffs)
            </div>
            <div id="tableSkeleton" class="d-none">
                <div class="placeholder-wave p-3">
                    <div class="placeholder col-12 mb-2" style="height:16px"></div>
                    <div class="placeholder col-12 mb-2" style="height:16px"></div>
                    <div class="placeholder col-12 mb-2" style="height:16px"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/Content/css/medical-environment")
    <link href="~/Content/css/medical-environment-styles.css" rel="stylesheet" />
    <link href="~/Content/css/supplementary-tariff-styles.css" rel="stylesheet" />
    <link href="~/Content/css/insurance/supplementary-tariff-views.css" rel="stylesheet" />
    <link href="~/Content/css/insurance/supplementary-tariff-index.css" rel="stylesheet" />
    
    <!-- 🔧 CRITICAL: کاملاً غیرفعال کردن کش برای محیط درمانی realtime -->
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate, max-age=0" />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />
    <meta http-equiv="Last-Modified" content="0" />
    <meta http-equiv="ETag" content="" />
    <meta name="robots" content="noindex, nofollow, noarchive, nosnippet, noimageindex" />
    <meta name="googlebot" content="noindex, nofollow, noarchive, nosnippet, noimageindex" />
}

@section Scripts {
    <script src="~/Scripts/app/modules/medical-config.js"></script>
    <script src="~/Scripts/app/modules/medical-ui.js"></script>
    <script src="~/Scripts/app/modules/medical-api.js"></script>
    <script src="~/Scripts/app/modules/medical-validation.js"></script>
    <script src="~/Scripts/app/supplementary-tariff.js"></script>
    
    <script>
        // Wait for jQuery to be available
        function initializeSupplementaryTariff() {
            if (typeof jQuery !== 'undefined' && typeof $ !== 'undefined') {
                $(document).ready(function() {
                    // Initialize MedicalConfig first
                    if (typeof window.MedicalConfig !== 'undefined') {
                        window.MedicalConfig.init();
                    }
                    
                    // Initialize the module
                    if (typeof window.MedicalSupplementaryTariff !== 'undefined') {
                        window.MedicalSupplementaryTariff.init();
                    }
                    
                    // Initialize UI components
                    if (typeof window.MedicalUI !== 'undefined') {
                        window.MedicalUI.init();
                    }
                });
            } else {
                // Retry after a short delay
                setTimeout(initializeSupplementaryTariff, 100);
            }
        }
        
        // Start initialization
        initializeSupplementaryTariff();

        function refreshData() {
            try {
                // 🔧 CRITICAL: کاملاً غیرفعال کردن کش برای محیط درمانی realtime
                const timestamp = new Date().getTime();
                const randomId = Math.random().toString(36).substring(7);
                const currentUrl = new URL(location.href);
                
                // حذف تمام پارامترهای کش قبلی
                currentUrl.searchParams.delete('_t');
                currentUrl.searchParams.delete('_r');
                currentUrl.searchParams.delete('_c');
                
                // اضافه کردن پارامترهای کش‌باستینگ جدید
                currentUrl.searchParams.set('_t', timestamp);
                currentUrl.searchParams.set('_r', randomId);
                currentUrl.searchParams.set('_c', '1');
                
                // پاک کردن تمام کش‌های موجود
                if ('caches' in window) {
                    caches.keys().then(names => {
                        names.forEach(name => {
                            caches.delete(name);
                        });
                    });
                }
                
                // پاک کردن localStorage و sessionStorage
                try {
                    localStorage.clear();
                    sessionStorage.clear();
                } catch (e) {
                    console.warn('خطا در پاک کردن storage:', e);
                }
                
                // Force reload with cache busting
                location.href = currentUrl.toString();
            } catch (error) {
                console.error('خطا در بروزرسانی داده‌ها:', error);
                location.reload();
            }
        }

        function clearAllFilters() {
            try {
                // پاک کردن تمام فیلدهای فیلتر
                $('#searchTerm').val('');
                $('#serviceId').val('');
                $('#insurancePlanId').val('');
                $('#departmentId').val('');
                $('#isActive').val('');
                $('#startDate').val('');
                $('#endDate').val('');
                $('#minAmount').val('');
                $('#maxAmount').val('');
                
                // نمایش پیام موفقیت
                if (typeof window.MedicalUI !== 'undefined' && window.MedicalUI.showSuccess) {
                    window.MedicalUI.showSuccess('فیلترها پاک شدند');
                } else {
                    alert('فیلترها پاک شدند');
                }
                
                // بروزرسانی جدول
                refreshData();
            } catch (error) {
                console.error('خطا در پاک کردن فیلترها:', error);
                alert('خطا در پاک کردن فیلترها');
            }
        }

        // Ajax Loading with Debounce and Abort
        (function () {
            const $form = $('#filterForm');
            const $host = $('#tableHost');
            const $skel = $('#tableSkeleton');

            let currentXhr = null;
            let debounceTimer = null;

            function params() {
                const data = $form.serializeArray();
                const obj = {};
                data.forEach(x => obj[x.name] = x.value);
                if (!obj.page) obj.page = 1;
                return obj;
            }

            function setBusy(busy) {
                $host.attr('aria-busy', busy ? 'true' : 'false');
                $skel.toggleClass('d-none', !busy);
            }

            function pushUrl(state) {
                // حذف پارامترهای خالی
                const cleanState = {};
                for (const [key, value] of Object.entries(state)) {
                    if (value !== '' && value !== null && value !== undefined) {
                        cleanState[key] = value;
                    }
                }
                
                const qs = new URLSearchParams(cleanState).toString();
                const url = qs ? `${location.pathname}?${qs}` : location.pathname;
                history.replaceState(cleanState, '', url);
            }

            function loadTable(state) {
                if (currentXhr && currentXhr.abort) currentXhr.abort();
                setBusy(true);
                pushUrl(state);
                
                // Add cache busting parameter
                if (!state._t) {
                    state._t = new Date().getTime();
                }

                currentXhr = $.ajax({
                    url: '@Url.Action("GetTariffsTable", "SupplementaryTariff", new { area = "Admin" })',
                    type: 'GET',
                    data: state,
                    cache: false,
                    headers: {
                        'Cache-Control': 'no-cache, no-store, must-revalidate, max-age=0',
                        'Pragma': 'no-cache',
                        'Expires': '0',
                        'Last-Modified': '0',
                        'ETag': '',
                        'If-Modified-Since': '0',
                        'If-None-Match': ''
                    },
                    beforeSend: function(xhr) {
                        // 🔧 CRITICAL: کاملاً غیرفعال کردن کش برای محیط درمانی realtime
                        xhr.setRequestHeader('Cache-Control', 'no-cache, no-store, must-revalidate, max-age=0');
                        xhr.setRequestHeader('Pragma', 'no-cache');
                        xhr.setRequestHeader('Expires', '0');
                        xhr.setRequestHeader('Last-Modified', '0');
                        xhr.setRequestHeader('ETag', '');
                        xhr.setRequestHeader('If-Modified-Since', '0');
                        xhr.setRequestHeader('If-None-Match', '');
                    }
                }).done(html => {
                    $host.html(html);
                    wirePagerAndSort();
                }).fail(() => {
                    $host.html('<div class="alert alert-danger">خطا در بارگذاری لیست</div>');
                }).always(() => {
                    setBusy(false);
                    currentXhr = null;
                });
            }

            function reloadWithDebounce(extra = {}) {
                clearTimeout(debounceTimer);
                debounceTimer = setTimeout(() => {
                    const state = Object.assign({}, params(), extra);
                    state.page = extra.page || 1;
                    loadTable(state);
                }, 300);
            }

            // تغییر فیلترها
            $form.on('input change', 'input, select', function () {
                reloadWithDebounce();
            });

            // هندل بارگذاری اولیه با state از URL
            $(function () {
                const url = new URL(location.href);
                const stateFromUrl = Object.fromEntries(url.searchParams.entries());
                loadTable(Object.keys(stateFromUrl).length ? stateFromUrl : params());
            });

            // هندل صفحه‌بندی و سورت
            function wirePagerAndSort() {
                $host.find('[data-page]').on('click', function (e) {
                    e.preventDefault();
                    const page = $(this).data('page');
                    reloadWithDebounce({ page });
                });

                $host.find('th[data-sort]').css('cursor', 'pointer').on('click', function () {
                    const $th = $(this);
                    const sort = $th.data('sort');
                    const dir = ($th.data('dir') === 'asc') ? 'desc' : 'asc';
                    $th.data('dir', dir);
                    reloadWithDebounce({ sort, dir, page: 1 });
                });
            }

            // Export functions globally
            window.refreshData = function() {
                loadTable(params());
            };

            window.clearAllFilters = function() {
                try {
                    $('#searchTerm').val('');
                    $('#serviceId').val('');
                    $('#insurancePlanId').val('');
                    $('#departmentId').val('');
                    $('#isActive').val('');
                    $('#startDate').val('');
                    $('#endDate').val('');
                    $('#minAmount').val('');
                    $('#maxAmount').val('');
                    
                    if (typeof window.MedicalUI !== 'undefined' && window.MedicalUI.showSuccess) {
                        window.MedicalUI.showSuccess('فیلترها پاک شدند');
                    } else {
                        alert('فیلترها پاک شدند');
                    }
                    
                    // پاک کردن URL و بارگذاری مجدد
                    const cleanState = { page: 1 };
                    loadTable(cleanState);
                } catch (error) {
                    console.error('خطا در پاک کردن فیلترها:', error);
                    alert('خطا در پاک کردن فیلترها');
                }
            };
        })();
    </script>
}