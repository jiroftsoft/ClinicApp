@model ClinicApp.ViewModels.Insurance.Supplementary.SupplementaryTariffCreateEditViewModel
@{
    ViewBag.Title = "ویرایش تعرفه بیمه تکمیلی";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link href="~/Content/css/medical-environment-styles.css" rel="stylesheet" />
    <style>
        .edit-card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        .edit-card .card-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 15px 15px 0 0;
            padding: 25px;
        }

        .edit-card .card-body {
            padding: 30px;
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-group label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 8px;
        }

        .form-control {
            border-radius: 10px;
            border: 2px solid #e9ecef;
            padding: 12px 15px;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }

        .form-control.is-invalid {
            border-color: #dc3545;
        }

        .form-control.is-valid {
            border-color: #28a745;
        }

        .invalid-feedback {
            display: block;
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 5px;
        }

        .btn-medical {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 25px;
            color: white;
            padding: 12px 30px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .btn-medical:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            color: white;
        }

        .btn-medical-secondary {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            border: none;
            border-radius: 25px;
            color: white;
            padding: 12px 30px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .btn-medical-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            color: white;
        }

        .back-button {
            background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
            border: none;
            border-radius: 25px;
            color: white;
            padding: 12px 30px;
            font-weight: 500;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
        }

        .back-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            color: white;
            text-decoration: none;
        }

        .calculation-preview {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 20px;
        }

        .calculation-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid rgba(255,255,255,0.2);
        }

        .calculation-item:last-child {
            border-bottom: none;
            font-weight: bold;
            font-size: 1.1rem;
        }

        .status-badge {
            padding: 8px 20px;
            border-radius: 25px;
            font-weight: 500;
            font-size: 0.9rem;
        }

        .badge-success {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
        }

        .badge-danger {
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
            color: white;
        }

        .badge-warning {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            color: white;
        }

        .badge-secondary {
            background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
            color: white;
        }

        .section-title {
            color: #495057;
            font-weight: 600;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #e9ecef;
        }

        .currency-format {
            font-family: 'Courier New', monospace;
            font-weight: bold;
        }

        .alert-medical {
            border-radius: 15px;
            border: none;
            padding: 20px;
            margin-bottom: 20px;
        }

        .alert-medical-info {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .alert-medical-warning {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            color: white;
        }
    </style>
}

<div class="container-fluid">
    <!-- Header Section -->
    <div class="row">
        <div class="col-12">
            <div class="edit-card">
                <div class="card-header">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <h2 class="mb-0">
                                <i class="fas fa-edit me-2"></i>
                                ویرایش تعرفه بیمه تکمیلی
                            </h2>
                            <p class="mb-0 mt-2 opacity-75">
                                ویرایش اطلاعات تعرفه بیمه تکمیلی
                            </p>
                        </div>
                        <div class="col-md-4 text-end">
                            <span class="status-badge @Model.StatusCssClass">
                                @Model.StatusText
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Form -->
    <div class="row">
        <div class="col-12">
            <div class="edit-card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-edit me-2"></i>
                        اطلاعات تعرفه
                    </h5>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Edit", "SupplementaryTariff", FormMethod.Post, new { @class = "form-horizontal", id = "editForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.InsuranceTariffId)
                        @Html.HiddenFor(m => m.ServiceId)
                        @Html.HiddenFor(m => m.DepartmentId)
                        @Html.HiddenFor(m => m.ServiceCategoryId)

                        <div class="row">
                            <!-- Service Information (Read-only) -->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>نام خدمت:</label>
                                    <input type="text" class="form-control" value="@Model.ServiceTitle" readonly>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>طرح بیمه:</label>
                                    <input type="text" class="form-control" value="@Model.InsurancePlanName" readonly>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Financial Information -->
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.TariffPrice, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.TariffPrice, new { @class = "form-control currency-input", @placeholder = "قیمت تعرفه" })
                                    @Html.ValidationMessageFor(m => m.TariffPrice, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.PatientShare, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.PatientShare, new { @class = "form-control currency-input", @placeholder = "سهم بیمار" })
                                    @Html.ValidationMessageFor(m => m.PatientShare, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.InsurerShare, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.InsurerShare, new { @class = "form-control currency-input", @placeholder = "سهم بیمه" })
                                    @Html.ValidationMessageFor(m => m.InsurerShare, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Supplementary Insurance Information -->
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.SupplementaryCoveragePercent, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.SupplementaryCoveragePercent, new { @class = "form-control percentage-input", @placeholder = "درصد پوشش تکمیلی" })
                                    @Html.ValidationMessageFor(m => m.SupplementaryCoveragePercent, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.SupplementaryMaxPayment, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.SupplementaryMaxPayment, new { @class = "form-control currency-input", @placeholder = "سقف پرداخت تکمیلی" })
                                    @Html.ValidationMessageFor(m => m.SupplementaryMaxPayment, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Priority, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.Priority, new { @class = "form-control", @placeholder = "اولویت" })
                                    @Html.ValidationMessageFor(m => m.Priority, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Date Information -->
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.StartDate, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control persian-datepicker", @placeholder = "تاریخ شروع اعتبار" })
                                    @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.EndDate, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control persian-datepicker", @placeholder = "تاریخ پایان اعتبار" })
                                    @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <div class="form-check mt-4">
                                        @Html.CheckBoxFor(m => m.IsActive, new { @class = "form-check-input" })
                                        @Html.LabelFor(m => m.IsActive, new { @class = "form-check-label" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Settings -->
                            <div class="col-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.SupplementarySettings, new { @class = "form-label" })
                                    @Html.TextAreaFor(m => m.SupplementarySettings, new { @class = "form-control", @rows = "4", @placeholder = "تنظیمات خاص (JSON)" })
                                    @Html.ValidationMessageFor(m => m.SupplementarySettings, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="row">
                            <div class="col-12 text-center">
                                <a href="@Url.Action("Details", new { id = Model.InsuranceTariffId })" class="back-button">
                                    <i class="fas fa-arrow-right me-2"></i>
                                    بازگشت
                                </a>
                                <button type="submit" class="btn-medical">
                                    <i class="fas fa-save me-2"></i>
                                    ذخیره تغییرات
                                </button>
                                <button type="button" class="btn-medical-secondary" onclick="resetForm()">
                                    <i class="fas fa-undo me-2"></i>
                                    بازنشانی
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Calculation Preview -->
    <div class="row">
        <div class="col-12">
            <div class="calculation-preview">
                <h5 class="mb-4">
                    <i class="fas fa-calculator me-2"></i>
                    پیش‌نمایش محاسبات
                </h5>
                <div class="calculation-item">
                    <span>مبلغ کل خدمت:</span>
                    <span class="currency-format" id="previewServiceAmount">@(Model.TariffPrice?.ToString("N0") ?? "0") تومان</span>
                </div>
                <div class="calculation-item">
                    <span>پوشش بیمه اصلی:</span>
                    <span class="currency-format" id="previewPrimaryCoverage">@(Model.InsurerShare?.ToString("N0") ?? "0") تومان</span>
                </div>
                <div class="calculation-item">
                    <span>مبلغ باقی‌مانده:</span>
                    <span class="currency-format" id="previewRemainingAmount">@Model.RemainingAmountAfterPrimary.ToString("N0") تومان</span>
                </div>
                <div class="calculation-item">
                    <span>درصد پوشش تکمیلی:</span>
                    <span id="previewSupplementaryPercent">@(Model.SupplementaryCoveragePercent?.ToString("F2") ?? "0")%</span>
                </div>
                <div class="calculation-item">
                    <span>سهم نهایی بیمار:</span>
                    <span class="currency-format" id="previewFinalPatientShare">@(Model.PatientShare?.ToString("N0") ?? "0") تومان</span>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/persian-datepicker.min.js"></script>
    <script>
        $(document).ready(function() {
            // Initialize Persian date picker
            $('.persian-datepicker').persianDatepicker({
                format: 'YYYY/MM/DD',
                autoClose: true,
                initialValue: false,
                observer: true,
                altField: '.observer-example-alt'
            });

            // Initialize currency formatting
            $('.currency-input').on('input', function() {
                let value = $(this).val().replace(/[^\d]/g, '');
                if (value) {
                    $(this).val(parseInt(value).toLocaleString());
                }
            });

            // Initialize percentage formatting
            $('.percentage-input').on('input', function() {
                let value = $(this).val().replace(/[^\d.]/g, '');
                if (value) {
                    $(this).val(value);
                }
            });

            // Real-time calculation preview
            $('.currency-input, .percentage-input').on('input', function() {
                updateCalculationPreview();
            });

            // Form validation
            $('#editForm').on('submit', function(e) {
                if (!$(this).valid()) {
                    e.preventDefault();
                    return false;
                }
            });
        });

        function updateCalculationPreview() {
            let serviceAmount = parseFloat($('#TariffPrice').val().replace(/,/g, '')) || 0;
            let primaryCoverage = parseFloat($('#InsurerShare').val().replace(/,/g, '')) || 0;
            let supplementaryPercent = parseFloat($('#SupplementaryCoveragePercent').val()) || 0;
            
            let remainingAmount = Math.max(0, serviceAmount - primaryCoverage);
            let supplementaryCoverage = (remainingAmount * supplementaryPercent) / 100;
            let finalPatientShare = Math.max(0, remainingAmount - supplementaryCoverage);
            
            $('#previewServiceAmount').text(serviceAmount.toLocaleString() + ' تومان');
            $('#previewPrimaryCoverage').text(primaryCoverage.toLocaleString() + ' تومان');
            $('#previewRemainingAmount').text(remainingAmount.toLocaleString() + ' تومان');
            $('#previewSupplementaryPercent').text(supplementaryPercent.toFixed(2) + '%');
            $('#previewFinalPatientShare').text(finalPatientShare.toLocaleString() + ' تومان');
        }

        function resetForm() {
            if (confirm('آیا مطمئن هستید که می‌خواهید فرم را بازنشانی کنید؟')) {
                $('#editForm')[0].reset();
                updateCalculationPreview();
            }
        }
    </script>
}
