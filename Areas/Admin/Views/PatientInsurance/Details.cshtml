@model ClinicApp.ViewModels.Insurance.PatientInsurance.PatientInsuranceDetailsViewModel
@{
    ViewBag.Title = "ÿ¨ÿ≤ÿ¶€åÿßÿ™ ÿ®€åŸÖŸá ÿ®€åŸÖÿßÿ±";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link href="~/Content/css/patient-insurance.css" rel="stylesheet" />
    <style>
        /* üè• Medical Environment Details Page - Enhanced Standards */
        .patient-insurance-details-card {
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
            border: 2px solid #e3f2fd;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            margin-bottom: 2rem;
        }
        
        .detail-row {
            border-bottom: 1px solid #e9ecef;
            padding: 1.25rem 0;
            transition: all 0.3s ease;
        }
        
        .detail-row:hover {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 1.25rem 1rem;
        }
        
        .detail-row:last-child {
            border-bottom: none;
        }
        
        .detail-label {
            font-weight: 600;
            color: #1976d2;
            margin-bottom: 0.5rem;
            font-size: 1rem;
        }
        
        .detail-value {
            color: #424242;
            font-size: 1.1rem;
            font-weight: 500;
        }
        
        .patient-header {
            background: linear-gradient(135deg, #1976d2 0%, #1565c0 100%);
            color: white;
            padding: 2.5rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            text-align: center;
            box-shadow: 0 4px 12px rgba(25, 118, 210, 0.3);
        }
        
        .patient-name {
            font-size: 2.2rem;
            font-weight: 700;
            margin-bottom: 0.75rem;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }
        
        .patient-code {
            font-family: 'Courier New', monospace;
            background-color: rgba(255, 255, 255, 0.2);
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-size: 1.2rem;
            display: inline-block;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        .insurance-section {
            background: linear-gradient(135deg, #e8f5e8 0%, #f1f8e9 100%);
            border: 2px solid #c3e6c3;
            padding: 2rem;
            border-radius: 12px;
            margin: 1.5rem 0;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }
        
        .plan-name {
            font-size: 1.6rem;
            font-weight: 700;
            color: #2e7d32;
            margin-bottom: 0.75rem;
        }
        
        .provider-badge {
            background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
            color: #1976d2;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-size: 1.1rem;
            font-weight: 600;
            display: inline-block;
            border: 1px solid #90caf9;
        }
        
        .policy-section {
            background: linear-gradient(135deg, #fff3cd 0%, #fff8e1 100%);
            border: 2px solid #ffeaa7;
            padding: 2rem;
            border-radius: 12px;
            margin: 1.5rem 0;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }
        
        .policy-number {
            font-family: 'Courier New', monospace;
            font-size: 1.5rem;
            font-weight: 700;
            color: #856404;
            text-align: center;
            background-color: rgba(255, 255, 255, 0.7);
            padding: 1rem;
            border-radius: 8px;
            border: 1px solid #ffc107;
        }
        
        .validity-section {
            background: linear-gradient(135deg, #d1ecf1 0%, #e0f2f1 100%);
            border: 2px solid #bee5eb;
            padding: 2rem;
            border-radius: 12px;
            margin: 1.5rem 0;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }
        
        .validity-date {
            font-size: 1.3rem;
            font-weight: 700;
            color: #0c5460;
            text-align: center;
            background-color: rgba(255, 255, 255, 0.7);
            padding: 1rem;
            border-radius: 8px;
            border: 1px solid #17a2b8;
        }
        
        .coverage-section {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: 2px solid #dee2e6;
            padding: 2rem;
            border-radius: 12px;
            margin: 1.5rem 0;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }
        
        .coverage-percent {
            font-size: 2.5rem;
            font-weight: 700;
            color: #28a745;
            text-align: center;
            text-shadow: 0 2px 4px rgba(40, 167, 69, 0.3);
        }
        
        .deductible-amount {
            font-size: 1.8rem;
            font-weight: 700;
            color: #dc3545;
            text-align: center;
            text-shadow: 0 2px 4px rgba(220, 53, 69, 0.3);
        }
        
        .status-badge {
            font-size: 1.1rem;
            padding: 1rem 2rem;
            border-radius: 25px;
            font-weight: 600;
        }
        
        .primary-badge {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            font-size: 1.1rem;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
        }
        
        .supplementary-badge {
            background: linear-gradient(135deg, #17a2b8 0%, #6f42c1 100%);
            color: white;
            font-size: 1.1rem;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            box-shadow: 0 4px 12px rgba(23, 162, 184, 0.3);
        }
        
        .btn-action {
            margin: 0.25rem;
            font-weight: 600;
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            transition: all 0.3s ease;
        }
        
        .btn-action:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }
        
        .info-icon {
            color: #1976d2;
            margin-left: 0.5rem;
        }
        
        .section-title {
            color: #1976d2;
            font-weight: 700;
            font-size: 1.3rem;
            margin-bottom: 1.5rem;
            padding-bottom: 0.75rem;
            border-bottom: 3px solid #1976d2;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        /* üè• Medical Environment Animations */
        .pulse {
            animation: pulse 0.6s ease-in-out;
        }
        
        @@keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
        
        .shadow-sm {
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
        }
        
        .policy-number {
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .policy-number:hover {
            transform: scale(1.02);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }
        
        .badge {
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .badge:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        /* üè• Medical Environment Responsive Design */
        @@media (max-width: 768px) {
            .patient-insurance-details-card {
                padding: 1.5rem;
            }
            
            .patient-header {
                padding: 2rem;
            }
            
            .patient-name {
                font-size: 1.8rem;
            }
            
            .insurance-section,
            .policy-section,
            .validity-section,
            .coverage-section {
                padding: 1.5rem;
            }
            
            .coverage-percent {
                font-size: 2rem;
            }
            
            .deductible-amount {
                font-size: 1.5rem;
            }
            
            .section-title {
                font-size: 1.1rem;
            }
        }
    </style>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>ÿ¨ÿ≤ÿ¶€åÿßÿ™ ÿ®€åŸÖŸá ÿ®€åŸÖÿßÿ±</h2>
                <div>
                    <button type="button" class="btn btn-success btn-action" id="validateInsuranceBtn" onclick="validateCurrentInsurance()">
                        <i class="fas fa-check-circle"></i> ÿßÿπÿ™ÿ®ÿßÿ±ÿ≥ŸÜÿ¨€å ÿ®€åŸÖŸá
                    </button>
                    <a href="@Url.Action("Edit", "PatientInsurance", new { id = Model.PatientInsuranceId })" class="btn btn-warning btn-action">
                        <i class="fas fa-edit"></i> Ÿà€åÿ±ÿß€åÿ¥
                    </a>
                    <a href="@Url.Action("Index", "PatientInsurance")" class="btn btn-secondary btn-action">
                        <i class="fas fa-arrow-right"></i> ÿ®ÿßÿ≤⁄Øÿ¥ÿ™ ÿ®Ÿá ŸÑ€åÿ≥ÿ™
                    </a>
                </div>
            </div>

            <div class="row justify-content-center">
                <div class="col-md-10">
                    <!-- Patient Header -->
                    <div class="patient-header">
                        <div class="patient-name">@Model.PatientName</div>
                        <div class="patient-code">@Model.PatientCode</div>
                        <div class="mt-3">
                            @if (Model.IsPrimary)
                            {
                                <span class="primary-badge">
                                    <i class="fas fa-star"></i> ÿ®€åŸÖŸá ÿßÿµŸÑ€å
                                </span>
                            }
                            else
                            {
                                <span class="supplementary-badge">
                                    <i class="fas fa-plus"></i> ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å
                                </span>
                            }
                        </div>
                    </div>

                    <div class="patient-insurance-details-card">
                        <!-- üè• Information Status Alert -->
                        @if (string.IsNullOrEmpty(Model.InsurancePlanName) || string.IsNullOrEmpty(Model.InsuranceProviderName) || 
                             string.IsNullOrEmpty(Model.PolicyNumber) || Model.CoveragePercent == 0)
                        {
                            <div class="alert alert-warning" role="alert">
                                <i class="fas fa-exclamation-triangle"></i>
                                <strong>ÿ™Ÿàÿ¨Ÿá:</strong> ÿ®ÿ±ÿÆ€å ÿßÿ≤ ÿßÿ∑ŸÑÿßÿπÿßÿ™ ÿ®€åŸÖŸá ŸÜÿßŸÇÿµ ÿßÿ≥ÿ™. ŸÑÿ∑ŸÅÿßŸã ÿ®ÿ±ÿß€å ÿ™⁄©ŸÖ€åŸÑ ÿßÿ∑ŸÑÿßÿπÿßÿ™ ÿ®ÿß ÿ®ÿÆÿ¥ ÿ®€åŸÖŸá ÿ™ŸÖÿßÿ≥ ÿ®⁄Ø€åÿ±€åÿØ.
                            </div>
                        }

                        <!-- üè• Basic Information Section -->
                        <div class="section-title">
                            <i class="fas fa-user-md"></i>
                            ÿßÿ∑ŸÑÿßÿπÿßÿ™ Ÿæÿß€åŸá ÿ®€åŸÖÿßÿ±
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="detail-row">
                                    <div class="detail-label">
                                        <i class="fas fa-user"></i> ŸÜÿßŸÖ ⁄©ÿßŸÖŸÑ ÿ®€åŸÖÿßÿ±
                                    </div>
                                    <div class="detail-value">
                                        <strong>@Model.PatientName</strong>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="detail-row">
                                    <div class="detail-label">
                                        <i class="fas fa-id-card"></i> ⁄©ÿØ ÿ®€åŸÖÿßÿ±
                                    </div>
                                    <div class="detail-value">
                                        <span class="patient-code">@Model.PatientCode</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="detail-row">
                                    <div class="detail-label">
                                        <i class="fas fa-id-badge"></i> ⁄©ÿØ ŸÖŸÑ€å
                                    </div>
                                    <div class="detail-value">
                                        @if (!string.IsNullOrEmpty(Model.PatientNationalCode))
                                        {
                                            <span class="text-muted">@Model.PatientNationalCode</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">ÿ´ÿ®ÿ™ ŸÜÿ¥ÿØŸá</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="detail-row">
                            <div class="detail-label">
                                <i class="fas fa-shield-alt"></i> ŸÜŸàÿπ ÿ®€åŸÖŸá
                            </div>
                            <div class="detail-value">
                                @if (Model.IsPrimary)
                                {
                                    <span class="primary-badge">
                                        <i class="fas fa-star"></i> ÿ®€åŸÖŸá ÿßÿµŸÑ€å
                                    </span>
                                }
                                else
                                {
                                    <span class="supplementary-badge">
                                        <i class="fas fa-plus"></i> ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å
                                    </span>
                                }
                            </div>
                        </div>

                        <!-- üè• Insurance Information Section -->
                        <div class="section-title">
                            <i class="fas fa-shield-alt"></i>
                            ÿßÿ∑ŸÑÿßÿπÿßÿ™ ÿ®€åŸÖŸá Ÿà ÿ∑ÿ±ÿ≠
                        </div>

                        <div class="insurance-section">
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="plan-name">
                                        <i class="fas fa-file-medical"></i> 
                                        @if (!string.IsNullOrEmpty(Model.InsurancePlanName))
                                        {
                                            @Model.InsurancePlanName
                                        }
                                        else
                                        {
                                            <span class="text-muted">ŸÜÿßŸÖ ÿ∑ÿ±ÿ≠ ÿ®€åŸÖŸá ÿ´ÿ®ÿ™ ŸÜÿ¥ÿØŸá</span>
                                        }
                                    </div>
                                    <div class="provider-badge">
                                        <i class="fas fa-hospital"></i> 
                                        @if (!string.IsNullOrEmpty(Model.InsuranceProviderName))
                                        {
                                            @Model.InsuranceProviderName
                                        }
                                        else
                                        {
                                            <span class="text-muted">ÿßÿ±ÿßÿ¶Ÿá‚ÄåÿØŸáŸÜÿØŸá ÿ®€åŸÖŸá ÿ´ÿ®ÿ™ ŸÜÿ¥ÿØŸá</span>
                                        }
                                    </div>
                                </div>
                                <div class="col-md-4 text-right">
                                    <div class="detail-label">ÿ¥ŸÜÿßÿ≥Ÿá ÿ∑ÿ±ÿ≠ ÿ®€åŸÖŸá</div>
                                    <div class="detail-value">
                                        <strong>#@Model.InsurancePlanId</strong>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- üè• Policy Information Section -->
                        <div class="section-title">
                            <i class="fas fa-file-contract"></i>
                            ÿßÿ∑ŸÑÿßÿπÿßÿ™ ÿ®€åŸÖŸá‚ÄåŸÜÿßŸÖŸá
                        </div>

                        <div class="policy-section">
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="policy-number">
                                        @if (!string.IsNullOrEmpty(Model.PolicyNumber))
                                        {
                                            @Model.PolicyNumber
                                        }
                                        else
                                        {
                                            <span class="text-muted">ÿ¥ŸÖÿßÿ±Ÿá ÿ®€åŸÖŸá‚ÄåŸÜÿßŸÖŸá ÿ´ÿ®ÿ™ ŸÜÿ¥ÿØŸá</span>
                                        }
                                    </div>
                                    <div class="text-center text-muted mt-2">
                                        <strong>ÿ¥ŸÖÿßÿ±Ÿá ÿ®€åŸÖŸá‚ÄåŸÜÿßŸÖŸá</strong>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="detail-label">ÿ¥ŸÜÿßÿ≥Ÿá ÿ®€åŸÖŸá ÿ®€åŸÖÿßÿ±</div>
                                    <div class="detail-value">
                                        <strong>#@Model.PatientInsuranceId</strong>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- üè• Coverage Information Section -->
                        <div class="section-title">
                            <i class="fas fa-chart-pie"></i>
                            ÿßÿ∑ŸÑÿßÿπÿßÿ™ ŸæŸàÿ¥ÿ¥ Ÿà ŸÅÿ±ÿßŸÜÿ¥€åÿ≤
                        </div>

                        <div class="coverage-section">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="coverage-percent">
                                        @if (Model.CoveragePercent > 0)
                                        {
                                            @Model.CoveragePercent.ToString("N1")
                                        }
                                        else
                                        {
                                            <span class="text-muted">ÿ™ÿπÿ±€åŸÅ ŸÜÿ¥ÿØŸá</span>
                                        }
                                    </div>
                                    <div class="text-center text-muted">
                                        <strong>ÿØÿ±ÿµÿØ ŸæŸàÿ¥ÿ¥ ÿ®€åŸÖŸá</strong>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="deductible-amount">
                                        @if (Model.Deductible > 0)
                                        {
                                            Model.Deductible.ToString("N0");
                                        }
                                        else
                                        {
                                            <span class="text-muted">ÿ™ÿπÿ±€åŸÅ ŸÜÿ¥ÿØŸá</span>
                                        }
                                    </div>
                                    <div class="text-center text-muted">
                                        <strong>ŸÖÿ®ŸÑÿ∫ ŸÅÿ±ÿßŸÜÿ¥€åÿ≤</strong>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="detail-label">ŸÜŸàÿπ ŸæŸàÿ¥ÿ¥</div>
                                    <div class="detail-value">
                                        @if (Model.CoveragePercent > 0)
                                        {
                                            if (Model.CoveragePercent >= 80)
                                            {
                                                <span class="badge badge-success">ŸæŸàÿ¥ÿ¥ ÿ®ÿßŸÑÿß</span>
                                            }
                                            else if (Model.CoveragePercent >= 50)
                                            {
                                                <span class="badge badge-warning">ŸæŸàÿ¥ÿ¥ ŸÖÿ™Ÿàÿ≥ÿ∑</span>
                                            }
                                            else
                                            {
                                                <span class="badge badge-danger">ŸæŸàÿ¥ÿ¥ Ÿæÿß€å€åŸÜ</span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="badge badge-secondary">ÿ™ÿπÿ±€åŸÅ ŸÜÿ¥ÿØŸá</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- üè• Validity Period Section -->
                        <div class="section-title">
                            <i class="fas fa-calendar-alt"></i>
                            ÿØŸàÿ±Ÿá ÿßÿπÿ™ÿ®ÿßÿ± ÿ®€åŸÖŸá
                        </div>

                        <div class="validity-section">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="validity-date">
                                        <i class="fas fa-calendar-check"></i> 
                                        @if (!string.IsNullOrEmpty(Model.StartDateShamsi))
                                        {
                                            @Model.StartDateShamsi
                                        }
                                        else
                                        {
                                            <span class="text-muted">ÿ™ÿπÿ±€åŸÅ ŸÜÿ¥ÿØŸá</span>
                                        }
                                    </div>
                                    <div class="text-center text-muted mt-2">
                                        <strong>ÿ™ÿßÿ±€åÿÆ ÿ¥ÿ±Ÿàÿπ ÿßÿπÿ™ÿ®ÿßÿ±</strong>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="validity-date">
                                        <i class="fas fa-calendar-times"></i> 
                                        @if (!string.IsNullOrEmpty(Model.EndDateShamsi))
                                        {
                                            @Model.EndDateShamsi
                                        }
                                        else
                                        {
                                            <span class="text-muted">ÿ™ÿπÿ±€åŸÅ ŸÜÿ¥ÿØŸá</span>
                                        }
                                    </div>
                                    <div class="text-center text-muted mt-2">
                                        <strong>ÿ™ÿßÿ±€åÿÆ Ÿæÿß€åÿßŸÜ ÿßÿπÿ™ÿ®ÿßÿ±</strong>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- üè• Status Section -->
                        <div class="section-title">
                            <i class="fas fa-toggle-on"></i>
                            Ÿàÿ∂ÿπ€åÿ™ Ÿà ŸÅÿπÿßŸÑ ÿ®ŸàÿØŸÜ
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="detail-row">
                                    <div class="detail-label">
                                        <i class="fas fa-power-off"></i> Ÿàÿ∂ÿπ€åÿ™ ÿ®€åŸÖŸá
                                    </div>
                                    <div class="detail-value">
                                        @if (Model.IsActive)
                                        {
                                            <span class="badge badge-success status-badge">
                                                <i class="fas fa-check-circle"></i> ŸÅÿπÿßŸÑ
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-danger status-badge">
                                                <i class="fas fa-times-circle"></i> ÿ∫€åÿ±ŸÅÿπÿßŸÑ
                                            </span>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="detail-row">
                                    <div class="detail-label">
                                        <i class="fas fa-clock"></i> Ÿàÿ∂ÿπ€åÿ™ ÿßÿπÿ™ÿ®ÿßÿ±
                                    </div>
                                    <div class="detail-value">
                                        @{
                                            var now = DateTime.Now;
                                            var isValid = Model.StartDate <= now && (!Model.EndDate.HasValue || Model.EndDate.Value >= now);
                                        }
                                        @if (isValid)
                                        {
                                            <span class="badge badge-success">
                                                <i class="fas fa-check"></i> ŸÖÿπÿ™ÿ®ÿ±
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-warning">
                                                <i class="fas fa-exclamation-triangle"></i> ŸÖŸÜŸÇÿ∂€å
                                            </span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <hr class="my-4">

                        <!-- üè• Tracking Information Section -->
                        <div class="section-title">
                            <i class="fas fa-history"></i>
                            ÿßÿ∑ŸÑÿßÿπÿßÿ™ ÿ±ÿØ€åÿßÿ®€å Ÿà Audit Trail
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="detail-row">
                                    <div class="detail-label">
                                        <i class="fas fa-calendar-plus"></i> ÿ™ÿßÿ±€åÿÆ ÿß€åÿ¨ÿßÿØ
                                    </div>
                                    <div class="detail-value">
                                        <strong>@Model.CreatedAtShamsi</strong>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="detail-row">
                                    <div class="detail-label">
                                        <i class="fas fa-user-plus"></i> ÿß€åÿ¨ÿßÿØ⁄©ŸÜŸÜÿØŸá
                                    </div>
                                    <div class="detail-value">
                                        @if (!string.IsNullOrEmpty(Model.CreatedByUserName))
                                        {
                                            <span class="badge badge-info">@Model.CreatedByUserName</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">ŸÜÿßŸÖÿ¥ÿÆÿµ</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        @if (Model.UpdatedAt.HasValue)
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="detail-row">
                                        <div class="detail-label">
                                            <i class="fas fa-calendar-edit"></i> ÿ¢ÿÆÿ±€åŸÜ ÿ®Ÿá‚Äåÿ±Ÿàÿ≤ÿ±ÿ≥ÿßŸÜ€å
                                        </div>
                                        <div class="detail-value">
                                            <strong>@Model.UpdatedAtShamsi</strong>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="detail-row">
                                        <div class="detail-label">
                                            <i class="fas fa-user-edit"></i> ÿ¢ÿÆÿ±€åŸÜ ÿ®Ÿá‚Äåÿ±Ÿàÿ≤ÿ±ÿ≥ÿßŸÜŸÜÿØŸá
                                        </div>
                                        <div class="detail-value">
                                            @if (!string.IsNullOrEmpty(Model.UpdatedByUserName))
                                            {
                                                <span class="badge badge-warning">@Model.UpdatedByUserName</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">ŸÜÿßŸÖÿ¥ÿÆÿµ</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="detail-row">
                                        <div class="detail-label">
                                            <i class="fas fa-info-circle"></i> Ÿàÿ∂ÿπ€åÿ™ ÿ±⁄©Ÿàÿ±ÿØ
                                        </div>
                                        <div class="detail-value">
                                            <span class="badge badge-success">ÿ®ÿØŸàŸÜ ÿ™ÿ∫€å€åÿ± ÿßÿ≤ ÿ≤ŸÖÿßŸÜ ÿß€åÿ¨ÿßÿØ</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // üè• Medical Environment Details Page - Enhanced User Experience
        (function () {
            'use strict';

            function ensureJQuery(callback) {
                if (typeof $ !== 'undefined') {
                    callback();
                } else {
                    setTimeout(function () {
                        ensureJQuery(callback);
                    }, 100);
                }
            }

            function initializeMedicalDetailsPage() {
                ensureJQuery(function () {
                    $(document).ready(function() {
                        console.log('üè• Medical Environment: Initializing Patient Insurance Details Page');
                        
                        // Add hover effects to detail rows
                        $('.detail-row').hover(
                            function() {
                                $(this).addClass('shadow-sm');
                            },
                            function() {
                                $(this).removeClass('shadow-sm');
                            }
                        );

                        // Add click effects to badges
                        $('.badge').on('click', function() {
                            $(this).addClass('pulse');
                            setTimeout(() => {
                                $(this).removeClass('pulse');
                            }, 600);
                        });

                        // Add copy functionality to policy number
                        $('.policy-number').on('click', function() {
                            var policyNumber = $(this).text().trim();
                            if (navigator.clipboard) {
                                navigator.clipboard.writeText(policyNumber).then(function() {
                                    if (typeof toastr !== 'undefined') {
                                        toastr.success('ÿ¥ŸÖÿßÿ±Ÿá ÿ®€åŸÖŸá‚ÄåŸÜÿßŸÖŸá ⁄©Ÿæ€å ÿ¥ÿØ', 'ŸÖŸàŸÅŸÇ');
                                    }
                                });
                            }
                        });

                        // Add tooltip for policy number
                        $('.policy-number').attr('title', '⁄©ŸÑ€å⁄© ⁄©ŸÜ€åÿØ ÿ™ÿß ⁄©Ÿæ€å ÿ¥ŸàÿØ');

                        console.log('üè• Medical Environment: Details page initialized successfully');
                    });
                });
            }

            initializeMedicalDetailsPage();
        })();
        
        // ÿ™ÿßÿ®ÿπ ÿßÿπÿ™ÿ®ÿßÿ±ÿ≥ŸÜÿ¨€å ÿ®€åŸÖŸá ŸÅÿπŸÑ€å
        function validateCurrentInsurance() {
            var validateBtn = $('#validateInsuranceBtn');
            var originalText = validateBtn.html();
            var patientId = @Model.PatientId;
            
            // ŸÜŸÖÿß€åÿ¥ loading
            validateBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> ÿØÿ± ÿ≠ÿßŸÑ ÿßÿπÿ™ÿ®ÿßÿ±ÿ≥ŸÜÿ¨€å...');
            
            $.ajax({
                url: '@Url.Action("ValidatePatientInsurance", "PatientInsurance")',
                type: 'POST',
                data: {
                    patientId: patientId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        showValidationResult(response.data);
                    } else {
                        showErrorMessage('ÿÆÿ∑ÿß ÿØÿ± ÿßÿπÿ™ÿ®ÿßÿ±ÿ≥ŸÜÿ¨€å: ' + response.message);
                    }
                },
                error: function(xhr, status, error) {
                    showErrorMessage('ÿÆÿ∑ÿß ÿØÿ± ÿßÿ±ÿ™ÿ®ÿßÿ∑ ÿ®ÿß ÿ≥ÿ±Ÿàÿ±: ' + error);
                },
                complete: function() {
                    validateBtn.prop('disabled', false).html(originalText);
                }
            });
        }
        
        // ŸÜŸÖÿß€åÿ¥ ŸÜÿ™€åÿ¨Ÿá ÿßÿπÿ™ÿ®ÿßÿ±ÿ≥ŸÜÿ¨€å
        function showValidationResult(validationResult) {
            var resultHtml = '<div class="alert alert-info mt-3">';
            resultHtml += '<h5><i class="fas fa-info-circle"></i> ŸÜÿ™€åÿ¨Ÿá ÿßÿπÿ™ÿ®ÿßÿ±ÿ≥ŸÜÿ¨€å ÿ®€åŸÖŸá</h5>';
            
            if (validationResult.isValid) {
                resultHtml += '<div class="alert alert-success">';
                resultHtml += '<i class="fas fa-check-circle"></i> <strong>ÿ®€åŸÖŸá ŸÖÿπÿ™ÿ®ÿ± ÿßÿ≥ÿ™</strong>';
                resultHtml += '</div>';
            } else {
                resultHtml += '<div class="alert alert-danger">';
                resultHtml += '<i class="fas fa-exclamation-triangle"></i> <strong>ÿ®€åŸÖŸá ŸÜÿßŸÖÿπÿ™ÿ®ÿ± ÿßÿ≥ÿ™</strong>';
                resultHtml += '</div>';
            }
            
            if (validationResult.issues && validationResult.issues.length > 0) {
                resultHtml += '<h6>ŸÖÿ≥ÿßÿ¶ŸÑ ÿ¥ŸÜÿßÿ≥ÿß€å€å ÿ¥ÿØŸá:</h6>';
                resultHtml += '<ul class="list-unstyled">';
                validationResult.issues.forEach(function(issue) {
                    var severityClass = issue.severity === 'Critical' ? 'text-danger' : 
                                       issue.severity === 'Warning' ? 'text-warning' : 'text-info';
                    resultHtml += '<li class="' + severityClass + '">';
                    resultHtml += '<i class="fas fa-' + (issue.severity === 'Critical' ? 'times-circle' : 
                                                       issue.severity === 'Warning' ? 'exclamation-triangle' : 'info-circle') + '"></i> ';
                    resultHtml += issue.message;
                    if (issue.recommendation) {
                        resultHtml += '<br><small class="text-muted">ÿ™Ÿàÿµ€åŸá: ' + issue.recommendation + '</small>';
                    }
                    resultHtml += '</li>';
                });
                resultHtml += '</ul>';
            }
            
            if (validationResult.recommendations && validationResult.recommendations.length > 0) {
                resultHtml += '<h6>ÿ™Ÿàÿµ€åŸá‚ÄåŸáÿß:</h6>';
                resultHtml += '<ul class="list-unstyled">';
                validationResult.recommendations.forEach(function(recommendation) {
                    resultHtml += '<li class="text-info"><i class="fas fa-lightbulb"></i> ' + recommendation + '</li>';
                });
                resultHtml += '</ul>';
            }
            
            resultHtml += '</div>';
            
            // ÿ≠ÿ∞ŸÅ ŸÜÿ™€åÿ¨Ÿá ŸÇÿ®ŸÑ€å
            $('.validation-result').remove();
            
            // ÿßÿ∂ÿßŸÅŸá ⁄©ÿ±ÿØŸÜ ŸÜÿ™€åÿ¨Ÿá ÿ¨ÿØ€åÿØ
            $('.patient-insurance-details-card').after(resultHtml);
        }
        
        // ŸÜŸÖÿß€åÿ¥ Ÿæ€åÿßŸÖ ÿÆÿ∑ÿß
        function showErrorMessage(message) {
            var alertHtml = '<div class="alert alert-danger alert-dismissible fade show mt-3 validation-result">';
            alertHtml += '<i class="fas fa-exclamation-circle"></i> ' + message;
            alertHtml += '<button type="button" class="btn-close" data-bs-dismiss="alert"></button>';
            alertHtml += '</div>';
            
            $('.validation-result').remove();
            $('.patient-insurance-details-card').after(alertHtml);
        }
    </script>
}
