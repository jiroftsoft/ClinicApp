@model ClinicApp.ViewModels.Insurance.PatientInsurance.PatientInsuranceCreateEditViewModel
@{
    ViewBag.Title = "ویرایش بیمه بیمار";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <style>
        .patient-insurance-form {
            background: #ffffff;
            border-radius: 10px;
            padding: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .form-section {
            background-color: #f8f9fa;
            padding: 1.5rem;
            border-radius: 0.5rem;
            margin-bottom: 2rem;
            border: 1px solid #dee2e6;
        }
        .section-title {
            color: #495057;
            font-weight: 600;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #007bff;
        }
        .form-group {
            margin-bottom: 1.5rem;
        }
        .form-label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 0.5rem;
        }
        .form-control {
            border: 1px solid #ced4da;
            border-radius: 0.375rem;
            padding: 0.75rem;
        }
        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }
        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
            font-weight: 600;
        }
        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }
        .btn-secondary {
            background-color: #6c757d;
            border-color: #6c757d;
            font-weight: 600;
        }
        .btn-secondary:hover {
            background-color: #545b62;
            border-color: #4e555b;
        }
        .patient-info {
            background-color: #e7f3ff;
            border: 1px solid #b3d9ff;
            padding: 1rem;
            border-radius: 0.5rem;
            margin-top: 1rem;
        }
        .patient-info .info-text {
            color: #0066cc;
            font-size: 0.9rem;
        }
        .insurance-info {
            background-color: #fff3cd;
            border: 1px solid #ffeaa7;
            padding: 1rem;
            border-radius: 0.5rem;
            margin-top: 1rem;
        }
        .insurance-info .info-text {
            color: #856404;
            font-size: 0.9rem;
        }
        .validity-info {
            background-color: #d1ecf1;
            border: 1px solid #bee5eb;
            padding: 1rem;
            border-radius: 0.5rem;
            margin-top: 1rem;
        }
        .validity-info .info-text {
            color: #0c5460;
            font-size: 0.9rem;
        }
        .type-info {
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
            padding: 1rem;
            border-radius: 0.5rem;
            margin-top: 1rem;
        }
        .type-info .info-text {
            color: #721c24;
            font-size: 0.9rem;
        }
        .edit-header {
            background-color: #e3f2fd;
            padding: 1rem;
            border-radius: 0.5rem;
            margin-bottom: 2rem;
            border: 1px solid #bbdefb;
        }
        .edit-header .insurance-info {
            color: #1976d2;
            font-weight: 600;
        }
    </style>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>ویرایش بیمه بیمار</h2>
                <a href="@Url.Action("Index", "PatientInsurance")" class="btn btn-secondary">
                    <i class="fas fa-arrow-right"></i> بازگشت به لیست
                </a>
            </div>

            <div class="row justify-content-center">
                <div class="col-md-10">
                    <div class="edit-header">
                        <div class="insurance-info">
                            <i class="fas fa-edit"></i>
                            در حال ویرایش بیمه بیمار: <strong>@Model.PatientName</strong> - <strong>@Model.InsurancePlanName</strong>
                        </div>
                    </div>

                    <div class="patient-insurance-form">
                        @using (Html.BeginForm("Edit", "PatientInsurance", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.PatientInsuranceId)

                            <!-- Patient Selection Section -->
                            <div class="form-section">
                                <h4 class="section-title">
                                    <i class="fas fa-user"></i> انتخاب بیمار
                                </h4>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.PatientId, new { @class = "form-label" })
                                    @Html.DropDownListFor(m => m.PatientId, Model.PatientSelectList, "انتخاب بیمار", new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(m => m.PatientId, "", new { @class = "text-danger" })
                                    <div class="patient-info">
                                        <div class="info-text">
                                            <i class="fas fa-info-circle"></i>
                                            بیمار مورد نظر را انتخاب کنید. تغییر بیمار ممکن است بر قرار ملاقات‌های موجود تأثیر بگذارد.
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Insurance Plan Selection Section -->
                            <div class="form-section">
                                <h4 class="section-title">
                                    <i class="fas fa-shield-alt"></i> انتخاب طرح بیمه
                                </h4>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.InsurancePlanId, new { @class = "form-label" })
                                    @Html.DropDownListFor(m => m.InsurancePlanId, Model.InsurancePlanSelectList, "انتخاب طرح بیمه", new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(m => m.InsurancePlanId, "", new { @class = "text-danger" })
                                    <div class="insurance-info">
                                        <div class="info-text">
                                            <i class="fas fa-info-circle"></i>
                                            طرح بیمه مورد نظر را انتخاب کنید. تغییر طرح بیمه ممکن است بر محاسبات پوشش تأثیر بگذارد.
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Policy Information Section -->
                            <div class="form-section">
                                <h4 class="section-title">
                                    <i class="fas fa-file-contract"></i> اطلاعات بیمه‌نامه
                                </h4>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PolicyNumber, new { @class = "form-label" })
                                            @Html.TextBoxFor(m => m.PolicyNumber, new { @class = "form-control", placeholder = "شماره بیمه‌نامه", required = "required" })
                                            @Html.ValidationMessageFor(m => m.PolicyNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.IsPrimary, new { @class = "form-label" })
                                            <div class="form-check">
                                                @Html.CheckBoxFor(m => m.IsPrimary, new { @class = "form-check-input" })
                                                @Html.LabelFor(m => m.IsPrimary, "بیمه اصلی", new { @class = "form-check-label" })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.IsPrimary, "", new { @class = "text-danger" })
                                            <div class="type-info">
                                                <div class="info-text">
                                                    <i class="fas fa-info-circle"></i>
                                                    اگر این بیمه اصلی بیمار است، تیک را بزنید. در غیر این صورت به عنوان بیمه تکمیلی در نظر گرفته می‌شود.
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Validity Period Section -->
                            <div class="form-section">
                                <h4 class="section-title">
                                    <i class="fas fa-calendar-alt"></i> دوره اعتبار بیمه
                                </h4>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.StartDate, new { @class = "form-label" })
                                            @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control persian-datepicker", placeholder = "تاریخ شروع اعتبار", required = "required" })
                                            @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EndDate, new { @class = "form-label" })
                                            @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control persian-datepicker", placeholder = "تاریخ پایان اعتبار", required = "required" })
                                            @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="validity-info">
                                    <div class="info-text">
                                        <i class="fas fa-info-circle"></i>
                                        دوره اعتبار بیمه بیمار. این بیمه فقط در این بازه زمانی قابل استفاده است.
                                    </div>
                                </div>
                            </div>

                            <!-- Status Section -->
                            <div class="form-section">
                                <h4 class="section-title">
                                    <i class="fas fa-toggle-on"></i> وضعیت بیمه
                                </h4>

                                <div class="form-group">
                                    <div class="form-check">
                                        @Html.CheckBoxFor(m => m.IsActive, new { @class = "form-check-input" })
                                        @Html.LabelFor(m => m.IsActive, "فعال", new { @class = "form-check-label" })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.IsActive, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <!-- Form Actions -->
                            <div class="text-center">
                                <button type="submit" class="btn btn-primary btn-lg me-3">
                                    <i class="fas fa-save"></i> ذخیره تغییرات
                                </button>
                                <a href="@Url.Action("Details", "PatientInsurance", new { id = Model.PatientInsuranceId })" class="btn btn-info btn-lg me-3">
                                    <i class="fas fa-eye"></i> مشاهده جزئیات
                                </a>
                                <a href="@Url.Action("Index", "PatientInsurance")" class="btn btn-secondary btn-lg">
                                    <i class="fas fa-times"></i> انصراف
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize Persian DatePicker
            $('.persian-datepicker').persianDatepicker({
                format: 'YYYY/MM/DD',
                altField: '.observer-example-alt',
                altFormat: 'YYYY/MM/DD',
                observer: true,
                timePicker: {
                    enabled: false
                }
            });

            // Form validation
            (function() {
                'use strict';
                window.addEventListener('load', function() {
                    var forms = document.getElementsByClassName('needs-validation');
                    var validation = Array.prototype.filter.call(forms, function(form) {
                        form.addEventListener('submit', function(event) {
                            if (form.checkValidity() === false) {
                                event.preventDefault();
                                event.stopPropagation();
                            }
                            form.classList.add('was-validated');
                        }, false);
                    });
                }, false);
            })();

            // Date validation
            $('.persian-datepicker').on('change', function() {
                var startDate = $('#StartDate').val();
                var endDate = $('#EndDate').val();
                
                if (startDate && endDate) {
                    var fromDate = new Date(startDate);
                    var toDate = new Date(endDate);
                    
                    if (fromDate >= toDate) {
                        $('#EndDate').addClass('is-invalid');
                    } else {
                        $('#EndDate').removeClass('is-invalid');
                    }
                }
            });

            // Patient selection change
            $('#PatientId').on('change', function() {
                var patientId = $(this).val();
                if (patientId) {
                    // You can add logic here to load patient's existing insurances
                    // and show warnings about overlapping coverage
                }
            });

            // Insurance plan selection change
            $('#InsurancePlanId').on('change', function() {
                var planId = $(this).val();
                if (planId) {
                    // You can add logic here to show plan details
                    // like coverage percentage, deductible, etc.
                }
            });
        });
    </script>
}
