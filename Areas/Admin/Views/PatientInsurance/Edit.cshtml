@model ClinicApp.ViewModels.Insurance.PatientInsurance.PatientInsuranceCreateEditViewModel
@{
    ViewBag.Title = "ویرایش بیمه بیمار";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link href="~/Content/css/patient-insurance.css" rel="stylesheet" />
    <link href="~/Content/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/select2/css/select2-bootstrap4.min.css" rel="stylesheet" />
}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>ویرایش بیمه بیمار</h2>
                <a href="@Url.Action("Index", "PatientInsurance")" class="btn btn-secondary">
                    <i class="fas fa-arrow-right"></i> بازگشت به لیست
                </a>
            </div>

            <div class="row justify-content-center">
                <div class="col-md-10">
                    <!-- 🏥 Medical Environment Edit Header -->
                    <div class="edit-header medical-edit-header">
                        <div class="insurance-info medical-insurance-info">
                            <div class="d-flex align-items-center">
                                <i class="fas fa-edit me-2"></i>
                                <div>
                                    <h5 class="mb-1">در حال ویرایش بیمه بیمار</h5>
                                    <div class="patient-details">
                                        <span class="patient-name-badge">@Model.PatientName</span>
                                        <i class="fas fa-arrow-left mx-2"></i>
                                        <span class="insurance-plan-badge">@Model.InsurancePlanName</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- 🏥 Medical Environment Form Container -->
                    <div class="patient-insurance-form medical-form-container">
                        @using (Html.BeginForm("Edit", "PatientInsurance", FormMethod.Post, new { 
                            @class = "needs-validation medical-form", 
                            novalidate = "novalidate",
                            id = "patientInsuranceEditForm",
                            data_medical_form = "patient-insurance-edit"
                        }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.PatientInsuranceId)

                            @Html.Partial("_PatientInsuranceForm", Model)

                            <!-- 🏥 Medical Environment Form Actions -->
                            <div class="form-actions medical-form-actions">
                                <div class="d-flex justify-content-center gap-3 flex-wrap">
                                    <button type="submit" class="btn btn-success btn-lg medical-save-btn">
                                        <i class="fas fa-save me-2"></i> ذخیره تغییرات
                                    </button>
                                    <a href="@Url.Action("Details", "PatientInsurance", new { id = Model.PatientInsuranceId })" class="btn btn-info btn-lg medical-details-btn">
                                        <i class="fas fa-eye me-2"></i> مشاهده جزئیات
                                    </a>
                                    <a href="@Url.Action("Index", "PatientInsurance")" class="btn btn-secondary btn-lg medical-cancel-btn">
                                        <i class="fas fa-times me-2"></i> انصراف
                                    </a>
                                </div>
                                
                                <!-- Medical Environment Form Help -->
                                <div class="form-help medical-form-help">
                                    <div class="alert alert-info">
                                        <i class="fas fa-info-circle me-2"></i>
                                        <strong>راهنمای ویرایش:</strong>
                                        <ul class="mb-0 mt-2">
                                            <li>اطلاعات بیمه بیمار را با دقت بررسی کنید</li>
                                            <li>تاریخ‌های اعتبار باید صحیح و معتبر باشند</li>
                                            <li>تغییرات پس از ذخیره فوراً اعمال می‌شوند</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Content/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/Scripts/app/patient-select2.js"></script>
    <script src="~/Scripts/app/patient-insurance-form.js"></script>
    <script>
        // 🏥 Medical Environment JavaScript - Enhanced Standards
        (function () {
            'use strict';

            function ensureJQuery(callback) {
                if (typeof jQuery !== 'undefined' && typeof $.fn !== 'undefined') {
                    callback();
                } else {
                    setTimeout(function () {
                        ensureJQuery(callback);
                    }, 50);
                }
            }

            function initializeMedicalEditPage() {
                ensureJQuery(function () {
                    $(document).ready(function() {
                        console.log('🏥 Medical Environment: Initializing Patient Insurance Edit Form');
                        
                        // 🏥 Medical Environment Form Validation
                        initializeMedicalFormValidation();
                        
                        // 🏥 Medical Environment Real-time Validation
                        initializeRealTimeValidation();
                        
                        // Wait for PatientInsuranceForm to be available
                        var checkPatientInsuranceForm = function() {
                            if (typeof PatientInsuranceForm !== 'undefined' && PatientInsuranceForm.initializeFormWithData) {
                                console.log('✅ PatientInsuranceForm found, initializing form with data...');
                                PatientInsuranceForm.initializeFormWithData();
                            } else {
                                console.log('⏳ Waiting for PatientInsuranceForm...');
                                setTimeout(checkPatientInsuranceForm, 100);
                            }
                        };
                        
                        checkPatientInsuranceForm();

                        // Set existing patient selection for Edit mode
                        @if (Model.PatientId > 0)
                        {
                            <text>
                            var checkPatientSelect2 = function() {
                                if (typeof PatientSelect2 !== 'undefined' && PatientSelect2.setValue) {
                                    console.log('✅ PatientSelect2 found, setting patient value...');
                                    PatientSelect2.setValue('#PatientId', {
                                        id: @Model.PatientId,
                                        text: 'بیمار انتخاب شده'
                                    });
                                } else {
                                    console.log('⏳ Waiting for PatientSelect2...');
                                    setTimeout(checkPatientSelect2, 100);
                                }
                            };
                            
                            checkPatientSelect2();
                            </text>
                        }
                    });
                });
            }

            // 🏥 Medical Environment Form Validation
            function initializeMedicalFormValidation() {
                ensureJQuery(function () {
                    // Enhanced form validation for medical environment
                    $('#patientInsuranceEditForm').on('submit', function(e) {
                        console.log('🏥 Medical Environment: Form submission validation');
                        
                        var isValid = true;
                        var errors = [];

                        // Validate required fields
                        $('.medical-form-control[required]').each(function() {
                            if (!$(this).val().trim()) {
                                isValid = false;
                                var fieldName = $(this).attr('data-medical-field') || $(this).attr('name');
                                errors.push('فیلد ' + fieldName + ' الزامی است');
                                $(this).addClass('is-invalid');
                            } else {
                                $(this).removeClass('is-invalid');
                            }
                        });

                        // Validate date range
                        var startDate = $('#StartDateShamsi').val();
                        var endDate = $('#EndDateShamsi').val();
                        
                        if (startDate && endDate) {
                            // Add date range validation logic here
                            console.log('🏥 Medical Environment: Validating date range');
                        }

                        if (!isValid) {
                            e.preventDefault();
                            console.log('🏥 Medical Environment: Form validation failed', errors);
                            
                            // Show medical environment error message
                            if (typeof toastr !== 'undefined') {
                                toastr.error('لطفاً خطاهای اعتبارسنجی را برطرف کنید', 'خطا در اعتبارسنجی');
                            }
                        } else {
                            console.log('🏥 Medical Environment: Form validation passed');
                        }
                    });
                });
            }

            // 🏥 Medical Environment Real-time Validation
            function initializeRealTimeValidation() {
                ensureJQuery(function () {
                    // Real-time validation for medical form controls
                    $('.medical-form-control').on('blur', function() {
                        var $field = $(this);
                        var value = $field.val().trim();
                        var fieldType = $field.attr('data-medical-field');

                        // Remove previous validation classes
                        $field.removeClass('is-valid is-invalid');

                        if ($field.prop('required') && !value) {
                            $field.addClass('is-invalid');
                            console.log('🏥 Medical Environment: Field validation failed - required field empty');
                        } else if (value) {
                            // Field-specific validation
                            switch (fieldType) {
                                case 'policy-number':
                                    if (!/^[0-9]{3,15}$/.test(value)) {
                                        $field.addClass('is-invalid');
                                        console.log('🏥 Medical Environment: Policy number format invalid');
                                    } else {
                                        $field.addClass('is-valid');
                                    }
                                    break;
                                case 'start-date':
                                case 'end-date':
                                    if (!/^[0-9]{4}\/[0-9]{2}\/[0-9]{2}$/.test(value)) {
                                        $field.addClass('is-invalid');
                                        console.log('🏥 Medical Environment: Date format invalid');
                                    } else {
                                        $field.addClass('is-valid');
                                    }
                                    break;
                                default:
                                    $field.addClass('is-valid');
                            }
                        }
                    });
                });
            }

            // شروع initialization
            initializeMedicalEditPage();
        })();
    </script>
}
