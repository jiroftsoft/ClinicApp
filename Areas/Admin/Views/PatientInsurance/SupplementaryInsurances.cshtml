@model ClinicApp.ViewModels.Insurance.PatientInsurance.PatientInsuranceIndexPageViewModel
@{
    ViewBag.Title = "ÿ®€åŸÖŸá‚ÄåŸáÿß€å ÿ™⁄©ŸÖ€åŸÑ€å ÿ®€åŸÖÿßÿ±";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <style>
        /* üè• Medical Environment Styles - ÿ®Ÿá€åŸÜŸá ÿ¥ÿØŸá ÿ®ÿ±ÿß€å ŸÖÿ≠€åÿ∑ ÿØÿ±ŸÖÿßŸÜ€å */
        .supplementary-card {
            border: 1px solid #e3e6f0;
            border-radius: 0.5rem;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            transition: all 0.3s ease;
            position: relative;
        }
        
        .supplementary-card:hover {
            box-shadow: 0 0.25rem 2rem 0 rgba(58, 59, 69, 0.25);
            transform: translateY(-2px);
        }
        
        .supplementary-card .card-body {
            padding: 1.5rem;
        }
        
        .medical-icon {
            color: #1cc88a;
            font-size: 1.2rem;
        }
        
        .coverage-badge {
            font-size: 0.875rem;
            padding: 0.5rem 1rem;
            border-radius: 1rem;
        }
        
        .status-badge {
            font-size: 0.8rem;
            padding: 0.4rem 0.8rem;
            border-radius: 0.8rem;
        }
        
        .calculation-result {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 0.5rem;
            padding: 1.5rem;
        }
        
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.7);
            z-index: 9999;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .loading-content {
            background: white;
            padding: 2rem;
            border-radius: 1rem;
            text-align: center;
            box-shadow: 0 1rem 3rem rgba(0,0,0,0.3);
        }
        
        /* üì± Responsive Design */
        @@media (max-width: 768px) {
            .supplementary-card {
                margin-bottom: 1rem;
            }
            
            .card-body {
                padding: 1rem;
            }
        }
        
        /* üé® Medical Theme Colors */
        .medical-primary { color: #1cc88a; }
        .medical-secondary { color: #36b9cc; }
        .medical-warning { color: #f6c23e; }
        .medical-danger { color: #e74a3b; }
        
        /* üîí Security Indicators */
        .security-indicator {
            position: absolute;
            top: 10px;
            right: 10px;
            color: #1cc88a;
            font-size: 1.1rem;
        }
        
        /* üöÄ Performance Optimizations */
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        
        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .pulse {
            animation: pulse 2s infinite;
        }
        
        @@keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
    </style>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="card-title mb-0">
                            <i class="fas fa-shield-alt medical-primary"></i>
                            ÿ®€åŸÖŸá‚ÄåŸáÿß€å ÿ™⁄©ŸÖ€åŸÑ€å ÿ®€åŸÖÿßÿ±
                            <span class="badge badge-info ml-2" id="insuranceCount">0</span>
                        </h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-primary btn-sm" onclick="showAddSupplementaryInsuranceModal()">
                                <i class="fas fa-plus"></i>
                                ÿßŸÅÿ≤ŸàÿØŸÜ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å
                            </button>
                            <button type="button" class="btn btn-success btn-sm ml-2" onclick="refreshSupplementaryInsurances()">
                                <i class="fas fa-sync-alt"></i>
                                ÿ®Ÿá‚Äåÿ±Ÿàÿ≤ÿ±ÿ≥ÿßŸÜ€å
                            </button>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.PatientInsurances != null && Model.PatientInsurances.Any())
                    {
                        <div class="row" id="supplementary-insurances-list">
                            @foreach (var insurance in Model.PatientInsurances)
                            {
                                <div class="col-md-6 col-lg-4 mb-3 fade-in">
                                    <div class="card supplementary-card border-left-info">
                                        <div class="security-indicator">
                                            <i class="fas fa-shield-alt"></i>
                                        </div>
                                        <div class="card-body">
                                            <div class="d-flex justify-content-between align-items-start">
                                                <div class="flex-grow-1">
                                                    <h6 class="card-title medical-primary">
                                                        <i class="fas fa-shield-alt medical-icon"></i>
                                                        @insurance.InsuranceProviderName
                                                    </h6>
                                                    <p class="card-text mb-2">
                                                        <small class="text-muted">
                                                            <i class="fas fa-id-card"></i>
                                                            ÿ¥ŸÖÿßÿ±Ÿá ÿ®€åŸÖŸá: @insurance.PolicyNumber
                                                        </small>
                                                    </p>
                                                    <p class="card-text mb-2">
                                                        <small class="text-muted">
                                                            <i class="fas fa-calendar"></i>
                                                            ÿßÿ≤: @insurance.StartDate.ToString("yyyy/MM/dd")
                                                            @if (insurance.EndDate.HasValue)
                                                            {
                                                                <span>ÿ™ÿß: @insurance.EndDate.Value.ToString("yyyy/MM/dd")</span>
                                                            }
                                                        </small>
                                                    </p>
                                                </div>
                                                <div class="dropdown">
                                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <i class="fas fa-ellipsis-v"></i>
                                                    </button>
                                                    <div class="dropdown-menu dropdown-menu-right">
                                                        <a class="dropdown-item" href="#" onclick="editSupplementaryInsurance(@insurance.PatientInsuranceId)">
                                                            <i class="fas fa-edit medical-primary"></i> Ÿà€åÿ±ÿß€åÿ¥
                                                        </a>
                                                        <a class="dropdown-item" href="#" onclick="calculateSupplementaryInsurance(@insurance.PatientInsuranceId)">
                                                            <i class="fas fa-calculator medical-secondary"></i> ŸÖÿ≠ÿßÿ≥ÿ®Ÿá
                                                        </a>
                                                        <a class="dropdown-item" href="#" onclick="viewSupplementaryInsuranceDetails(@insurance.PatientInsuranceId)">
                                                            <i class="fas fa-eye medical-primary"></i> ÿ¨ÿ≤ÿ¶€åÿßÿ™
                                                        </a>
                                                        <div class="dropdown-divider"></div>
                                                        <a class="dropdown-item text-danger" href="#" onclick="deleteSupplementaryInsurance(@insurance.PatientInsuranceId)">
                                                            <i class="fas fa-trash"></i> ÿ≠ÿ∞ŸÅ
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="mt-3">
                                                <span class="badge status-badge badge-@(insurance.IsActive ? "success" : "secondary")">
                                                    <i class="fas fa-@(insurance.IsActive ? "check-circle" : "times-circle")"></i>
                                                    @(insurance.IsActive ? "ŸÅÿπÿßŸÑ" : "ÿ∫€åÿ±ŸÅÿπÿßŸÑ")
                                                </span>
                                                <span class="badge coverage-badge badge-info">
                                                    <i class="fas fa-percentage"></i>
                                                    @insurance.CoveragePercent%
                                                </span>
                                                @* MaxPayment removed from PatientInsuranceIndexItemViewModel as it's not part of the entity *@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-shield-alt fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Ÿá€å⁄Ü ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å €åÿßŸÅÿ™ ŸÜÿ¥ÿØ</h5>
                            <p class="text-muted">ÿ®ÿ±ÿß€å ÿßŸÅÿ≤ŸàÿØŸÜ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ÿ¨ÿØ€åÿØÿå ÿ±Ÿà€å ÿØ⁄©ŸÖŸá "ÿßŸÅÿ≤ŸàÿØŸÜ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å" ⁄©ŸÑ€å⁄© ⁄©ŸÜ€åÿØ.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal ÿ®ÿ±ÿß€å ÿßŸÅÿ≤ŸàÿØŸÜ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å -->
<div class="modal fade" id="addSupplementaryInsuranceModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-shield-alt text-primary"></i>
                    ÿßŸÅÿ≤ŸàÿØŸÜ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å
                </h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addSupplementaryInsuranceForm">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="supplementaryPlanId">ÿ∑ÿ±ÿ≠ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å</label>
                                <select class="form-control" id="supplementaryPlanId" name="InsurancePlanId" required>
                                    <option value="">ÿßŸÜÿ™ÿÆÿßÿ® ⁄©ŸÜ€åÿØ...</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="supplementaryPolicyNumber">ÿ¥ŸÖÿßÿ±Ÿá ÿ®€åŸÖŸá</label>
                                <input type="text" class="form-control" id="supplementaryPolicyNumber" name="PolicyNumber" required readonly>
                                <small class="form-text text-muted">
                                    <i class="fas fa-info-circle"></i>
                                    ÿ¥ŸÖÿßÿ±Ÿá ÿ®€åŸÖŸá ÿßÿ≤ ÿ®€åŸÖŸá Ÿæÿß€åŸá ÿß€åŸÜ ÿ®€åŸÖÿßÿ± ⁄©Ÿæ€å ŸÖ€å‚Äåÿ¥ŸàÿØ
                                </small>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="supplementaryStartDate">ÿ™ÿßÿ±€åÿÆ ÿ¥ÿ±Ÿàÿπ</label>
                                <input type="text" class="form-control persian-datepicker" id="supplementaryStartDate" name="StartDateShamsi" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="supplementaryEndDate">ÿ™ÿßÿ±€åÿÆ Ÿæÿß€åÿßŸÜ</label>
                                <input type="text" class="form-control persian-datepicker" id="supplementaryEndDate" name="EndDateShamsi">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="supplementaryCardNumber">ÿ¥ŸÖÿßÿ±Ÿá ⁄©ÿßÿ±ÿ™ ÿ®€åŸÖŸá</label>
                                <input type="text" class="form-control" id="supplementaryCardNumber" name="CardNumber" maxlength="50">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="supplementaryPriority">ÿßŸàŸÑŸà€åÿ™ ÿ®€åŸÖŸá</label>
                                <select class="form-control" id="supplementaryPriority" name="Priority" required>
                                    <option value="2" selected>ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ÿßŸàŸÑ</option>
                                    <option value="3">ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ÿØŸàŸÖ</option>
                                    <option value="4">ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ÿ≥ŸàŸÖ</option>
                                    <option value="5">ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ⁄ÜŸáÿßÿ±ŸÖ</option>
                                    <option value="6">ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ŸæŸÜÿ¨ŸÖ</option>
                                    <option value="7">ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ÿ¥ÿ¥ŸÖ</option>
                                    <option value="8">ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ŸáŸÅÿ™ŸÖ</option>
                                    <option value="9">ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å Ÿáÿ¥ÿ™ŸÖ</option>
                                    <option value="10">ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ŸÜŸáŸÖ</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" id="supplementaryIsActive" name="IsActive" value="true" checked>
                                    <label class="form-check-label" for="supplementaryIsActive">
                                        ÿ®€åŸÖŸá ŸÅÿπÿßŸÑ
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle"></i>
                                    <strong>ŸÜ⁄©ÿ™Ÿá:</strong> ÿß€åŸÜ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ÿßÿ≥ÿ™ Ÿà ŸÜŸá ÿ®€åŸÖŸá ÿßÿµŸÑ€å
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- ŸÅ€åŸÑÿØŸáÿß€å ŸÖÿÆŸÅ€å ÿ®ÿ±ÿß€å ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å -->
                    <input type="hidden" name="IsPrimary" value="false" />
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">ÿßŸÜÿµÿ±ÿßŸÅ</button>
                <button type="button" class="btn btn-primary" onclick="saveSupplementaryInsurance()">
                    <i class="fas fa-save"></i>
                    ÿ∞ÿÆ€åÿ±Ÿá
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal ÿ®ÿ±ÿß€å ŸÖÿ≠ÿßÿ≥ÿ®Ÿá ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å -->
<div class="modal fade" id="calculateSupplementaryInsuranceModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-calculator text-success"></i>
                    ŸÖÿ≠ÿßÿ≥ÿ®Ÿá ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å
                </h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="calculateSupplementaryInsuranceForm">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="calculationServiceId">ÿÆÿØŸÖÿ™</label>
                                <select class="form-control" id="calculationServiceId" name="ServiceId" required>
                                    <option value="">ÿßŸÜÿ™ÿÆÿßÿ® ⁄©ŸÜ€åÿØ...</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="calculationServiceAmount">ŸÖÿ®ŸÑÿ∫ ÿÆÿØŸÖÿ™</label>
                                <input type="number" class="form-control" id="calculationServiceAmount" name="ServiceAmount" min="0" step="1000" required>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="calculationPrimaryCoverage">ŸæŸàÿ¥ÿ¥ ÿ®€åŸÖŸá ÿßÿµŸÑ€å</label>
                                <input type="number" class="form-control" id="calculationPrimaryCoverage" name="PrimaryCoverage" min="0" step="1000" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="calculationDate">ÿ™ÿßÿ±€åÿÆ ŸÖÿ≠ÿßÿ≥ÿ®Ÿá</label>
                                <input type="text" class="form-control persian-datepicker" id="calculationDate" name="CalculationDate" required>
                            </div>
                        </div>
                    </div>
                </form>
                <div id="calculationResult" class="mt-3" style="display: none;">
                    <div class="alert alert-info">
                        <h6><i class="fas fa-info-circle"></i> ŸÜÿ™€åÿ¨Ÿá ŸÖÿ≠ÿßÿ≥ÿ®Ÿá:</h6>
                        <div id="calculationDetails"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">ÿ®ÿ≥ÿ™ŸÜ</button>
                <button type="button" class="btn btn-success" onclick="performCalculation()">
                    <i class="fas fa-calculator"></i>
                    ŸÖÿ≠ÿßÿ≥ÿ®Ÿá
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // üè• Medical Environment JavaScript - ÿ®Ÿá€åŸÜŸá ÿ¥ÿØŸá ÿ®ÿ±ÿß€å ŸÖÿ≠€åÿ∑ ÿØÿ±ŸÖÿßŸÜ€å
        $(document).ready(function() {
            console.log('üè• MEDICAL: ÿµŸÅÿ≠Ÿá ÿ®€åŸÖŸá‚ÄåŸáÿß€å ÿ™⁄©ŸÖ€åŸÑ€å ÿ®ÿßÿ±⁄Øÿ∞ÿßÿ±€å ÿ¥ÿØ');
            
            // Initialize Persian DatePicker
            $('.persian-datepicker').persianDatepicker({
                format: 'YYYY/MM/DD',
                altField: '.gregorian-datepicker',
                observer: true,
                timePicker: {
                    enabled: false
                }
            });

            // ÿ®ÿßÿ±⁄Ø€åÿ±€å ŸáŸÖÿ≤ŸÖÿßŸÜ ÿØÿßÿØŸá‚ÄåŸáÿß ÿ®ÿ±ÿß€å ÿ®Ÿáÿ®ŸàÿØ Performance
            Promise.all([
                loadSupplementaryInsurancePlans(),
                loadServicesForCalculation(),
                updateInsuranceCount()
            ]).then(function() {
                console.log('üè• MEDICAL: ÿ™ŸÖÿßŸÖ ÿØÿßÿØŸá‚ÄåŸáÿß ÿ®ÿßÿ±⁄Øÿ∞ÿßÿ±€å ÿ¥ÿØ');
            }).catch(function(error) {
                console.error('üè• MEDICAL: ÿÆÿ∑ÿß ÿØÿ± ÿ®ÿßÿ±⁄Øÿ∞ÿßÿ±€å ÿØÿßÿØŸá‚ÄåŸáÿß', error);
                showMedicalError('ÿÆÿ∑ÿß ÿØÿ± ÿ®ÿßÿ±⁄Øÿ∞ÿßÿ±€å ÿØÿßÿØŸá‚ÄåŸáÿß€å ÿßŸàŸÑ€åŸá');
            });
            
            // ÿßÿ∂ÿßŸÅŸá ⁄©ÿ±ÿØŸÜ event listeners
            setupEventListeners();
        });
        
        function setupEventListeners() {
            // Auto-refresh Ÿáÿ± 5 ÿØŸÇ€åŸÇŸá
            setInterval(function() {
                refreshSupplementaryInsurances();
            }, 300000); // 5 minutes
            
            // Keyboard shortcuts
            $(document).keydown(function(e) {
                if (e.ctrlKey && e.key === 'r') {
                    e.preventDefault();
                    refreshSupplementaryInsurances();
                }
            });
        }
        
        function updateInsuranceCount() {
            var count = $('#supplementary-insurances-list .col-md-6').length;
            $('#insuranceCount').text(count);
            console.log('üè• MEDICAL: ÿ™ÿπÿØÿßÿØ ÿ®€åŸÖŸá‚ÄåŸáÿß€å ÿ™⁄©ŸÖ€åŸÑ€å ÿ®Ÿá‚Äåÿ±Ÿàÿ≤ÿ±ÿ≥ÿßŸÜ€å ÿ¥ÿØ:', count);
        }

        function showAddSupplementaryInsuranceModal() {
            console.log('üè• MEDICAL: ŸÜŸÖÿß€åÿ¥ ŸÖŸàÿØÿßŸÑ ÿßŸÅÿ≤ŸàÿØŸÜ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å...');
            
            // ÿ®ÿßÿ±⁄Ø€åÿ±€å ÿ∑ÿ±ÿ≠‚ÄåŸáÿß€å ÿ®€åŸÖŸá ŸÇÿ®ŸÑ ÿßÿ≤ ŸÜŸÖÿß€åÿ¥ ŸÖŸàÿØÿßŸÑ
            loadSupplementaryInsurancePlans().then(function() {
                $('#addSupplementaryInsuranceModal').modal('show');
                console.log('üè• MEDICAL: ŸÖŸàÿØÿßŸÑ ÿßŸÅÿ≤ŸàÿØŸÜ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ŸÜŸÖÿß€åÿ¥ ÿØÿßÿØŸá ÿ¥ÿØ');
            }).catch(function(error) {
                console.error('üè• MEDICAL: ÿÆÿ∑ÿß ÿØÿ± ÿ®ÿßÿ±⁄Ø€åÿ±€å ÿ∑ÿ±ÿ≠‚ÄåŸáÿß€å ÿ®€åŸÖŸá:', error);
                showMedicalError('ÿÆÿ∑ÿß ÿØÿ± ÿ®ÿßÿ±⁄Ø€åÿ±€å ÿ∑ÿ±ÿ≠‚ÄåŸáÿß€å ÿ®€åŸÖŸá: ' + error);
            });
        }

        // Event handlers ÿ®ÿ±ÿß€å ŸÖŸàÿØÿßŸÑ
        $(document).ready(function() {
            // Event handler ÿ®ÿ±ÿß€å ÿ®ÿ≥ÿ™Ÿá ÿ¥ÿØŸÜ ŸÖŸàÿØÿßŸÑ
            $('#addSupplementaryInsuranceModal').on('hidden.bs.modal', function() {
                console.log('üè• MEDICAL: ŸÖŸàÿØÿßŸÑ ÿßŸÅÿ≤ŸàÿØŸÜ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ÿ®ÿ≥ÿ™Ÿá ÿ¥ÿØ');
                // Ÿæÿß⁄© ⁄©ÿ±ÿØŸÜ ŸÅÿ±ŸÖ
                $('#addSupplementaryInsuranceForm')[0].reset();
            });
            
            // Event handler ÿ®ÿ±ÿß€å ⁄©ŸÑ€å⁄© ÿ±Ÿà€å ÿØ⁄©ŸÖŸá ÿßŸÜÿµÿ±ÿßŸÅ
            $('#addSupplementaryInsuranceModal .btn-secondary').on('click', function() {
                console.log('üè• MEDICAL: ⁄©ŸÑ€å⁄© ÿ±Ÿà€å ÿØ⁄©ŸÖŸá ÿßŸÜÿµÿ±ÿßŸÅ');
                $('#addSupplementaryInsuranceModal').modal('hide');
            });
            
            // Event handler ÿ®ÿ±ÿß€å ⁄©ŸÑ€å⁄© ÿ±Ÿà€å ÿØ⁄©ŸÖŸá X
            $('#addSupplementaryInsuranceModal .close').on('click', function() {
                console.log('üè• MEDICAL: ⁄©ŸÑ€å⁄© ÿ±Ÿà€å ÿØ⁄©ŸÖŸá X');
                $('#addSupplementaryInsuranceModal').modal('hide');
            });
        });

        function loadSupplementaryInsurancePlans() {
            console.log('üè• MEDICAL: ÿ®ÿßÿ±⁄Ø€åÿ±€å ÿ∑ÿ±ÿ≠‚ÄåŸáÿß€å ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å...');
            
            return new Promise(function(resolve, reject) {
                $.ajax({
                    url: '@Url.Action("GetInsurancePlans", "InsuranceTariff", new { area = "Admin" })',
                    type: 'GET',
                    timeout: 10000, // 10 seconds timeout
                    dataType: 'json',
                    success: function(response) {
                        console.log('üè• MEDICAL: Response received:', response);
                        
                        if (response && response.success) {
                            console.log('üè• MEDICAL: ÿ∑ÿ±ÿ≠‚ÄåŸáÿß€å ÿ®€åŸÖŸá ÿØÿ±€åÿßŸÅÿ™ ÿ¥ÿØ', response.data ? response.data.length : 0);
                            
                            var options = '<option value="">ÿßŸÜÿ™ÿÆÿßÿ® ⁄©ŸÜ€åÿØ...</option>';
                            if (response.data && Array.isArray(response.data)) {
                                $.each(response.data, function(index, plan) {
                                    options += '<option value="' + plan.id + '">' + plan.name + '</option>';
                                });
                            }
                            $('#supplementaryPlanId').html(options);
                            
                            // ÿ®ÿßÿ±⁄Ø€åÿ±€å ÿ¥ŸÖÿßÿ±Ÿá ÿ®€åŸÖŸá Ÿæÿß€åŸá
                            loadPrimaryInsurancePolicyNumber();
                            
                            resolve();
                        } else {
                            var errorMessage = response ? response.message : 'Ÿæÿßÿ≥ÿÆ ŸÜÿßŸÖÿπÿ™ÿ®ÿ± ÿßÿ≤ ÿ≥ÿ±Ÿàÿ±';
                            console.error('üè• MEDICAL: ÿÆÿ∑ÿß ÿØÿ± ÿØÿ±€åÿßŸÅÿ™ ÿ∑ÿ±ÿ≠‚ÄåŸáÿß€å ÿ®€åŸÖŸá', errorMessage);
                            showMedicalError('ÿÆÿ∑ÿß ÿØÿ± ÿØÿ±€åÿßŸÅÿ™ ÿ∑ÿ±ÿ≠‚ÄåŸáÿß€å ÿ®€åŸÖŸá: ' + errorMessage);
                            reject(errorMessage);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('üè• MEDICAL: ÿÆÿ∑ÿß€å AJAX ÿØÿ± ÿØÿ±€åÿßŸÅÿ™ ÿ∑ÿ±ÿ≠‚ÄåŸáÿß€å ÿ®€åŸÖŸá', {
                            status: xhr.status,
                            statusText: xhr.statusText,
                            responseText: xhr.responseText,
                            error: error
                        });
                        showMedicalError('ÿÆÿ∑ÿß ÿØÿ± ÿßÿ±ÿ™ÿ®ÿßÿ∑ ÿ®ÿß ÿ≥ÿ±Ÿàÿ± ÿ®ÿ±ÿß€å ÿØÿ±€åÿßŸÅÿ™ ÿ∑ÿ±ÿ≠‚ÄåŸáÿß€å ÿ®€åŸÖŸá (Status: ' + xhr.status + ')');
                        reject(error);
                    }
                });
            });
        }
        
        function loadPrimaryInsurancePolicyNumber() {
            console.log('üè• MEDICAL: ÿ®ÿßÿ±⁄Ø€åÿ±€å ÿ¥ŸÖÿßÿ±Ÿá ÿ®€åŸÖŸá Ÿæÿß€åŸá...');
            
            $.ajax({
                url: '@Url.Action("GetPrimaryInsurancePolicyNumber", "PatientInsurance", new { area = "Admin" })',
                type: 'GET',
                data: { patientId: @ViewBag.PatientId },
                dataType: 'json',
                success: function(response) {
                    console.log('üè• MEDICAL: ÿ¥ŸÖÿßÿ±Ÿá ÿ®€åŸÖŸá Ÿæÿß€åŸá ÿØÿ±€åÿßŸÅÿ™ ÿ¥ÿØ:', response);
                    
                    if (response && response.success && response.data) {
                        $('#supplementaryPolicyNumber').val(response.data);
                        console.log('üè• MEDICAL: ÿ¥ŸÖÿßÿ±Ÿá ÿ®€åŸÖŸá Ÿæÿß€åŸá ÿ™ŸÜÿ∏€åŸÖ ÿ¥ÿØ:', response.data);
                    } else {
                        console.warn('üè• MEDICAL: ÿ¥ŸÖÿßÿ±Ÿá ÿ®€åŸÖŸá Ÿæÿß€åŸá €åÿßŸÅÿ™ ŸÜÿ¥ÿØ');
                        showMedicalWarning('ÿßÿ®ÿ™ÿØÿß ÿ®ÿß€åÿØ ÿ®€åŸÖŸá Ÿæÿß€åŸá ÿ®ÿ±ÿß€å ÿß€åŸÜ ÿ®€åŸÖÿßÿ± ÿ™ÿπÿ±€åŸÅ ÿ¥ŸàÿØ');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('üè• MEDICAL: ÿÆÿ∑ÿß ÿØÿ± ÿØÿ±€åÿßŸÅÿ™ ÿ¥ŸÖÿßÿ±Ÿá ÿ®€åŸÖŸá Ÿæÿß€åŸá:', {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        responseText: xhr.responseText,
                        error: error
                    });
                    showMedicalError('ÿÆÿ∑ÿß ÿØÿ± ÿØÿ±€åÿßŸÅÿ™ ÿ¥ŸÖÿßÿ±Ÿá ÿ®€åŸÖŸá Ÿæÿß€åŸá');
                }
            });
        }

        function loadServicesForCalculation() {
            $.ajax({
                url: '@Url.Action("GetActiveServices", "ServiceManagement", new { area = "Admin" })',
                type: 'GET',
                data: { serviceCategoryId: 0 }, // ŸáŸÖŸá ÿÆÿØŸÖÿßÿ™
                success: function(response) {
                    if (response.success) {
                        var options = '<option value="">ÿßŸÜÿ™ÿÆÿßÿ® ⁄©ŸÜ€åÿØ...</option>';
                        $.each(response.data, function(index, service) {
                            options += '<option value="' + service.id + '">' + service.name + '</option>';
                        });
                        $('#calculationServiceId').html(options);
                    }
                },
                error: function() {
                    console.error('ÿÆÿ∑ÿß ÿØÿ± ÿØÿ±€åÿßŸÅÿ™ ÿÆÿØŸÖÿßÿ™');
                }
            });
        }

        function saveSupplementaryInsurance() {
            console.log('üè• MEDICAL: ÿ¥ÿ±Ÿàÿπ ÿ∞ÿÆ€åÿ±Ÿá ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å...');
            
            var form = $('#addSupplementaryInsuranceForm');
            
            // ÿßÿπÿ™ÿ®ÿßÿ±ÿ≥ŸÜÿ¨€å ŸÅÿ±ŸÖ
            if (!form[0].checkValidity()) {
                console.error('üè• MEDICAL: ŸÅÿ±ŸÖ ŸÖÿπÿ™ÿ®ÿ± ŸÜ€åÿ≥ÿ™');
                form[0].reportValidity();
                return;
            }
            
            var formData = form.serialize();
            
            // ÿßÿ∂ÿßŸÅŸá ⁄©ÿ±ÿØŸÜ PatientId ÿ®Ÿá formData
            formData += '&PatientId=@ViewBag.PatientId';
            
            console.log('üè• MEDICAL: ÿßÿ±ÿ≥ÿßŸÑ ÿØÿßÿØŸá‚ÄåŸáÿß:', formData);
            
            $.ajax({
                url: '@Url.Action("CreateAjax", "PatientInsurance", new { area = "Admin" })',
                type: 'POST',
                data: formData,
                dataType: 'json',
                success: function(response) {
                    console.log('üè• MEDICAL: Ÿæÿßÿ≥ÿÆ ÿ≥ÿ±Ÿàÿ±:', response);
                    
                    if (response && response.success) {
                        console.log('üè• MEDICAL: ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ÿ®ÿß ŸÖŸàŸÅŸÇ€åÿ™ ÿ∞ÿÆ€åÿ±Ÿá ÿ¥ÿØ');
                        showMedicalSuccess('ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ÿ®ÿß ŸÖŸàŸÅŸÇ€åÿ™ ÿßÿ∂ÿßŸÅŸá ÿ¥ÿØ');
                        $('#addSupplementaryInsuranceModal').modal('hide');
                        
                        // Ÿæÿß⁄© ⁄©ÿ±ÿØŸÜ ŸÅÿ±ŸÖ
                        form[0].reset();
                        
                        // ÿ®Ÿá‚Äåÿ±Ÿàÿ≤ÿ±ÿ≥ÿßŸÜ€å ÿµŸÅÿ≠Ÿá
                        setTimeout(function() {
                            location.reload();
                        }, 1000);
                    } else {
                        var errorMessage = response ? response.message : 'ÿÆÿ∑ÿß€å ŸÜÿßŸÖÿ¥ÿÆÿµ';
                        console.error('üè• MEDICAL: ÿÆÿ∑ÿß ÿØÿ± ÿ∞ÿÆ€åÿ±Ÿá ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å:', errorMessage);
                        
                        // ŸÜŸÖÿß€åÿ¥ ÿ¨ÿ≤ÿ¶€åÿßÿ™ ÿÆÿ∑ÿßŸáÿß€å ÿßÿπÿ™ÿ®ÿßÿ±ÿ≥ŸÜÿ¨€å
                        if (response && response.errors) {
                            var errorDetails = Object.keys(response.errors).map(function(key) {
                                return key + ': ' + response.errors[key].join(', ');
                            }).join('; ');
                            console.error('üè• MEDICAL: ÿ¨ÿ≤ÿ¶€åÿßÿ™ ÿÆÿ∑ÿßŸáÿß€å ÿßÿπÿ™ÿ®ÿßÿ±ÿ≥ŸÜÿ¨€å:', errorDetails);
                            showMedicalError('ÿÆÿ∑ÿßŸáÿß€å ÿßÿπÿ™ÿ®ÿßÿ±ÿ≥ŸÜÿ¨€å: ' + errorDetails);
                        } else {
                            showMedicalError('ÿÆÿ∑ÿß ÿØÿ± ÿ∞ÿÆ€åÿ±Ÿá ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å: ' + errorMessage);
                        }
                    }
                },
                error: function(xhr, status, error) {
                    console.error('üè• MEDICAL: ÿÆÿ∑ÿß€å AJAX ÿØÿ± ÿ∞ÿÆ€åÿ±Ÿá ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å:', {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        responseText: xhr.responseText,
                        error: error
                    });
                    
                    var errorMessage = 'ÿÆÿ∑ÿß ÿØÿ± ÿßÿ±ÿ™ÿ®ÿßÿ∑ ÿ®ÿß ÿ≥ÿ±Ÿàÿ±';
                    if (xhr.responseText) {
                        try {
                            var response = JSON.parse(xhr.responseText);
                            if (response.message) {
                                errorMessage = response.message;
                            }
                        } catch (e) {
                            console.error('üè• MEDICAL: ÿÆÿ∑ÿß ÿØÿ± ÿ™ÿ¨ÿ≤€åŸá Ÿæÿßÿ≥ÿÆ ÿÆÿ∑ÿß:', e);
                        }
                    }
                    
                    showMedicalError('ÿÆÿ∑ÿß ÿØÿ± ÿ∞ÿÆ€åÿ±Ÿá ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å: ' + errorMessage);
                }
            });
        }

        function calculateSupplementaryInsurance(patientInsuranceId) {
            $('#calculateSupplementaryInsuranceModal').modal('show');
        }

        function performCalculation() {
            console.log('üè• MEDICAL: ÿ¥ÿ±Ÿàÿπ ŸÖÿ≠ÿßÿ≥ÿ®Ÿá ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å...');
            
            // ÿßÿπÿ™ÿ®ÿßÿ±ÿ≥ŸÜÿ¨€å Ÿàÿ±ŸàÿØ€å‚ÄåŸáÿß
            var serviceId = $('#calculationServiceId').val();
            var serviceAmount = $('#calculationServiceAmount').val();
            var primaryCoverage = $('#calculationPrimaryCoverage').val();
            
            if (!serviceId || !serviceAmount || !primaryCoverage) {
                showMedicalError('ŸÑÿ∑ŸÅÿßŸã ÿ™ŸÖÿßŸÖ ŸÅ€åŸÑÿØŸáÿß ÿ±ÿß Ÿæÿ± ⁄©ŸÜ€åÿØ');
                return;
            }
            
            if (parseFloat(serviceAmount) <= 0) {
                showMedicalError('ŸÖÿ®ŸÑÿ∫ ÿÆÿØŸÖÿ™ ÿ®ÿß€åÿØ ÿ®€åÿ¥ÿ™ÿ± ÿßÿ≤ ÿµŸÅÿ± ÿ®ÿßÿ¥ÿØ');
                return;
            }
            
            if (parseFloat(primaryCoverage) < 0) {
                showMedicalError('ŸæŸàÿ¥ÿ¥ ÿ®€åŸÖŸá ÿßÿµŸÑ€å ŸÜŸÖ€å‚Äåÿ™ŸàÿßŸÜÿØ ŸÖŸÜŸÅ€å ÿ®ÿßÿ¥ÿØ');
                return;
            }
            
            showLoadingIndicator();
            
            var form = $('#calculateSupplementaryInsuranceForm');
            var formData = form.serialize();
            
            $.ajax({
                url: '@Url.Action("CalculateSupplementaryInsurance", "PatientInsurance", new { area = "Admin" })',
                type: 'POST',
                data: formData,
                timeout: 15000, // 15 seconds timeout
                success: function(response) {
                    hideLoadingIndicator();
                    
                    if (response.success) {
                        console.log('üè• MEDICAL: ŸÖÿ≠ÿßÿ≥ÿ®Ÿá ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ŸÖŸàŸÅŸÇ', response.data);
                        showCalculationResult(response.data);
                        showMedicalSuccess('ŸÖÿ≠ÿßÿ≥ÿ®Ÿá ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ÿ®ÿß ŸÖŸàŸÅŸÇ€åÿ™ ÿßŸÜÿ¨ÿßŸÖ ÿ¥ÿØ');
                    } else {
                        console.error('üè• MEDICAL: ÿÆÿ∑ÿß ÿØÿ± ŸÖÿ≠ÿßÿ≥ÿ®Ÿá ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å', response.message);
                        showMedicalError('ÿÆÿ∑ÿß ÿØÿ± ŸÖÿ≠ÿßÿ≥ÿ®Ÿá: ' + response.message);
                    }
                },
                error: function(xhr, status, error) {
                    hideLoadingIndicator();
                    console.error('üè• MEDICAL: ÿÆÿ∑ÿß€å AJAX ÿØÿ± ŸÖÿ≠ÿßÿ≥ÿ®Ÿá ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å', error);
                    
                    // ÿ™ÿ¥ÿÆ€åÿµ ŸÜŸàÿπ ÿÆÿ∑ÿß
                    var errorMessage = 'ÿÆÿ∑ÿß ÿØÿ± ŸÖÿ≠ÿßÿ≥ÿ®Ÿá ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å';
                    if (xhr.status === 401) {
                        errorMessage = 'ÿØÿ≥ÿ™ÿ±ÿ≥€å ÿ∫€åÿ±ŸÖÿ¨ÿßÿ≤ - ŸÑÿ∑ŸÅÿßŸã ÿØŸàÿ®ÿßÿ±Ÿá Ÿàÿßÿ±ÿØ ÿ¥Ÿà€åÿØ';
                    } else if (xhr.status === 403) {
                        errorMessage = 'ÿØÿ≥ÿ™ÿ±ÿ≥€å ÿ∫€åÿ±ŸÖÿ¨ÿßÿ≤ - ÿ¥ŸÖÿß ŸÖÿ¨ÿßÿ≤ ÿ®Ÿá ÿßŸÜÿ¨ÿßŸÖ ÿß€åŸÜ ÿπŸÖŸÑ€åÿßÿ™ ŸÜ€åÿ≥ÿ™€åÿØ';
                    } else if (xhr.status === 500) {
                        errorMessage = 'ÿÆÿ∑ÿß€å ÿ≥ÿ±Ÿàÿ± - ŸÑÿ∑ŸÅÿßŸã ÿ®ÿß ŸÖÿØ€åÿ± ÿ≥€åÿ≥ÿ™ŸÖ ÿ™ŸÖÿßÿ≥ ÿ®⁄Ø€åÿ±€åÿØ';
                    } else if (xhr.status === 0) {
                        errorMessage = 'ÿÆÿ∑ÿß ÿØÿ± ÿßÿ™ÿµÿßŸÑ ÿ®Ÿá ÿ≥ÿ±Ÿàÿ± - ŸÑÿ∑ŸÅÿßŸã ÿßÿ™ÿµÿßŸÑ ÿß€åŸÜÿ™ÿ±ŸÜÿ™ ÿÆŸàÿØ ÿ±ÿß ÿ®ÿ±ÿ±ÿ≥€å ⁄©ŸÜ€åÿØ';
                    }
                    
                    showMedicalError(errorMessage);
                }
            });
        }

        function showCalculationResult(data) {
            var resultHtml = '<div class="row">';
            resultHtml += '<div class="col-md-6"><strong>ŸæŸàÿ¥ÿ¥ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å:</strong> ' + data.supplementaryCoverage + ' ÿ™ŸàŸÖÿßŸÜ</div>';
            resultHtml += '<div class="col-md-6"><strong>ÿ≥ŸáŸÖ ŸÜŸáÿß€å€å ÿ®€åŸÖÿßÿ±:</strong> ' + data.finalPatientShare + ' ÿ™ŸàŸÖÿßŸÜ</div>';
            resultHtml += '</div>';
            resultHtml += '<div class="row mt-2">';
            resultHtml += '<div class="col-md-6"><strong>⁄©ŸÑ ŸæŸàÿ¥ÿ¥:</strong> ' + data.totalCoverage + ' ÿ™ŸàŸÖÿßŸÜ</div>';
            resultHtml += '<div class="col-md-6"><strong>ÿØÿ±ÿµÿØ ⁄©ŸÑ ŸæŸàÿ¥ÿ¥:</strong> ' + data.totalCoveragePercent + '%</div>';
            resultHtml += '</div>';
            
            $('#calculationDetails').html(resultHtml);
            $('#calculationResult').show();
        }

        function editSupplementaryInsurance(patientInsuranceId) {
            // Implementation for editing supplementary insurance
            console.log('Edit supplementary insurance:', patientInsuranceId);
        }

        function deleteSupplementaryInsurance(patientInsuranceId) {
            console.log('üè• MEDICAL: ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿ≠ÿ∞ŸÅ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å', patientInsuranceId);
            
            if (confirm('ÿ¢€åÿß ÿßÿ≤ ÿ≠ÿ∞ŸÅ ÿß€åŸÜ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ÿßÿ∑ŸÖ€åŸÜÿßŸÜ ÿØÿßÿ±€åÿØÿü\nÿß€åŸÜ ÿπŸÖŸÑ ŸÇÿßÿ®ŸÑ ÿ®ÿßÿ≤⁄Øÿ¥ÿ™ ŸÜ€åÿ≥ÿ™.')) {
                showLoadingIndicator();
                
                $.ajax({
                    url: '@Url.Action("Delete", "PatientInsurance", new { area = "Admin" })',
                    type: 'POST',
                    data: { 
                        id: patientInsuranceId, 
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() 
                    },
                    timeout: 10000,
                    success: function(response) {
                        hideLoadingIndicator();
                        
                        if (response.success) {
                            console.log('üè• MEDICAL: ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ÿ®ÿß ŸÖŸàŸÅŸÇ€åÿ™ ÿ≠ÿ∞ŸÅ ÿ¥ÿØ');
                            showMedicalSuccess('ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ÿ®ÿß ŸÖŸàŸÅŸÇ€åÿ™ ÿ≠ÿ∞ŸÅ ÿ¥ÿØ');
                            location.reload();
                        } else {
                            console.error('üè• MEDICAL: ÿÆÿ∑ÿß ÿØÿ± ÿ≠ÿ∞ŸÅ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å', response.message);
                            showMedicalError('ÿÆÿ∑ÿß ÿØÿ± ÿ≠ÿ∞ŸÅ: ' + response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        hideLoadingIndicator();
                        console.error('üè• MEDICAL: ÿÆÿ∑ÿß€å AJAX ÿØÿ± ÿ≠ÿ∞ŸÅ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å', error);
                        showMedicalError('ÿÆÿ∑ÿß ÿØÿ± ÿ≠ÿ∞ŸÅ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å');
                    }
                });
            }
        }
        
        // üè• Medical Environment Helper Functions
        function showLoadingIndicator() {
            console.log('üè• MEDICAL: ŸÜŸÖÿß€åÿ¥ loading indicator');
            
            if ($('#loadingOverlay').length === 0) {
                $('body').append(`
                    <div id="loadingOverlay" class="loading-overlay">
                        <div class="loading-content">
                            <i class="fas fa-spinner fa-spin fa-3x medical-primary"></i>
                            <h5 class="mt-3 mb-2">ÿØÿ± ÿ≠ÿßŸÑ Ÿæÿ±ÿØÿßÿ≤ÿ¥...</h5>
                            <p class="text-muted">ŸÑÿ∑ŸÅÿßŸã ÿµÿ®ÿ± ⁄©ŸÜ€åÿØ</p>
                            <div class="progress mt-3" style="width: 200px;">
                                <div class="progress-bar progress-bar-striped progress-bar-animated" 
                                     role="progressbar" style="width: 100%"></div>
                            </div>
                        </div>
                    </div>
                `);
            }
        }
        
        function hideLoadingIndicator() {
            console.log('üè• MEDICAL: ŸÖÿÆŸÅ€å ⁄©ÿ±ÿØŸÜ loading indicator');
            
            $('#loadingOverlay').fadeOut(300, function() {
                $(this).remove();
            });
        }
        
        function showMedicalError(message) {
            console.error('üè• MEDICAL: ÿÆÿ∑ÿß', message);
            
            if (typeof toastr !== 'undefined') {
                toastr.error(message, 'ÿÆÿ∑ÿß ÿØÿ± ÿ≥€åÿ≥ÿ™ŸÖ ÿØÿ±ŸÖÿßŸÜ€å', {
                    timeOut: 8000,
                    closeButton: true,
                    progressBar: true,
                    positionClass: 'toast-top-right',
                    showMethod: 'slideDown',
                    hideMethod: 'slideUp'
                });
            } else {
                alert('üè• ÿÆÿ∑ÿß: ' + message);
            }
        }
        
        function showMedicalSuccess(message) {
            console.log('üè• MEDICAL: ŸÖŸàŸÅŸÇ€åÿ™', message);
            
            if (typeof toastr !== 'undefined') {
                toastr.success(message, 'ÿπŸÖŸÑ€åÿßÿ™ ŸÖŸàŸÅŸÇ', {
                    timeOut: 5000,
                    closeButton: true,
                    progressBar: true,
                    positionClass: 'toast-top-right'
                });
            } else {
                alert('üè• ŸÖŸàŸÅŸÇ€åÿ™: ' + message);
            }
        }
        
        function showMedicalWarning(message) {
            console.log('üè• MEDICAL: Ÿáÿ¥ÿØÿßÿ±', message);
            
            if (typeof toastr !== 'undefined') {
                toastr.warning(message, 'Ÿáÿ¥ÿØÿßÿ±', {
                    timeOut: 8000,
                    closeButton: true,
                    progressBar: true,
                    positionClass: 'toast-top-right'
                });
            } else {
                alert('üè• Ÿáÿ¥ÿØÿßÿ±: ' + message);
            }
        }
        
        function refreshSupplementaryInsurances() {
            console.log('üè• MEDICAL: ÿ®Ÿá‚Äåÿ±Ÿàÿ≤ÿ±ÿ≥ÿßŸÜ€å ÿ®€åŸÖŸá‚ÄåŸáÿß€å ÿ™⁄©ŸÖ€åŸÑ€å...');
            location.reload();
        }
        
        function viewSupplementaryInsuranceDetails(patientInsuranceId) {
            console.log('üè• MEDICAL: ŸÜŸÖÿß€åÿ¥ ÿ¨ÿ≤ÿ¶€åÿßÿ™ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å', patientInsuranceId);
            // TODO: Ÿæ€åÿßÿØŸá‚Äåÿ≥ÿßÿ≤€å ŸÜŸÖÿß€åÿ¥ ÿ¨ÿ≤ÿ¶€åÿßÿ™
            showMedicalSuccess('ÿ¨ÿ≤ÿ¶€åÿßÿ™ ÿ®€åŸÖŸá ÿ™⁄©ŸÖ€åŸÑ€å ŸÜŸÖÿß€åÿ¥ ÿØÿßÿØŸá ÿ¥ÿØ');
        }
    </script>
}
