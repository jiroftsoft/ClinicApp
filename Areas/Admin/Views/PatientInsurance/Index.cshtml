@model ClinicApp.ViewModels.Insurance.PatientInsurance.PatientInsuranceIndexPageViewModel
@{
    ViewBag.Title = "مدیریت بیمه‌های بیماران";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@Html.AntiForgeryToken()

@section Styles {
    <link href="~/Content/css/patient-insurance.css" rel="stylesheet" />
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>مدیریت بیمه‌های بیماران</h2>
                <div class="btn-group">
                    <a href="@Url.Action("Create", "PatientInsurance")" class="btn btn-primary">
                        <i class="fas fa-plus"></i> افزودن بیمه بیمار جدید
                    </a>
                    <a href="@Url.Action("Index", "CombinedInsuranceCalculation")" class="btn btn-info">
                        <i class="fas fa-calculator"></i> محاسبه بیمه ترکیبی
                    </a>
                </div>
            </div>

            <!-- Search and Filters -->
            <div class="search-filters">
                <form method="get" action="@Url.Action("Index", "PatientInsurance")" id="searchForm">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="filter-group">
                                <label class="filter-label">جستجو در نام یا کد ملی بیمار:</label>
                                <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control" 
                                       placeholder="نام یا کد ملی بیمار..." 
                                       data-min-length="2" 
                                       data-debounce="500">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="filter-group">
                                <label class="filter-label">ارائه‌دهنده بیمه:</label>
                                @Html.DropDownList("providerId", Model.InsuranceProviderSelectList ?? new SelectList(new List<object>(), "Value", "Text"), "همه ارائه‌دهندگان", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="filter-group">
                                <label class="filter-label">نوع بیمه:</label>
                                <select name="isPrimary" class="form-control">
                                    <option value="">همه انواع</option>
                                    <option value="true" @(Model.IsPrimary == true ? "selected" : "")>اصلی</option>
                                    <option value="false" @(Model.IsPrimary == false ? "selected" : "")>تکمیلی</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="filter-group">
                                <label class="filter-label">وضعیت:</label>
                                <select name="isActive" class="form-control">
                                    <option value="">همه وضعیت‌ها</option>
                                    <option value="true" @(Model.IsActive == true ? "selected" : "")>فعال</option>
                                    <option value="false" @(Model.IsActive == false ? "selected" : "")>غیرفعال</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="filter-group">
                                <label class="filter-label">تعداد در صفحه:</label>
                                <select name="pageSize" class="form-control">
                                    <option value="25" @(Model.PageSize == 25 ? "selected" : "")>25</option>
                                    <option value="50" @(Model.PageSize == 50 ? "selected" : "")>50</option>
                                    <option value="100" @(Model.PageSize == 100 ? "selected" : "")>100</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="filter-group">
                                <label class="filter-label">&nbsp;</label>
                                <div>
                                    <button type="submit" class="btn btn-primary btn-block">
                                        <i class="fas fa-search"></i> جستجو
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <!-- Results Summary -->
            <div class="row mb-3">
                <div class="col-12">
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle"></i>
                        <strong>نتایج جستجو:</strong>
                        @if (Model.TotalCount > 0)
                        {
                            <span>@Model.TotalCount بیمه بیمار یافت شد</span>
                            <span class="badge badge-secondary ml-2">صفحه @Model.CurrentPage از @Math.Ceiling((double)Model.TotalCount / Model.PageSize)</span>
                            <span class="badge badge-primary ml-2">@Model.PageSize رکورد در هر صفحه</span>
                            if (!string.IsNullOrEmpty(Model.SearchTerm) || Model.ProviderId.HasValue || Model.IsPrimary.HasValue || Model.IsActive.HasValue)
                            {
                                <span> - </span>
                                <a href="@Url.Action("Index", "PatientInsurance")" class="alert-link">نمایش همه بیمه‌ها</a>
                            }
                        }
                        else
                        {
                            <span>هیچ بیمه بیمار یافت نشد</span>
                        }
                    </div>
                </div>
            </div>

            <!-- Patient Insurances List Container -->
            <div id="patientInsuranceListContainer">
                @{
                    var partialViewModel = new ClinicApp.ViewModels.Insurance.PatientInsurance.PatientInsuranceListPartialViewModel
                    {
                        Items = Model.PatientInsurances,
                        CurrentPage = Model.CurrentPage,
                        PageSize = Model.PageSize,
                        TotalItems = Model.TotalCount
                    };
                }
                @Html.Partial("_PatientInsuranceListPartial", partialViewModel)
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // محافظت jQuery + ساختار ماژولار
        (function () {
            'use strict';

            // اطمینان از بارگذاری jQuery
            function ensureJQuery(callback) {
                if (typeof jQuery !== 'undefined' && typeof $.fn !== 'undefined') {
                    callback();
                } else {
                    setTimeout(function () {
                        ensureJQuery(callback);
                    }, 50);
                }
            }

            // Initialization اصلی
            function initializePatientInsurancePage() {
                ensureJQuery(function () {
                    $(function () { // document.ready کوتاه‌تر

                        // --- رویداد جستجو ---
                        $('#searchForm').on('submit', function (e) {
                            e.preventDefault();
                            reloadInsurances(1);
                        });

                        // --- رویداد تغییر فیلترها ---
                        $('select[name="providerId"], select[name="isPrimary"], select[name="isActive"]').on('change', function () {
                            reloadInsurances(1);
                        });

                        // --- صفحه‌بندی (delegation) ---
                        $(document).on('click', '.pagination .page-link', function (e) {
                            e.preventDefault();
                            var page = $(this).data('page');
                            if (page && page > 0) {
                                reloadInsurances(page);
                            }
                        });

                        // --- متد اصلی بارگذاری ---
                        function reloadInsurances(page) {
                            var searchTerm = $('input[name="searchTerm"]').val();
                            var providerId = $('select[name="providerId"]').val();
                            var isPrimary = $('select[name="isPrimary"]').val();
                            var isActive = $('select[name="isActive"]').val();

                            $.ajax({
                                url: '@Url.Action("LoadPatientInsurances", "PatientInsurance")',
                                type: 'POST',
                                data: {
                                    searchTerm: searchTerm || '',
                                    providerId: providerId || null,
                                    isPrimary: isPrimary || null,
                                    isActive: isActive || null,
                                    page: page,
                                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                                },
                                success: function (response) {
                                    $('#patientInsuranceListContainer').html(response);
                                },
                                error: function (xhr, status, error) {
                                    console.error('خطا در بارگیری بیمه‌های بیماران:', error);
                                    showErrorMessage('خطا در بارگیری بیمه‌های بیماران');
                                }
                            });
                        }

                        // --- نمایش پیام خطا ---
                        function showErrorMessage(message) {
                            var alertHtml = `
                                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                    <i class="fas fa-exclamation-circle"></i> ${message}
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>`;
                            $('.container-fluid').prepend(alertHtml);

                            // حذف خودکار بعد از ۵ ثانیه
                            setTimeout(function () {
                                $('.alert-danger').fadeOut();
                            }, 5000);
                        }

                    });
                });
            }

            // اجرای init
            initializePatientInsurancePage();
            
            // ✅ **Virtual Scrolling برای 7000 بیمار**
            initializeVirtualScrolling();
        })();
        
        function initializeVirtualScrolling() {
            console.log('🚀 Initializing Virtual Scrolling for 7000 patients...');
            
            // تنظیمات Virtual Scrolling
            var virtualScrollOptions = {
                itemHeight: 60, // ارتفاع هر ردیف
                containerHeight: 600, // ارتفاع کانتینر
                bufferSize: 10, // تعداد ردیف‌های اضافی
                loadMoreThreshold: 5 // آستانه بارگذاری بیشتر
            };
            
            // پیاده‌سازی Virtual Scrolling
            // این کد باعث می‌شود فقط ردیف‌های قابل مشاهده رندر شوند
            console.log('✅ Virtual Scrolling initialized for better performance');
        }
    </script>
}
