@model ClinicApp.Models.Entities.Payment.PaymentTransaction

<div class="col-md-6 col-lg-4 mb-3">
    <div class="card h-100 border-0 shadow-sm payment-card" data-id="@Model.Id">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h6 class="mb-0">#@Model.Id</h6>
                <span class="badge @GetPaymentStatusBadgeClass(Model.Status)">
                    @GetPaymentStatusDisplayName(Model.Status)
                </span>
            </div>
        </div>
        <div class="card-body">
            <div class="row g-2">
                <div class="col-12">
                    <strong class="text-success fs-5">
                        @Model.Amount.ToString("N0") تومان
                    </strong>
                </div>
                <div class="col-12">
                    <small class="text-muted">
                        <i class="fa fa-calendar me-1"></i>
                        @Model.CreatedAt.ToString("yyyy/MM/dd HH:mm")
                    </small>
                </div>
                <div class="col-12">
                    <span class="badge @GetPaymentMethodBadgeClass(Model.Method)">
                        @GetPaymentMethodDisplayName(Model.Method)
                    </span>
                </div>
                @if (!string.IsNullOrEmpty(Model.ReferenceCode))
                {
                    <div class="col-12">
                        <small class="text-muted">
                            <i class="fa fa-code me-1"></i>
                            @Model.ReferenceCode
                        </small>
                    </div>
                }
                @if (Model.Patient != null)
                {
                    <div class="col-12">
                        <small class="text-muted">
                            <i class="fa fa-user me-1"></i>
                            @Model.Patient.FirstName @Model.Patient.LastName
                        </small>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="col-12">
                        <small class="text-muted">
                            <i class="fa fa-comment me-1"></i>
                            @(Model.Description.Length > 50 ? Model.Description.Substring(0, 50) + "..." : Model.Description)
                        </small>
                    </div>
                }
            </div>
        </div>
        <div class="card-footer bg-transparent">
            <div class="btn-group w-100" role="group">
                @Html.ActionLink("جزئیات", "Details", new { id = Model.Id }, new { 
                    @class = "btn btn-outline-info btn-sm"
                })
                @Html.ActionLink("ویرایش", "Edit", new { id = Model.Id }, new { 
                    @class = "btn btn-outline-warning btn-sm"
                })
                <button type="button" class="btn btn-outline-danger btn-sm delete-btn" 
                        data-id="@Model.Id" 
                        data-amount="@Model.Amount"
                        title="حذف تراکنش">
                    <i class="fa fa-trash"></i>
                </button>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetPaymentMethodBadgeClass(ClinicApp.Models.Enums.PaymentMethod method)
    {
        return method switch
        {
            ClinicApp.Models.Enums.PaymentMethod.Cash => "bg-success",
            ClinicApp.Models.Enums.PaymentMethod.POS => "bg-info",
            ClinicApp.Models.Enums.PaymentMethod.Online => "bg-primary",
            ClinicApp.Models.Enums.PaymentMethod.Debt => "bg-warning",
            _ => "bg-secondary"
        };
    }

    string GetPaymentStatusBadgeClass(ClinicApp.Models.Enums.PaymentStatus status)
    {
        return status switch
        {
            ClinicApp.Models.Enums.PaymentStatus.Success => "bg-success",
            ClinicApp.Models.Enums.PaymentStatus.Failed => "bg-danger",
            ClinicApp.Models.Enums.PaymentStatus.Pending => "bg-warning",
            ClinicApp.Models.Enums.PaymentStatus.Canceled => "bg-secondary",
            _ => "bg-secondary"
        };
    }

    string GetPaymentMethodDisplayName(ClinicApp.Models.Enums.PaymentMethod method)
    {
        return method switch
        {
            ClinicApp.Models.Enums.PaymentMethod.Cash => "نقدی",
            ClinicApp.Models.Enums.PaymentMethod.POS => "کارت",
            ClinicApp.Models.Enums.PaymentMethod.Online => "آنلاین",
            ClinicApp.Models.Enums.PaymentMethod.Debt => "بدهی",
            _ => method.ToString()
        };
    }

    string GetPaymentStatusDisplayName(ClinicApp.Models.Enums.PaymentStatus status)
    {
        return status switch
        {
            ClinicApp.Models.Enums.PaymentStatus.Success => "موفق",
            ClinicApp.Models.Enums.PaymentStatus.Failed => "ناموفق",
            ClinicApp.Models.Enums.PaymentStatus.Pending => "در انتظار",
            ClinicApp.Models.Enums.PaymentStatus.Canceled => "لغو شده",
            _ => status.ToString()
        };
    }
}
