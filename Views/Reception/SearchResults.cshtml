@model ClinicApp.ViewModels.Reception.ReceptionSearchViewModel

@{
    ViewBag.Title = "نتایج جستجوی پذیرش";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="search-results-container">
    <!-- Header -->
    <div class="search-header">
        <div class="header-content">
            <h1 class="search-title">
                <i class="fas fa-search me-3"></i>
                نتایج جستجوی پذیرش
            </h1>
            <p class="search-subtitle">@Model.SearchMessage</p>
        </div>
        <div class="header-actions">
            <a href="@Url.Action("Index")" class="btn btn-outline-primary">
                <i class="fas fa-arrow-right me-2"></i>
                بازگشت به صفحه اصلی
            </a>
            <button type="button" class="btn btn-primary" data-action="new-search">
                <i class="fas fa-search me-2"></i>
                جستجوی جدید
            </button>
        </div>
    </div>

    <!-- Search Criteria Display -->
    <div class="search-criteria">
        <div class="criteria-header">
            <h6 class="criteria-title">
                <i class="fas fa-filter me-2"></i>
                معیارهای جستجو
            </h6>
        </div>
        <div class="criteria-content">
            <div class="criteria-grid">
                @if (!string.IsNullOrEmpty(Model.PatientName))
                {
                    <div class="criteria-item">
                        <span class="criteria-label">نام بیمار:</span>
                        <span class="criteria-value">@Model.PatientName</span>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.NationalCode))
                {
                    <div class="criteria-item">
                        <span class="criteria-label">کد ملی:</span>
                        <span class="criteria-value">@Model.NationalCode</span>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.DoctorName))
                {
                    <div class="criteria-item">
                        <span class="criteria-label">نام پزشک:</span>
                        <span class="criteria-value">@Model.DoctorName</span>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.Status))
                {
                    <div class="criteria-item">
                        <span class="criteria-label">وضعیت:</span>
                        <span class="criteria-value">@Model.Status</span>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.Type))
                {
                    <div class="criteria-item">
                        <span class="criteria-label">نوع:</span>
                        <span class="criteria-value">@Model.Type</span>
                    </div>
                }
                @if (Model.StartDate.HasValue)
                {
                    <div class="criteria-item">
                        <span class="criteria-label">از تاریخ:</span>
                        <span class="criteria-value">@Model.StartDate.Value.ToString("yyyy/MM/dd", System.Globalization.CultureInfo.InvariantCulture)</span>
                    </div>
                }
                @if (Model.EndDate.HasValue)
                {
                    <div class="criteria-item">
                        <span class="criteria-label">تا تاریخ:</span>
                        <span class="criteria-value">@Model.EndDate.Value.ToString("yyyy/MM/dd", System.Globalization.CultureInfo.InvariantCulture)</span>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Search Results -->
    <div class="search-results">
        @if (Model.HasResults)
        {
            <div class="results-header">
                <div class="results-info">
                    <span class="results-count">تعداد نتایج: @Model.TotalResults</span>
                    <span class="results-pages">صفحه @Model.PageNumber از @Model.TotalPages</span>
                </div>
                <div class="results-actions">
                    <button type="button" class="btn btn-outline-secondary" data-action="export-results">
                        <i class="fas fa-download me-2"></i>
                        خروجی Excel
                    </button>
                    <button type="button" class="btn btn-outline-secondary" data-action="print-results">
                        <i class="fas fa-print me-2"></i>
                        چاپ
                    </button>
                </div>
            </div>

            <div class="results-table">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>شناسه</th>
                            <th>نام بیمار</th>
                            <th>کد ملی</th>
                            <th>نام پزشک</th>
                            <th>تاریخ پذیرش</th>
                            <th>وضعیت</th>
                            <th>نوع</th>
                            <th>مجموع مبلغ</th>
                            <th>مبلغ پرداخت شده</th>
                            <th>مبلغ باقی‌مانده</th>
                            <th>عملیات</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var reception in Model.SearchResults)
                        {
                            <tr>
                                <td>@reception.ReceptionId</td>
                                <td>@reception.PatientFullName</td>
                                <td>@reception.PatientNationalCode</td>
                                <td>@reception.DoctorFullName</td>
                                <td>@reception.ReceptionDate</td>
                                <td>
                                    <span class="badge badge-@GetStatusBadgeClass(reception.Status)">
                                        @reception.Status
                                    </span>
                                </td>
                                <td>
                                    <span class="badge badge-@GetTypeBadgeClass(reception.Type)">
                                        @reception.Type
                                    </span>
                                </td>
                                <td>@reception.TotalAmount.ToString("N0", System.Globalization.CultureInfo.InvariantCulture) تومان</td>
                                <td>@reception.PaidAmount.ToString("N0", System.Globalization.CultureInfo.InvariantCulture) تومان</td>
                                <td>@reception.RemainingAmount.ToString("N0", System.Globalization.CultureInfo.InvariantCulture) تومان</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("Details", new { id = reception.ReceptionId })" 
                                           class="btn btn-sm btn-outline-primary" title="جزئیات">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="@Url.Action("Edit", new { id = reception.ReceptionId })" 
                                           class="btn btn-sm btn-outline-warning" title="ویرایش">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a href="@Url.Action("Delete", new { id = reception.ReceptionId })" 
                                           class="btn btn-sm btn-outline-danger" title="حذف">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <div class="pagination-container">
                    <nav aria-label="صفحه‌بندی نتایج">
                        <ul class="pagination justify-content-center">
                            @if (Model.PageNumber > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Search", new { 
                                        pageNumber = Model.PageNumber - 1, 
                                        pageSize = Model.PageSize,
                                        PatientName = Model.PatientName,
                                        NationalCode = Model.NationalCode,
                                        DoctorName = Model.DoctorName,
                                        Status = Model.Status,
                                        Type = Model.Type,
                                        StartDate = Model.StartDate,
                                        EndDate = Model.EndDate,
                                        SearchTerm = Model.SearchTerm
                                    })">
                                        <i class="fas fa-chevron-right"></i>
                                    </a>
                                </li>
                            }

                            @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                            {
                                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Search", new { 
                                        pageNumber = i, 
                                        pageSize = Model.PageSize,
                                        PatientName = Model.PatientName,
                                        NationalCode = Model.NationalCode,
                                        DoctorName = Model.DoctorName,
                                        Status = Model.Status,
                                        Type = Model.Type,
                                        StartDate = Model.StartDate,
                                        EndDate = Model.EndDate,
                                        SearchTerm = Model.SearchTerm
                                    })">@i</a>
                                </li>
                            }

                            @if (Model.PageNumber < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Search", new { 
                                        pageNumber = Model.PageNumber + 1, 
                                        pageSize = Model.PageSize,
                                        PatientName = Model.PatientName,
                                        NationalCode = Model.NationalCode,
                                        DoctorName = Model.DoctorName,
                                        Status = Model.Status,
                                        Type = Model.Type,
                                        StartDate = Model.StartDate,
                                        EndDate = Model.EndDate,
                                        SearchTerm = Model.SearchTerm
                                    })">
                                        <i class="fas fa-chevron-left"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            }
        }
        else
        {
            <div class="no-results">
                <div class="no-results-content">
                    <i class="fas fa-search fa-3x text-muted mb-3"></i>
                    <h5 class="no-results-title">هیچ نتیجه‌ای یافت نشد</h5>
                    <p class="no-results-message">
                        با معیارهای جستجوی شما هیچ پذیرشی یافت نشد. لطفاً معیارهای جستجو را تغییر دهید.
                    </p>
                    <div class="no-results-actions">
                        <a href="@Url.Action("Index")" class="btn btn-primary">
                            <i class="fas fa-arrow-right me-2"></i>
                            بازگشت به صفحه اصلی
                        </a>
                        <button type="button" class="btn btn-outline-primary" data-action="new-search">
                            <i class="fas fa-search me-2"></i>
                            جستجوی جدید
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Styles -->
<style>
.search-results-container {
    min-height: 100vh;
    background: #f8f9fa;
    padding: 20px;
}

.search-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
    padding: 20px;
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.search-title {
    margin: 0;
    font-size: 28px;
    font-weight: 700;
    color: #333;
}

.search-subtitle {
    margin: 5px 0 0 0;
    color: #6c757d;
    font-size: 14px;
}

.header-actions {
    display: flex;
    gap: 10px;
}

.search-criteria {
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    margin-bottom: 30px;
    overflow: hidden;
}

.criteria-header {
    padding: 15px 20px;
    background: #f8f9fa;
    border-bottom: 1px solid #e0e0e0;
}

.criteria-title {
    margin: 0;
    font-size: 16px;
    font-weight: 600;
    color: #333;
}

.criteria-content {
    padding: 20px;
}

.criteria-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 15px;
}

.criteria-item {
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.criteria-label {
    font-size: 12px;
    color: #6c757d;
    font-weight: 500;
}

.criteria-value {
    font-size: 14px;
    color: #333;
    font-weight: 600;
}

.search-results {
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    overflow: hidden;
}

.results-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    background: #f8f9fa;
    border-bottom: 1px solid #e0e0e0;
}

.results-info {
    display: flex;
    gap: 20px;
}

.results-count, .results-pages {
    font-size: 14px;
    color: #6c757d;
}

.results-actions {
    display: flex;
    gap: 10px;
}

.results-table {
    overflow-x: auto;
}

.table {
    margin: 0;
}

.table th {
    background: #f8f9fa;
    border-top: none;
    font-weight: 600;
    color: #333;
    white-space: nowrap;
}

.table td {
    vertical-align: middle;
    white-space: nowrap;
}

.badge {
    font-size: 11px;
    padding: 4px 8px;
}

.badge-success {
    background-color: #28a745;
}

.badge-warning {
    background-color: #ffc107;
    color: #333;
}

.badge-danger {
    background-color: #dc3545;
}

.badge-info {
    background-color: #17a2b8;
}

.badge-secondary {
    background-color: #6c757d;
}

.pagination-container {
    padding: 20px;
    background: #f8f9fa;
    border-top: 1px solid #e0e0e0;
}

.pagination {
    margin: 0;
}

.page-link {
    color: #007bff;
    border-color: #dee2e6;
}

.page-link:hover {
    color: #0056b3;
    background-color: #e9ecef;
    border-color: #dee2e6;
}

.page-item.active .page-link {
    background-color: #007bff;
    border-color: #007bff;
}

.no-results {
    padding: 60px 20px;
    text-align: center;
}

.no-results-content {
    max-width: 400px;
    margin: 0 auto;
}

.no-results-title {
    margin: 20px 0 10px 0;
    color: #333;
    font-weight: 600;
}

.no-results-message {
    margin: 0 0 30px 0;
    color: #6c757d;
    line-height: 1.6;
}

.no-results-actions {
    display: flex;
    gap: 15px;
    justify-content: center;
}

@media (max-width: 768px) {
    .search-header {
        flex-direction: column;
        gap: 20px;
        text-align: center;
    }
    
    .header-actions {
        width: 100%;
        justify-content: center;
    }
    
    .criteria-grid {
        grid-template-columns: 1fr;
    }
    
    .results-header {
        flex-direction: column;
        gap: 15px;
        text-align: center;
    }
    
    .results-actions {
        width: 100%;
        justify-content: center;
    }
    
    .no-results-actions {
        flex-direction: column;
        align-items: center;
    }
}
</style>

<!-- JavaScript -->
<script>
$(document).ready(function() {
    initializeSearchResults();
});

function initializeSearchResults() {
    // Initialize event handlers
    initializeEventHandlers();
    
    // Initialize table features
    initializeTableFeatures();
}

function initializeEventHandlers() {
    // New search button
    $('[data-action="new-search"]').on('click', function() {
        window.location.href = '@Url.Action("Index")';
    });
    
    // Export results button
    $('[data-action="export-results"]').on('click', function() {
        exportResults();
    });
    
    // Print results button
    $('[data-action="print-results"]').on('click', function() {
        printResults();
    });
}

function initializeTableFeatures() {
    // Add hover effects to table rows
    $('.table tbody tr').hover(
        function() {
            $(this).addClass('table-hover');
        },
        function() {
            $(this).removeClass('table-hover');
        }
    );
}

function exportResults() {
    // Implement Excel export functionality
    showNotification('در حال آماده‌سازی فایل Excel...', 'info');
    
    // TODO: Implement actual export functionality
    setTimeout(function() {
        showNotification('فایل Excel آماده شد', 'success');
    }, 2000);
}

function printResults() {
    // Print the results table
    window.print();
}

function showNotification(message, type) {
    // Create notification element
    const notification = $(`
        <div class="notification notification-${type}">
            <i class="fas fa-${getNotificationIcon(type)} me-2"></i>
            <span>${message}</span>
        </div>
    `);
    
    // Add to page
    $('body').append(notification);
    
    // Show notification
    notification.addClass('show');
    
    // Auto-hide after 3 seconds
    setTimeout(function() {
        notification.removeClass('show');
        setTimeout(function() {
            notification.remove();
        }, 300);
    }, 3000);
}

function getNotificationIcon(type) {
    switch (type) {
        case 'success': return 'check-circle';
        case 'error': return 'exclamation-circle';
        case 'warning': return 'exclamation-triangle';
        case 'info': return 'info-circle';
        default: return 'info-circle';
    }
}
</script>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "تکمیل شده" or "completed" => "success",
            "در انتظار" or "pending" => "warning",
            "لغو شده" or "cancelled" => "danger",
            "عدم حضور" or "no show" => "secondary",
            _ => "info"
        };
    }

    private string GetTypeBadgeClass(string type)
    {
        return type?.ToLower() switch
        {
            "عادی" or "normal" => "info",
            "اورژانس" or "emergency" => "danger",
            "ویژه" or "special" => "warning",
            "آنلاین" or "online" => "success",
            _ => "secondary"
        };
    }
}
