@using ClinicApp.ViewModels.Reception

<!-- Insurance Component - Medical Environment -->
<div class="insurance-component" id="insuranceComponent">
    <div class="component-header">
        <h6 class="component-title">
            <i class="fas fa-shield-alt me-2"></i>
            اطلاعات بیمه
        </h6>
        <div class="component-status" id="insuranceStatus">
            <i class="fas fa-circle text-muted"></i>
            <span>آماده</span>
        </div>
    </div>

    <div class="component-content">
        <!-- Current Insurance Display -->
        <div class="current-insurance-display" id="currentInsuranceDisplay" style="display: none;">
            <div class="insurance-summary">
                <h6 class="summary-title">
                    <i class="fas fa-info-circle me-2"></i>
                    بیمه‌های فعلی بیمار
                </h6>
                <div class="insurance-details" id="insuranceDetails">
                    <!-- Dynamic content will be loaded here -->
                </div>
            </div>
        </div>

        <!-- Insurance Management Form -->
        <div class="insurance-management">
            <div class="row">
                <div class="col-md-6">
                    <div class="insurance-card primary-insurance">
                        <div class="card-header">
                            <h6 class="card-title">
                                <i class="fas fa-shield-alt text-primary me-2"></i>
                                بیمه پایه
                            </h6>
                            <div class="card-actions">
                                <button type="button" class="btn btn-sm btn-outline-primary" id="editPrimaryInsuranceBtn">
                                    <i class="fas fa-edit"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="form-group">
                                <label class="form-label">بیمه‌گذار</label>
                                <select id="primaryInsuranceProvider" name="PrimaryInsuranceProviderId" class="form-control">
                                    <option value="">انتخاب بیمه‌گذار...</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label class="form-label">طرح بیمه</label>
                                <select id="primaryInsurancePlan" name="PrimaryInsurancePlanId" class="form-control">
                                    <option value="">انتخاب طرح...</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label class="form-label">شماره بیمه‌نامه</label>
                                <input type="text" id="primaryPolicyNumber" name="PrimaryPolicyNumber" class="form-control" placeholder="شماره بیمه‌نامه">
                            </div>
                            <div class="form-group">
                                <label class="form-label">شماره کارت بیمه</label>
                                <input type="text" id="primaryCardNumber" name="PrimaryCardNumber" class="form-control" placeholder="شماره کارت بیمه">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="insurance-card supplementary-insurance">
                        <div class="card-header">
                            <h6 class="card-title">
                                <i class="fas fa-plus-circle text-success me-2"></i>
                                بیمه تکمیلی
                            </h6>
                            <div class="card-actions">
                                <button type="button" class="btn btn-sm btn-outline-success" id="editSupplementaryInsuranceBtn">
                                    <i class="fas fa-edit"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="form-group">
                                <label class="form-label">بیمه‌گذار</label>
                                <select id="supplementaryInsuranceProvider" name="SupplementaryInsuranceProviderId" class="form-control">
                                    <option value="">انتخاب بیمه‌گذار...</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label class="form-label">طرح بیمه</label>
                                <select id="supplementaryInsurancePlan" name="SupplementaryInsurancePlanId" class="form-control">
                                    <option value="">انتخاب طرح...</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label class="form-label">شماره بیمه‌نامه</label>
                                <input type="text" id="supplementaryPolicyNumber" name="SupplementaryPolicyNumber" class="form-control" placeholder="شماره بیمه‌نامه">
                            </div>
                            <div class="form-group">
                                <label class="form-label">شماره کارت بیمه</label>
                                <input type="text" id="supplementaryCardNumber" name="SupplementaryCardNumber" class="form-control" placeholder="شماره کارت بیمه">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Insurance Actions -->
            <div class="insurance-actions">
                <div class="row">
                    <div class="col-md-4">
                        <button type="button" class="btn btn-outline-primary w-100" id="validateInsuranceBtn">
                            <i class="fas fa-check-circle me-1"></i>
                            اعتبارسنجی بیمه
                        </button>
                    </div>
                    <div class="col-md-4">
                        <button type="button" class="btn btn-outline-success w-100" id="saveInsuranceBtn">
                            <i class="fas fa-save me-1"></i>
                            ذخیره بیمه
                        </button>
                    </div>
                    <div class="col-md-4">
                        <button type="button" class="btn btn-outline-info w-100" id="loadCurrentInsuranceBtn">
                            <i class="fas fa-sync me-1"></i>
                            بارگذاری مجدد
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Insurance Component Styles -->
<style>
    .insurance-component {
        background: white;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        overflow: hidden;
        margin-bottom: 1.5rem;
    }

    .component-header {
        background: #f8f9fa;
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #e9ecef;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .component-title {
        margin: 0;
        font-weight: 600;
        color: #495057;
    }

    .component-status {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.9rem;
    }

    .component-content {
        padding: 1.5rem;
    }

    .current-insurance-display {
        background: #e8f5e8;
        border: 1px solid #28a745;
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 1.5rem;
    }

    .insurance-summary {
        background: white;
        border-radius: 6px;
        padding: 1rem;
    }

    .summary-title {
        color: #28a745;
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .insurance-details {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
    }

    .insurance-detail-item {
        background: #f8f9fa;
        padding: 0.75rem;
        border-radius: 6px;
        border-left: 4px solid #28a745;
    }

    .insurance-detail-label {
        font-size: 0.8rem;
        color: #6c757d;
        margin-bottom: 0.25rem;
    }

    .insurance-detail-value {
        font-weight: 600;
        color: #212529;
    }

    .insurance-card {
        border: 1px solid #e9ecef;
        border-radius: 8px;
        overflow: hidden;
        transition: all 0.3s ease;
        height: 100%;
    }

    .insurance-card:hover {
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        transform: translateY(-2px);
    }

    .card-header {
        background: #f8f9fa;
        padding: 1rem;
        border-bottom: 1px solid #e9ecef;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .card-title {
        margin: 0;
        font-weight: 600;
        color: #495057;
    }

    .card-actions {
        display: flex;
        gap: 0.5rem;
    }

    .card-body {
        padding: 1rem;
    }

    .primary-insurance .card-header {
        background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
        border-left: 4px solid #1976d2;
    }

    .supplementary-insurance .card-header {
        background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);
        border-left: 4px solid #28a745;
    }

    .insurance-actions {
        margin-top: 1.5rem;
        padding-top: 1rem;
        border-top: 1px solid #e9ecef;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.5rem;
    }

    .form-control {
        border: 1px solid #ced4da;
        border-radius: 6px;
        padding: 0.75rem;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }

    .btn {
        border-radius: 6px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
    }

    .btn-success {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        border: none;
    }

    /* Medical Environment Specific */
    .insurance-component.medical-critical {
        border-left: 4px solid #dc3545;
    }

    .insurance-component.medical-critical .component-header {
        background: linear-gradient(135deg, #ffebee 0%, #ffcdd2 100%);
    }

    .insurance-component.medical-critical .component-title {
        color: #c62828;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .insurance-details {
            grid-template-columns: 1fr;
        }
        
        .insurance-actions .row {
            flex-direction: column;
        }
        
        .insurance-actions .col-md-4 {
            margin-bottom: 0.5rem;
        }
    }
</style>

<!-- Insurance Component JavaScript -->
<script>
    // Wait for jQuery to be available
    function waitForJQueryInsurance() {
        if (typeof jQuery !== 'undefined' && typeof $ !== 'undefined') {
            $(document).ready(function() {
                initializeInsuranceComponent();
            });
        } else {
            setTimeout(waitForJQueryInsurance, 50);
        }
    }
    
    // Start waiting for jQuery
    waitForJQueryInsurance();

    function initializeInsuranceComponent() {
        console.log('🏥 Insurance Component Initialized');
        
        // Setup event handlers
        setupInsuranceManagement();
        setupInsuranceActions();
        
        // Listen for patient selection
        $(document).on('patientSelected', function(event, patient) {
            loadPatientInsurance(patient.patientId);
        });
    }

    function setupInsuranceManagement() {
        // Load insurance providers
        loadInsuranceProviders();
        
        // Handle provider changes
        $('#primaryInsuranceProvider, #supplementaryInsuranceProvider').on('change', function() {
            const providerId = $(this).val();
            const isPrimary = $(this).attr('id') === 'primaryInsuranceProvider';
            loadInsurancePlans(providerId, isPrimary);
        });
        
        // Handle edit buttons
        $('#editPrimaryInsuranceBtn').on('click', function() {
            editInsurance('primary');
        });
        
        $('#editSupplementaryInsuranceBtn').on('click', function() {
            editInsurance('supplementary');
        });
    }

    function setupInsuranceActions() {
        // Insurance validation
        $('#validateInsuranceBtn').on('click', function() {
            validatePatientInsurance();
        });
        
        // Insurance saving
        $('#saveInsuranceBtn').on('click', function() {
            savePatientInsurance();
        });
        
        // Load current insurance
        $('#loadCurrentInsuranceBtn').on('click', function() {
            const patientId = window.PatientIdentityComponent?.getPatientId();
            if (patientId) {
                loadPatientInsurance(patientId);
            } else {
                showError('ابتدا بیمار را انتخاب کنید');
            }
        });
    }

    function loadPatientInsurance(patientId) {
        if (!patientId) {
            console.warn('No patient ID provided for insurance loading');
            return;
        }
        
        console.log('🏥 Loading insurance for patient:', patientId);
        
        $.ajax({
            url: '@Url.Action("GetPatientInsurances", "ReceptionInsuranceForm")',
            type: 'POST',
            data: { patientId: patientId },
            dataType: 'json',
            success: function(response) {
                if (response.success && response.data) {
                    displayPatientInsurance(response.data);
                } else {
                    console.warn('No insurance data found for patient:', patientId);
                    hideCurrentInsuranceDisplay();
                }
            },
            error: function() {
                console.error('Error loading patient insurance');
                hideCurrentInsuranceDisplay();
            }
        });
    }

    function displayPatientInsurance(insuranceData) {
        console.log('🏥 Displaying patient insurance:', insuranceData);
        
        // Display current insurance information
        displayCurrentInsuranceDetails(insuranceData);
        
        // Fill form fields for editing
        if (insuranceData.primaryInsurance) {
            $('#primaryInsuranceProvider').val(insuranceData.primaryInsurance.providerId);
            $('#primaryInsurancePlan').val(insuranceData.primaryInsurance.planId);
            $('#primaryPolicyNumber').val(insuranceData.primaryInsurance.policyNumber);
            $('#primaryCardNumber').val(insuranceData.primaryInsurance.cardNumber);
        }
        
        if (insuranceData.supplementaryInsurance) {
            $('#supplementaryInsuranceProvider').val(insuranceData.supplementaryInsurance.providerId);
            $('#supplementaryInsurancePlan').val(insuranceData.supplementaryInsurance.planId);
            $('#supplementaryPolicyNumber').val(insuranceData.supplementaryInsurance.policyNumber);
            $('#supplementaryCardNumber').val(insuranceData.supplementaryInsurance.cardNumber);
        }
        
        updateComponentStatus('completed');
    }

    function displayCurrentInsuranceDetails(insuranceData) {
        const currentInsuranceDisplay = $('#currentInsuranceDisplay');
        const insuranceDetails = $('#insuranceDetails');
        
        if (!insuranceData || (!insuranceData.primaryInsurance && !insuranceData.supplementaryInsurance)) {
            hideCurrentInsuranceDisplay();
            return;
        }
        
        let detailsHtml = '';
        
        // Primary Insurance Details
        if (insuranceData.primaryInsurance) {
            detailsHtml += `
                <div class="insurance-detail-item">
                    <div class="insurance-detail-label">بیمه پایه</div>
                    <div class="insurance-detail-value">${insuranceData.primaryInsurance.providerName || 'نامشخص'}</div>
                </div>
                <div class="insurance-detail-item">
                    <div class="insurance-detail-label">طرح بیمه</div>
                    <div class="insurance-detail-value">${insuranceData.primaryInsurance.planName || 'نامشخص'}</div>
                </div>
                <div class="insurance-detail-item">
                    <div class="insurance-detail-label">شماره بیمه‌نامه</div>
                    <div class="insurance-detail-value">${insuranceData.primaryInsurance.policyNumber || 'نامشخص'}</div>
                </div>
                <div class="insurance-detail-item">
                    <div class="insurance-detail-label">شماره کارت</div>
                    <div class="insurance-detail-value">${insuranceData.primaryInsurance.cardNumber || 'نامشخص'}</div>
                </div>
            `;
        }
        
        // Supplementary Insurance Details
        if (insuranceData.supplementaryInsurance) {
            detailsHtml += `
                <div class="insurance-detail-item">
                    <div class="insurance-detail-label">بیمه تکمیلی</div>
                    <div class="insurance-detail-value">${insuranceData.supplementaryInsurance.providerName || 'نامشخص'}</div>
                </div>
                <div class="insurance-detail-item">
                    <div class="insurance-detail-label">طرح بیمه تکمیلی</div>
                    <div class="insurance-detail-value">${insuranceData.supplementaryInsurance.planName || 'نامشخص'}</div>
                </div>
                <div class="insurance-detail-item">
                    <div class="insurance-detail-label">شماره بیمه‌نامه تکمیلی</div>
                    <div class="insurance-detail-value">${insuranceData.supplementaryInsurance.policyNumber || 'نامشخص'}</div>
                </div>
                <div class="insurance-detail-item">
                    <div class="insurance-detail-label">شماره کارت تکمیلی</div>
                    <div class="insurance-detail-value">${insuranceData.supplementaryInsurance.cardNumber || 'نامشخص'}</div>
                </div>
            `;
        }
        
        insuranceDetails.html(detailsHtml);
        currentInsuranceDisplay.show();
    }

    function hideCurrentInsuranceDisplay() {
        $('#currentInsuranceDisplay').hide();
    }

    function loadInsuranceProviders() {
        console.log('🏥 Loading insurance providers...');
        
        $.ajax({
            url: '@Url.Action("GetInsuranceProviders", "ReceptionInsuranceForm")',
            type: 'GET',
            dataType: 'json',
            success: function(response) {
                if (response.success && response.data) {
                    populateInsuranceProviders(response.data);
                }
            },
            error: function() {
                console.error('Error loading insurance providers');
            }
        });
    }

    function populateInsuranceProviders(providers) {
        const primarySelect = $('#primaryInsuranceProvider');
        const supplementarySelect = $('#supplementaryInsuranceProvider');
        
        primarySelect.find('option:not(:first)').remove();
        supplementarySelect.find('option:not(:first)').remove();
        
        providers.forEach(function(provider) {
            const option = `<option value="${provider.insuranceProviderId}">${provider.name}</option>`;
            primarySelect.append(option);
            supplementarySelect.append(option);
        });
    }

    function loadInsurancePlans(providerId, isPrimary) {
        if (!providerId) return;
        
        const selectId = isPrimary ? '#primaryInsurancePlan' : '#supplementaryInsurancePlan';
        const insuranceType = isPrimary ? 1 : 2; // Primary = 1, Supplementary = 2
        
        $.ajax({
            url: '@Url.Action("GetInsurancePlans", "ReceptionInsuranceForm")',
            type: 'GET',
            data: { providerId: providerId, insuranceType: insuranceType },
            dataType: 'json',
            success: function(response) {
                if (response.success && response.data) {
                    populateInsurancePlans(response.data, selectId);
                }
            },
            error: function() {
                console.error('Error loading insurance plans');
            }
        });
    }

    function populateInsurancePlans(plans, selectId) {
        const select = $(selectId);
        select.find('option:not(:first)').remove();
        
        plans.forEach(function(plan) {
            const option = `<option value="${plan.insurancePlanId}">${plan.name}</option>`;
            select.append(option);
        });
    }

    function validatePatientInsurance() {
        const patientId = window.PatientIdentityComponent?.getPatientId();
        
        if (!patientId) {
            showError('ابتدا بیمار را انتخاب کنید');
            return;
        }
        
        console.log('🔍 Validating patient insurance for:', patientId);
        
        $.ajax({
            url: '@Url.Action("ValidatePatientInsurance", "ReceptionInsuranceForm")',
            type: 'POST',
            data: { patientId: patientId },
            dataType: 'json',
            success: function(response) {
                if (response.success && response.data) {
                    displayInsuranceValidationResult(response.data);
                } else {
                    showError('خطا در اعتبارسنجی بیمه');
                }
            },
            error: function() {
                showError('خطا در اعتبارسنجی بیمه');
            }
        });
    }

    function displayInsuranceValidationResult(validationResult) {
        console.log('✅ Insurance validation result:', validationResult);
        
        if (validationResult.isValid) {
            showSuccess('بیمه معتبر است');
            updateComponentStatus('completed');
        } else {
            showError('بیمه معتبر نیست: ' + (validationResult.message || 'خطای نامشخص'));
            updateComponentStatus('error');
        }
    }

    function savePatientInsurance() {
        const patientId = window.PatientIdentityComponent?.getPatientId();
        
        if (!patientId) {
            showError('ابتدا بیمار را انتخاب کنید');
            return;
        }
        
        const insuranceData = {
            PatientId: patientId,
            PrimaryInsuranceProviderId: $('#primaryInsuranceProvider').val(),
            PrimaryInsurancePlanId: $('#primaryInsurancePlan').val(),
            PrimaryPolicyNumber: $('#primaryPolicyNumber').val(),
            PrimaryCardNumber: $('#primaryCardNumber').val(),
            SupplementaryInsuranceProviderId: $('#supplementaryInsuranceProvider').val(),
            SupplementaryInsurancePlanId: $('#supplementaryInsurancePlan').val(),
            SupplementaryPolicyNumber: $('#supplementaryPolicyNumber').val(),
            SupplementaryCardNumber: $('#supplementaryCardNumber').val()
        };
        
        console.log('💾 Saving patient insurance:', insuranceData);
        
        $.ajax({
            url: '@Url.Action("SavePatientInsurance", "ReceptionInsuranceForm")',
            type: 'POST',
            data: insuranceData,
            dataType: 'json',
            success: function(response) {
                if (response.success) {
                    showSuccess('اطلاعات بیمه با موفقیت ذخیره شد');
                    // Reload patient insurance
                    loadPatientInsurance(patientId);
                } else {
                    showError('خطا در ذخیره اطلاعات بیمه: ' + (response.message || 'خطای نامشخص'));
                }
            },
            error: function() {
                showError('خطا در ذخیره اطلاعات بیمه');
            }
        });
    }

    function editInsurance(type) {
        console.log('✏️ Editing insurance:', type);
        
        if (type === 'primary') {
            $('#primaryInsuranceProvider').focus();
        } else {
            $('#supplementaryInsuranceProvider').focus();
        }
    }

    function updateComponentStatus(status) {
        const statusElement = $('#insuranceStatus');
        const statusIcon = statusElement.find('i');
        const statusText = statusElement.find('span');
        
        statusElement.removeClass('text-muted text-success text-warning text-danger');
        statusIcon.removeClass('fa-circle fa-check fa-exclamation fa-times');
        
        switch (status) {
            case 'completed':
                statusElement.addClass('text-success');
                statusIcon.addClass('fa-check');
                statusText.text('تکمیل شده');
                break;
            case 'error':
                statusElement.addClass('text-danger');
                statusIcon.addClass('fa-times');
                statusText.text('خطا');
                break;
            case 'warning':
                statusElement.addClass('text-warning');
                statusIcon.addClass('fa-exclamation');
                statusText.text('هشدار');
                break;
            default:
                statusElement.addClass('text-muted');
                statusIcon.addClass('fa-circle');
                statusText.text('آماده');
        }
    }

    function showError(message) {
        console.error('❌ Error:', message);
        // You can implement a toast notification here
    }

    function showSuccess(message) {
        console.log('✅ Success:', message);
        // You can implement a toast notification here
    }

    // Public API for external components
    window.InsuranceComponent = {
        getInsuranceData: function() {
            return {
                primaryInsuranceProviderId: $('#primaryInsuranceProvider').val(),
                primaryInsurancePlanId: $('#primaryInsurancePlan').val(),
                primaryPolicyNumber: $('#primaryPolicyNumber').val(),
                primaryCardNumber: $('#primaryCardNumber').val(),
                supplementaryInsuranceProviderId: $('#supplementaryInsuranceProvider').val(),
                supplementaryInsurancePlanId: $('#supplementaryInsurancePlan').val(),
                supplementaryPolicyNumber: $('#supplementaryPolicyNumber').val(),
                supplementaryCardNumber: $('#supplementaryCardNumber').val()
            };
        },
        clearInsurance: function() {
            $('#primaryInsuranceProvider, #primaryInsurancePlan, #primaryPolicyNumber, #primaryCardNumber').val('');
            $('#supplementaryInsuranceProvider, #supplementaryInsurancePlan, #supplementaryPolicyNumber, #supplementaryCardNumber').val('');
            hideCurrentInsuranceDisplay();
            updateComponentStatus('pending');
        }
    };
</script>
