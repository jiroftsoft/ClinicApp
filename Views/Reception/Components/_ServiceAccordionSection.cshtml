@using ClinicApp.ViewModels.Reception
@using ClinicApp.Constants
@model ServiceAccordionViewModel

<!-- بخش انتخاب خدمات - آکاردئون -->
<div class="service-accordion-section" id="serviceAccordionSection">
    
    <!-- Header بخش -->
    <div class="section-header">
        <div class="section-title">
            <h5 class="mb-0">
                <i class="fas fa-stethoscope me-2"></i>
                انتخاب خدمات
            </h5>
            <p class="section-subtitle mb-0">خدمات درمانی و محاسبه هزینه</p>
        </div>
        <div class="section-actions">
            <button type="button" class="btn btn-outline-primary btn-sm" id="loadServicesBtn">
                <i class="fas fa-sync me-1"></i>
                بارگذاری خدمات
            </button>
            <button type="button" class="btn btn-outline-success btn-sm" id="calculateServicesBtn">
                <i class="fas fa-calculator me-1"></i>
                محاسبه هزینه
            </button>
        </div>
    </div>

    <!-- محتوای بخش -->
    <div class="section-content">
        <div class="row">
            <!-- ستون چپ: انتخاب خدمات -->
            <div class="col-lg-8">
                <div class="service-selection-card">
                    <div class="card-header">
                        <h6 class="card-title mb-0">
                            <i class="fas fa-list me-2"></i>
                            انتخاب خدمات
                        </h6>
                        <span class="badge bg-primary">الزامی</span>
                    </div>
                    <div class="card-body">
                        <!-- دسته‌بندی خدمات -->
                        <div class="form-group mb-3">
                            <label class="form-label">
                                <i class="fas fa-folder me-1"></i>
                                دسته‌بندی خدمات
                            </label>
                            <select class="form-select select2-category" 
                                    id="serviceCategory" 
                                    data-placeholder="انتخاب دسته‌بندی">
                                <option value="">انتخاب کنید</option>
                            </select>
                        </div>

                        <!-- جستجوی خدمات -->
                        <div class="form-group mb-3">
                            <label class="form-label">
                                <i class="fas fa-search me-1"></i>
                                جستجوی خدمات
                            </label>
                            <div class="input-group">
                                <input type="text" 
                                       class="form-control" 
                                       id="serviceSearch" 
                                       placeholder="جستجو با کد یا نام خدمت...">
                                <button class="btn btn-outline-secondary" type="button" id="searchServiceBtn">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>

                        <!-- لیست خدمات -->
                        <div class="services-list" id="servicesList">
                            <div class="list-header">
                                <h6 class="list-title">خدمات موجود</h6>
                                <div class="list-actions">
                                    <button type="button" class="btn btn-outline-primary btn-sm" id="selectAllServicesBtn">
                                        <i class="fas fa-check-square me-1"></i>
                                        انتخاب همه
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary btn-sm" id="clearAllServicesBtn">
                                        <i class="fas fa-square me-1"></i>
                                        پاک کردن همه
                                    </button>
                                </div>
                            </div>
                            <div class="services-container" id="servicesContainer">
                                <!-- خدمات در اینجا بارگذاری می‌شوند -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- ستون راست: خلاصه انتخاب -->
            <div class="col-lg-4">
                <div class="service-summary-card">
                    <div class="card-header">
                        <h6 class="card-title mb-0">
                            <i class="fas fa-calculator me-2"></i>
                            خلاصه انتخاب
                        </h6>
                        <span class="badge bg-success">محاسبه شده</span>
                    </div>
                    <div class="card-body">
                        <!-- خدمات انتخاب شده -->
                        <div class="selected-services" id="selectedServices">
                            <h6 class="summary-title">خدمات انتخاب شده</h6>
                            <div class="services-list" id="selectedServicesList">
                                <div class="empty-state">
                                    <i class="fas fa-info-circle"></i>
                                    <p>هیچ خدمتی انتخاب نشده است</p>
                                </div>
                            </div>
                        </div>

                        <!-- محاسبات -->
                        <div class="calculations" id="serviceCalculations">
                            <h6 class="summary-title">محاسبات</h6>
                            <div class="calculation-item">
                                <span class="calculation-label">مبلغ کل خدمات:</span>
                                <span class="calculation-value" id="totalServiceAmount">0 ریال</span>
                            </div>
                            <div class="calculation-item">
                                <span class="calculation-label">سهم بیمه:</span>
                                <span class="calculation-value" id="totalInsuranceShare">0 ریال</span>
                            </div>
                            <div class="calculation-item">
                                <span class="calculation-label">سهم بیمار:</span>
                                <span class="calculation-value" id="totalPatientShare">0 ریال</span>
                            </div>
                            <div class="calculation-item total">
                                <span class="calculation-label">مبلغ قابل پرداخت:</span>
                                <span class="calculation-value" id="payableAmount">0 ریال</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- CSS تخصصی بخش خدمات -->
<style>
    .service-accordion-section {
        background: #ffffff;
        border-radius: 8px;
        overflow: hidden;
    }

    .section-header {
        background: #f8f9fa;
        padding: 1.5rem;
        border-bottom: 1px solid #e9ecef;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .section-title h5 {
        color: #333;
        font-weight: 600;
    }

    .section-subtitle {
        color: #666;
        font-size: 0.9rem;
    }

    .section-actions {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .section-content {
        padding: 2rem;
    }

    .service-selection-card,
    .service-summary-card {
        border: 1px solid #e9ecef;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        height: 100%;
        transition: all 0.3s ease;
    }

    .service-selection-card:hover,
    .service-summary-card:hover {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    }

    .service-selection-card {
        border-left: 4px solid #007bff;
    }

    .service-summary-card {
        border-left: 4px solid #28a745;
    }

    .card-header {
        background: #f8f9fa;
        border-bottom: 1px solid #e9ecef;
        padding: 1rem 1.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .card-title {
        color: #333;
        font-weight: 600;
        display: flex;
        align-items: center;
    }

    .badge {
        font-size: 0.75rem;
        padding: 0.25rem 0.5rem;
    }

    .card-body {
        padding: 1.5rem;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-label {
        font-weight: 500;
        color: #333;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
    }

    .form-control,
    .form-select {
        border: 1px solid #ced4da;
        border-radius: 6px;
        padding: 0.75rem;
        transition: all 0.3s ease;
    }

    .form-control:focus,
    .form-select:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .input-group .btn {
        border-left: none;
    }

    .services-list {
        margin-top: 1rem;
    }

    .list-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid #e9ecef;
    }

    .list-title {
        margin: 0;
        font-weight: 600;
        color: #333;
    }

    .list-actions {
        display: flex;
        gap: 0.5rem;
    }

    .services-container {
        max-height: 400px;
        overflow-y: auto;
        border: 1px solid #e9ecef;
        border-radius: 6px;
        padding: 1rem;
    }

    .service-item {
        display: flex;
        align-items: center;
        padding: 0.75rem;
        border: 1px solid #e9ecef;
        border-radius: 6px;
        margin-bottom: 0.5rem;
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .service-item:hover {
        background: #f8f9fa;
        border-color: #007bff;
    }

    .service-item.selected {
        background: #e3f2fd;
        border-color: #007bff;
    }

    .service-checkbox {
        margin-right: 0.75rem;
    }

    .service-info {
        flex: 1;
    }

    .service-name {
        font-weight: 600;
        color: #333;
        margin-bottom: 0.25rem;
    }

    .service-code {
        font-size: 0.85rem;
        color: #666;
        margin-bottom: 0.25rem;
    }

    .service-price {
        font-weight: 600;
        color: #28a745;
    }

    .service-quantity {
        margin-left: 1rem;
        width: 80px;
    }

    .selected-services {
        margin-bottom: 2rem;
    }

    .summary-title {
        font-weight: 600;
        color: #333;
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid #e9ecef;
    }

    .empty-state {
        text-align: center;
        padding: 2rem;
        color: #666;
    }

    .empty-state i {
        font-size: 2rem;
        margin-bottom: 1rem;
        opacity: 0.5;
    }

    .calculations {
        background: #f8f9fa;
        border-radius: 6px;
        padding: 1rem;
    }

    .calculation-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.5rem 0;
        border-bottom: 1px solid #e9ecef;
    }

    .calculation-item:last-child {
        border-bottom: none;
    }

    .calculation-item.total {
        border-top: 2px solid #007bff;
        margin-top: 0.5rem;
        padding-top: 0.75rem;
        font-weight: 700;
        color: #333;
    }

    .calculation-label {
        font-size: 0.9rem;
        color: #666;
    }

    .calculation-value {
        font-weight: 600;
        color: #333;
    }

    .calculation-item.total .calculation-value {
        color: #007bff;
        font-size: 1.1rem;
    }

    /* Select2 Customization */
    .select2-container {
        width: 100% !important;
    }

    .select2-container--default .select2-selection--single {
        height: 45px;
        border: 1px solid #ced4da;
        border-radius: 6px;
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 43px;
        padding-left: 12px;
    }

    .select2-container--default .select2-selection--single .select2-selection__arrow {
        height: 43px;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .section-header {
            flex-direction: column;
            align-items: stretch;
        }

        .section-actions {
            justify-content: center;
        }

        .section-content {
            padding: 1rem;
        }

        .list-header {
            flex-direction: column;
            align-items: stretch;
            gap: 1rem;
        }

        .list-actions {
            justify-content: center;
        }
    }
</style>

<!-- JavaScript تخصصی بخش خدمات -->
<script>
    $(document).ready(function() {
        initializeServiceSection();
    });

    function initializeServiceSection() {
        console.log('🔧 Initializing Service Section...');
        
        // تنظیمات اولیه
        setupSelect2();
        setupServiceEvents();
        setupServiceValidation();
        setupServiceActions();
        
        // بارگذاری دسته‌بندی‌ها
        loadServiceCategories();
        
        console.log('✅ Service Section initialized successfully');
    }

    function setupSelect2() {
        // تنظیمات Select2 برای دسته‌بندی‌ها
        $('.select2-category').select2({
            placeholder: 'انتخاب کنید...',
            allowClear: true,
            width: '100%',
            language: {
                noResults: function() {
                    return 'نتیجه‌ای یافت نشد';
                },
                searching: function() {
                    return 'در حال جستجو...';
                }
            }
        });
    }

    function setupServiceEvents() {
        // تغییر دسته‌بندی
        $('#serviceCategory').on('change', function() {
            const categoryId = $(this).val();
            if (categoryId) {
                loadServicesByCategory(categoryId);
            } else {
                loadAllServices();
            }
        });

        // جستجوی خدمات
        $('#searchServiceBtn').on('click', function() {
            searchServices();
        });

        $('#serviceSearch').on('keypress', function(e) {
            if (e.which === 13) {
                searchServices();
            }
        });

        // انتخاب/لغو انتخاب همه خدمات
        $('#selectAllServicesBtn').on('click', function() {
            selectAllServices();
        });

        $('#clearAllServicesBtn').on('click', function() {
            clearAllServices();
        });

        // تغییر مقدار خدمات
        $(document).on('change', '.service-quantity', function() {
            updateServiceQuantity($(this));
        });
    }

    function setupServiceValidation() {
        // اعتبارسنجی Real-time
        $(document).on('change', '.service-checkbox', function() {
            validateServiceSelection();
        });
    }

    function setupServiceActions() {
        // دکمه بارگذاری خدمات
        $('#loadServicesBtn').on('click', function() {
            loadAllServices();
        });

        // دکمه محاسبه هزینه
        $('#calculateServicesBtn').on('click', function() {
            calculateServiceCosts();
        });
    }

    function loadServiceCategories() {
        $.ajax({
            url: '@Url.Action("GetServiceCategories", "ReceptionServiceManagement")',
            type: 'GET',
            dataType: 'json',
            success: function(response) {
                if (response.success && response.data) {
                    populateServiceCategories(response.data);
                } else {
                    showNotification('خطا در بارگذاری دسته‌بندی‌ها', 'error');
                }
            },
            error: function() {
                showNotification('خطا در بارگذاری دسته‌بندی‌ها', 'error');
            }
        });
    }

    function populateServiceCategories(categories) {
        const select = $('#serviceCategory');
        select.empty().append('<option value="">همه دسته‌بندی‌ها</option>');
        
        categories.forEach(function(category) {
            select.append(`<option value="${category.id}">${category.name}</option>`);
        });
        
        select.trigger('change');
    }

    function loadAllServices() {
        $.ajax({
            url: '@Url.Action("GetAllServices", "ReceptionServiceManagement")',
            type: 'GET',
            dataType: 'json',
            success: function(response) {
                if (response.success && response.data) {
                    populateServices(response.data);
                } else {
                    showNotification('خطا در بارگذاری خدمات', 'error');
                }
            },
            error: function() {
                showNotification('خطا در بارگذاری خدمات', 'error');
            }
        });
    }

    function loadServicesByCategory(categoryId) {
        $.ajax({
            url: '@Url.Action("GetServicesByCategory", "ReceptionServiceManagement")',
            type: 'GET',
            data: { categoryId: categoryId },
            dataType: 'json',
            success: function(response) {
                if (response.success && response.data) {
                    populateServices(response.data);
                } else {
                    showNotification('خطا در بارگذاری خدمات', 'error');
                }
            },
            error: function() {
                showNotification('خطا در بارگذاری خدمات', 'error');
            }
        });
    }

    function searchServices() {
        const searchTerm = $('#serviceSearch').val().trim();
        
        if (!searchTerm) {
            loadAllServices();
            return;
        }
        
        $.ajax({
            url: '@Url.Action("SearchServices", "ReceptionServiceManagement")',
            type: 'GET',
            data: { searchTerm: searchTerm },
            dataType: 'json',
            success: function(response) {
                if (response.success && response.data) {
                    populateServices(response.data);
                } else {
                    showNotification('نتیجه‌ای یافت نشد', 'info');
                }
            },
            error: function() {
                showNotification('خطا در جستجو', 'error');
            }
        });
    }

    function populateServices(services) {
        const container = $('#servicesContainer');
        container.empty();
        
        if (services.length === 0) {
            container.html('<div class="empty-state"><i class="fas fa-info-circle"></i><p>هیچ خدمتی یافت نشد</p></div>');
            return;
        }
        
        services.forEach(function(service) {
            const serviceItem = createServiceItem(service);
            container.append(serviceItem);
        });
    }

    function createServiceItem(service) {
        return $(`
            <div class="service-item" data-service-id="${service.serviceId}">
                <div class="service-checkbox">
                    <input type="checkbox" class="form-check-input service-checkbox" 
                           data-service-id="${service.serviceId}" 
                           data-service-name="${service.serviceName}"
                           data-service-code="${service.serviceCode}"
                           data-service-price="${service.basePrice}">
                </div>
                <div class="service-info">
                    <div class="service-name">${service.serviceName}</div>
                    <div class="service-code">کد: ${service.serviceCode}</div>
                    <div class="service-price">${formatCurrency(service.basePrice)}</div>
                </div>
                <div class="service-quantity">
                    <input type="number" class="form-control service-quantity" 
                           value="1" min="1" max="99" 
                           data-service-id="${service.serviceId}">
                </div>
            </div>
        `);
    }

    function selectAllServices() {
        $('.service-checkbox').prop('checked', true);
        $('.service-item').addClass('selected');
        updateSelectedServices();
    }

    function clearAllServices() {
        $('.service-checkbox').prop('checked', false);
        $('.service-item').removeClass('selected');
        updateSelectedServices();
    }

    function updateServiceQuantity(quantityInput) {
        const serviceId = quantityInput.data('service-id');
        const quantity = parseInt(quantityInput.val()) || 1;
        
        if (quantity < 1) {
            quantityInput.val(1);
        }
        
        updateSelectedServices();
    }

    function validateServiceSelection() {
        const selectedServices = $('.service-checkbox:checked').length;
        return selectedServices > 0;
    }

    function updateSelectedServices() {
        const selectedServices = [];
        
        $('.service-checkbox:checked').each(function() {
            const checkbox = $(this);
            const serviceId = checkbox.data('service-id');
            const serviceName = checkbox.data('service-name');
            const serviceCode = checkbox.data('service-code');
            const servicePrice = parseFloat(checkbox.data('service-price'));
            const quantity = parseInt($(`.service-quantity[data-service-id="${serviceId}"]`).val()) || 1;
            
            selectedServices.push({
                serviceId: serviceId,
                serviceName: serviceName,
                serviceCode: serviceCode,
                basePrice: servicePrice,
                quantity: quantity,
                totalPrice: servicePrice * quantity
            });
        });
        
        displaySelectedServices(selectedServices);
        calculateServiceCosts(selectedServices);
    }

    function displaySelectedServices(services) {
        const container = $('#selectedServicesList');
        
        if (services.length === 0) {
            container.html('<div class="empty-state"><i class="fas fa-info-circle"></i><p>هیچ خدمتی انتخاب نشده است</p></div>');
            return;
        }
        
        let html = '';
        services.forEach(function(service) {
            html += `
                <div class="selected-service-item">
                    <div class="service-info">
                        <div class="service-name">${service.serviceName}</div>
                        <div class="service-code">${service.serviceCode}</div>
                    </div>
                    <div class="service-quantity">${service.quantity}</div>
                    <div class="service-total">${formatCurrency(service.totalPrice)}</div>
                </div>
            `;
        });
        
        container.html(html);
    }

    function calculateServiceCosts(services) {
        if (!services || services.length === 0) {
            updateCalculations(0, 0, 0, 0);
            return;
        }
        
        const totalAmount = services.reduce((sum, service) => sum + service.totalPrice, 0);
        
        // درخواست محاسبه از سرور
        $.ajax({
            url: '@Url.Action("CalculateServiceCosts", "ReceptionServiceManagement")',
            type: 'POST',
            data: { 
                services: services,
                patientId: $('#patientNationalCode').val()
            },
            dataType: 'json',
            success: function(response) {
                if (response.success && response.data) {
                    const calculation = response.data;
                    updateCalculations(
                        totalAmount,
                        calculation.insuranceShare,
                        calculation.patientShare,
                        calculation.payableAmount
                    );
                } else {
                    updateCalculations(totalAmount, 0, totalAmount, totalAmount);
                }
            },
            error: function() {
                updateCalculations(totalAmount, 0, totalAmount, totalAmount);
            }
        });
    }

    function updateCalculations(totalAmount, insuranceShare, patientShare, payableAmount) {
        $('#totalServiceAmount').text(formatCurrency(totalAmount));
        $('#totalInsuranceShare').text(formatCurrency(insuranceShare));
        $('#totalPatientShare').text(formatCurrency(patientShare));
        $('#payableAmount').text(formatCurrency(payableAmount));
    }

    function formatCurrency(amount) {
        return new Intl.NumberFormat('fa-IR').format(amount) + ' ریال';
    }

    function showNotification(message, type) {
        const alertClass = {
            'success': 'alert-success',
            'error': 'alert-danger',
            'warning': 'alert-warning',
            'info': 'alert-info'
        }[type] || 'alert-info';
        
        const alert = $(`
            <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `);
        
        $('#serviceAccordionSection').prepend(alert);
        
        setTimeout(function() {
            alert.alert('close');
        }, 5000);
    }
</script>
