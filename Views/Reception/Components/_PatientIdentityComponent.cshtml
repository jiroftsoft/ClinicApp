@using ClinicApp.ViewModels.Reception
@model ReceptionFormPatientViewModel

<!-- Patient Identity Component - Medical Environment -->
<div class="patient-identity-component" id="patientIdentityComponent">
    <div class="component-header">
        <h6 class="component-title">
            <i class="fas fa-user me-2"></i>
            اطلاعات بیمار
        </h6>
        <div class="component-status" id="patientIdentityStatus">
            <i class="fas fa-circle text-muted"></i>
            <span>آماده</span>
        </div>
    </div>

    <div class="component-content">
        <!-- National Code Search -->
        <div class="national-code-search">
            <div class="search-container">
                <label for="patientNationalCode" class="form-label">
                    <i class="fas fa-id-card me-1"></i>
                    کد ملی بیمار
                </label>
                <div class="input-group">
                    <input type="text" 
                           id="patientNationalCode" 
                           class="form-control" 
                           placeholder="کد ملی را وارد کنید"
                           maxlength="10"
                           pattern="[0-9]{10}"
                           autocomplete="off">
                    <button type="button" 
                            class="btn btn-primary" 
                            id="searchPatientBtn">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
                <div class="search-feedback" id="nationalCodeFeedback"></div>
            </div>
        </div>

        <!-- Patient Information Display -->
        <div class="patient-info-display" id="patientInfoDisplay" style="display: none;">
            <div class="patient-card">
                <div class="patient-avatar">
                    <i class="fas fa-user-md"></i>
                </div>
                <div class="patient-details">
                    <h6 class="patient-name" id="patientName"></h6>
                    <p class="patient-info" id="patientInfo"></p>
                    <div class="patient-actions">
                        <button type="button" class="btn btn-sm btn-outline-primary" id="editPatientBtn">
                            <i class="fas fa-edit me-1"></i>
                            ویرایش
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-info" id="viewHistoryBtn">
                            <i class="fas fa-history me-1"></i>
                            سوابق
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Patient Form Fields (Hidden until patient found) -->
        <div class="patient-form-fields" id="patientFormFields" style="display: none;">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label">نام</label>
                        <input type="text" id="firstName" name="FirstName" class="form-control" readonly>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label">نام خانوادگی</label>
                        <input type="text" id="lastName" name="LastName" class="form-control" readonly>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label">کد ملی</label>
                        <input type="text" id="nationalCode" name="NationalCode" class="form-control" readonly>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label">تاریخ تولد</label>
                        <input type="text" id="birthDate" name="BirthDate" class="form-control" readonly>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label">جنسیت</label>
                        <input type="text" id="gender" name="Gender" class="form-control" readonly>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label">شماره تماس</label>
                        <input type="text" id="phoneNumber" name="PhoneNumber" class="form-control" readonly>
                    </div>
                </div>
            </div>
        </div>

        <!-- Hidden Fields -->
        <input type="hidden" id="patientId" name="PatientId" value="">
    </div>
</div>

<!-- Patient Identity Component Styles -->
<style>
    .patient-identity-component {
        background: white;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        overflow: hidden;
        margin-bottom: 1.5rem;
    }

    .component-header {
        background: #f8f9fa;
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #e9ecef;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .component-title {
        margin: 0;
        font-weight: 600;
        color: #495057;
    }

    .component-status {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.9rem;
    }

    .component-content {
        padding: 1.5rem;
    }

    .national-code-search {
        margin-bottom: 1.5rem;
    }

    .search-container {
        max-width: 400px;
    }

    .form-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.5rem;
    }

    .input-group {
        position: relative;
    }

    .form-control {
        border: 1px solid #ced4da;
        border-radius: 6px;
        padding: 0.75rem;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }

    .btn {
        border-radius: 6px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
    }

    .btn-primary:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
    }

    .search-feedback {
        margin-top: 0.5rem;
        font-size: 0.9rem;
    }

    .patient-card {
        display: flex;
        align-items: center;
        background: #f8f9fa;
        padding: 1rem;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .patient-avatar {
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #1976d2;
        font-size: 1.5rem;
    }

    .patient-details {
        flex: 1;
    }

    .patient-name {
        margin: 0;
        font-weight: 600;
        color: #212529;
        font-size: 1.1rem;
    }

    .patient-info {
        margin: 0.25rem 0;
        color: #6c757d;
        font-size: 0.9rem;
    }

    .patient-actions {
        display: flex;
        gap: 0.5rem;
    }

    .patient-form-fields {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 1rem;
        margin-top: 1rem;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    /* Medical Environment Specific */
    .patient-identity-component.medical-critical {
        border-left: 4px solid #dc3545;
    }

    .patient-identity-component.medical-critical .component-header {
        background: linear-gradient(135deg, #ffebee 0%, #ffcdd2 100%);
    }

    .patient-identity-component.medical-critical .component-title {
        color: #c62828;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .patient-card {
            flex-direction: column;
            text-align: center;
        }
        
        .patient-actions {
            justify-content: center;
            margin-top: 1rem;
        }
        
        .search-container {
            max-width: 100%;
        }
    }
</style>

<!-- Patient Identity Component JavaScript -->
<script>
    // Wait for jQuery to be available
    function waitForJQuery() {
        if (typeof jQuery !== 'undefined' && typeof $ !== 'undefined') {
            $(document).ready(function() {
                initializePatientIdentityComponent();
            });
        } else {
            setTimeout(waitForJQuery, 50);
        }
    }
    
    // Start waiting for jQuery
    waitForJQuery();

    function initializePatientIdentityComponent() {
        console.log('🏥 Patient Identity Component Initialized');
        
        // Setup event handlers
        setupPatientSearch();
        setupPatientActions();
        
        // Setup validation
        setupValidation();
    }

    function setupPatientSearch() {
        // National code input validation
        $('#patientNationalCode').on('input', function() {
            const value = $(this).val();
            const feedback = $('#nationalCodeFeedback');
            
            if (value.length === 10) {
                $(this).removeClass('is-invalid').addClass('is-valid');
                feedback.removeClass('text-danger').addClass('text-success').text('کد ملی معتبر');
            } else if (value.length > 0) {
                $(this).removeClass('is-valid').addClass('is-invalid');
                feedback.removeClass('text-success').addClass('text-danger').text('کد ملی باید 10 رقم باشد');
            } else {
                $(this).removeClass('is-valid is-invalid');
                feedback.text('');
            }
        });

        // Search on Enter key
        $('#patientNationalCode').on('keypress', function(e) {
            if (e.which === 13) {
                searchPatient();
            }
        });

        // Search button click
        $('#searchPatientBtn').on('click', function() {
            searchPatient();
        });
    }

    function searchPatient() {
        const nationalCode = $('#patientNationalCode').val();
        
        if (!nationalCode || nationalCode.length !== 10) {
            showError('کد ملی باید 10 رقم باشد');
            return;
        }

        console.log('🔍 Searching patient with national code:', nationalCode);
        
        // Show loading state
        $('#searchPatientBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');
        
        $.ajax({
            url: '@Url.Action("SearchPatientByNationalCode", "ReceptionPatient")',
            type: 'POST',
            data: { nationalCode: nationalCode },
            dataType: 'json',
            success: function(response) {
                if (response.success && response.data) {
                    displayPatientInfo(response.data);
                    updateComponentStatus('completed');
                } else {
                    showError('بیمار یافت نشد');
                    updateComponentStatus('error');
                }
            },
            error: function() {
                showError('خطا در جستجوی بیمار');
                updateComponentStatus('error');
            },
            complete: function() {
                $('#searchPatientBtn').prop('disabled', false).html('<i class="fas fa-search"></i>');
            }
        });
    }

    function displayPatientInfo(patient) {
        console.log('👤 Displaying patient info:', patient);
        
        // Display patient card
        $('#patientName').text(patient.firstName + ' ' + patient.lastName);
        $('#patientInfo').text('کد ملی: ' + patient.nationalCode + ' | تاریخ تولد: ' + patient.birthDate);
        $('#patientInfoDisplay').show();
        
        // Fill form fields
        $('#patientId').val(patient.patientId);
        $('#firstName').val(patient.firstName);
        $('#lastName').val(patient.lastName);
        $('#nationalCode').val(patient.nationalCode);
        $('#birthDate').val(patient.birthDate);
        $('#gender').val(patient.gender);
        $('#phoneNumber').val(patient.phoneNumber);
        
        // Show form fields
        $('#patientFormFields').show();
        
        // Trigger patient selected event
        $(document).trigger('patientSelected', [patient]);
        
        showSuccess('اطلاعات بیمار بارگذاری شد');
    }

    function setupPatientActions() {
        // Edit patient button
        $('#editPatientBtn').on('click', function() {
            const patientId = $('#patientId').val();
            if (patientId) {
                // Open patient edit modal or redirect
                window.open('@Url.Action("Edit", "Patient")/' + patientId, '_blank');
            }
        });

        // View history button
        $('#viewHistoryBtn').on('click', function() {
            const patientId = $('#patientId').val();
            if (patientId) {
                // Trigger sidebar to show patient history
                if (typeof showSidebar === 'function') {
                    showSidebar();
                }
                // Load patient history in sidebar
                if (typeof loadPatientHistory === 'function') {
                    loadPatientHistory(patientId);
                }
            }
        });
    }

    function setupValidation() {
        // Real-time validation for national code
        $('#patientNationalCode').on('blur', function() {
            const value = $(this).val();
            if (value.length === 10) {
                // Validate national code checksum
                if (isValidNationalCode(value)) {
                    $(this).removeClass('is-invalid').addClass('is-valid');
                } else {
                    $(this).removeClass('is-valid').addClass('is-invalid');
                    showError('کد ملی نامعتبر است');
                }
            }
        });
    }

    function isValidNationalCode(nationalCode) {
        if (nationalCode.length !== 10) return false;
        
        const digits = nationalCode.split('').map(Number);
        const checkDigit = digits[9];
        
        let sum = 0;
        for (let i = 0; i < 9; i++) {
            sum += digits[i] * (10 - i);
        }
        
        const remainder = sum % 11;
        const calculatedCheckDigit = remainder < 2 ? remainder : 11 - remainder;
        
        return calculatedCheckDigit === checkDigit;
    }

    function updateComponentStatus(status) {
        const statusElement = $('#patientIdentityStatus');
        const statusIcon = statusElement.find('i');
        const statusText = statusElement.find('span');
        
        statusElement.removeClass('text-muted text-success text-warning text-danger');
        statusIcon.removeClass('fa-circle fa-check fa-exclamation fa-times');
        
        switch (status) {
            case 'completed':
                statusElement.addClass('text-success');
                statusIcon.addClass('fa-check');
                statusText.text('تکمیل شده');
                break;
            case 'error':
                statusElement.addClass('text-danger');
                statusIcon.addClass('fa-times');
                statusText.text('خطا');
                break;
            case 'warning':
                statusElement.addClass('text-warning');
                statusIcon.addClass('fa-exclamation');
                statusText.text('هشدار');
                break;
            default:
                statusElement.addClass('text-muted');
                statusIcon.addClass('fa-circle');
                statusText.text('آماده');
        }
    }

    function showError(message) {
        console.error('❌ Error:', message);
        // You can implement a toast notification here
    }

    function showSuccess(message) {
        console.log('✅ Success:', message);
        // You can implement a toast notification here
    }

    // Public API for external components
    window.PatientIdentityComponent = {
        getPatientId: function() {
            return $('#patientId').val();
        },
        getPatientInfo: function() {
            return {
                patientId: $('#patientId').val(),
                firstName: $('#firstName').val(),
                lastName: $('#lastName').val(),
                nationalCode: $('#nationalCode').val(),
                birthDate: $('#birthDate').val(),
                gender: $('#gender').val(),
                phoneNumber: $('#phoneNumber').val()
            };
        },
        clearPatient: function() {
            $('#patientNationalCode').val('');
            $('#patientInfoDisplay').hide();
            $('#patientFormFields').hide();
            $('#patientId').val('');
            updateComponentStatus('pending');
        }
    };
</script>
